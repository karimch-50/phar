import {
  GridColumn
} from "./chunk-P5OJUUFQ.js";
import {
  Button
} from "./chunk-MOF77BCW.js";
import {
  registerStyles
} from "./chunk-BBNA52CT.js";
import {
  css
} from "./chunk-CMT2GIH3.js";
import {
  defineCustomElement
} from "./chunk-JDVQIXGE.js";
import {
  html
} from "./chunk-XB4RSW42.js";

// node_modules/@vaadin/crud/src/vaadin-crud-edit.js
registerStyles(
  "vaadin-crud-edit",
  css`
    :host {
      display: block;
    }
  `,
  { moduleId: "vaadin-crud-edit-styles" }
);
var CrudEdit = class extends Button {
  static get template() {
    return html`
      <div part="icon"></div>
      <slot name="tooltip"></slot>
    `;
  }
  static get is() {
    return "vaadin-crud-edit";
  }
  /** @protected */
  ready() {
    super.ready();
    this.addEventListener("click", this.__onClick);
    this.setAttribute("aria-label", "Edit");
  }
  /** @private */
  __onClick(e) {
    const tr = e.target.parentElement.assignedSlot.parentElement.parentElement;
    tr.dispatchEvent(
      new CustomEvent("edit", { detail: { item: tr._item, index: tr.index }, bubbles: true, composed: true })
    );
  }
  /**
   * Fired when user on the icon.
   *
   * @event edit
   * @param {Object} detail.item the item to edit
   * @param {Object} detail.index the index of the item in the data set
   */
};
defineCustomElement(CrudEdit);

// node_modules/@vaadin/crud/src/vaadin-crud-edit-column.js
var CrudEditColumn = class extends GridColumn {
  static get is() {
    return "vaadin-crud-edit-column";
  }
  static get properties() {
    return {
      /**
       * Width of the cells for this column.
       * @private
       */
      width: {
        type: String,
        value: "4rem"
      },
      /**
       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.
       * @private
       */
      flexGrow: {
        type: Number,
        value: 0
      },
      /** The arial-label for the edit button */
      ariaLabel: String
    };
  }
  static get observers() {
    return ["_onRendererOrBindingChanged(_renderer, _cells, _bodyContentHidden, _cells.*, path, ariaLabel)"];
  }
  /**
   * Renders the crud edit element to the body cell.
   *
   * @override
   */
  _defaultRenderer(root, _column) {
    let edit = root.firstElementChild;
    if (!edit) {
      edit = document.createElement("vaadin-crud-edit");
      if (this.hasAttribute("theme")) {
        edit.setAttribute("theme", this.getAttribute("theme"));
      }
      root.appendChild(edit);
    }
    if (this.ariaLabel) {
      edit.setAttribute("aria-label", this.ariaLabel);
    } else {
      edit.removeAttribute("aria-label");
    }
  }
};
defineCustomElement(CrudEditColumn);

export {
  CrudEditColumn
};
/*! Bundled license information:

@vaadin/crud/src/vaadin-crud-edit.js:
  (**
   * @license
   * Copyright (c) 2000 - 2023 Vaadin Ltd.
   *
   * This program is available under Vaadin Commercial License and Service Terms.
   *
   *
   * See https://vaadin.com/commercial-license-and-service-terms for the full
   * license.
   *)

@vaadin/crud/src/vaadin-crud-edit-column.js:
  (**
   * @license
   * Copyright (c) 2000 - 2023 Vaadin Ltd.
   *
   * This program is available under Vaadin Commercial License and Service Terms.
   *
   *
   * See https://vaadin.com/commercial-license-and-service-terms for the full
   * license.
   *)
*/
//# sourceMappingURL=chunk-YQV52A53.js.map
