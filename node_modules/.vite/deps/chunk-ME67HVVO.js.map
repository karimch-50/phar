{
  "version": 3,
  "sources": ["../../@vaadin/vaadin-lumo-styles/mixins/helper.js", "../../@vaadin/vaadin-lumo-styles/mixins/required-field.js", "../../@vaadin/field-base/src/error-controller.js", "../../@vaadin/field-base/src/helper-controller.js", "../../@vaadin/field-base/src/validate-mixin.js", "../../@vaadin/field-base/src/field-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../sizing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const helper = css`\n  :host {\n    --_helper-spacing: var(--vaadin-input-field-helper-spacing, 0.4em);\n  }\n\n  :host([has-helper]) [part='helper-text']::before {\n    content: '';\n    display: block;\n    height: var(--_helper-spacing);\n  }\n\n  [part='helper-text'] {\n    display: block;\n    color: var(--vaadin-input-field-helper-color, var(--lumo-secondary-text-color));\n    font-size: var(--vaadin-input-field-helper-font-size, var(--lumo-font-size-xs));\n    line-height: var(--lumo-line-height-xs);\n    font-weight: var(--vaadin-input-field-helper-font-weight, 400);\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    transition: color 0.2s;\n  }\n\n  :host(:hover:not([readonly])) [part='helper-text'] {\n    color: var(--lumo-body-text-color);\n  }\n\n  :host([disabled]) [part='helper-text'] {\n    color: var(--lumo-disabled-text-color);\n    -webkit-text-fill-color: var(--lumo-disabled-text-color);\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text']::before {\n    display: none;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text']::after {\n    content: '';\n    display: block;\n    height: var(--_helper-spacing);\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='label'] {\n    order: 0;\n    padding-bottom: var(--_helper-spacing);\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text'] {\n    order: 1;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='label'] + * {\n    order: 2;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='error-message'] {\n    order: 3;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst requiredField = css`\n  [part='label'] {\n    align-self: flex-start;\n    color: var(--vaadin-input-field-label-color, var(--lumo-secondary-text-color));\n    font-weight: var(--vaadin-input-field-label-font-weight, 500);\n    font-size: var(--vaadin-input-field-label-font-size, var(--lumo-font-size-s));\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    transition: color 0.2s;\n    line-height: 1;\n    padding-right: 1em;\n    padding-bottom: 0.5em;\n    /* As a workaround for diacritics being cut off, add a top padding and a\n    negative margin to compensate */\n    padding-top: 0.25em;\n    margin-top: -0.25em;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    position: relative;\n    max-width: 100%;\n    box-sizing: border-box;\n  }\n\n  :host([focused]:not([readonly])) [part='label'] {\n    color: var(--vaadin-input-field-focused-label-color, var(--lumo-primary-text-color));\n  }\n\n  :host(:hover:not([readonly]):not([focused])) [part='label'] {\n    color: var(--vaadin-input-field-hovered-label-color, var(--lumo-body-text-color));\n  }\n\n  /* Touch device adjustment */\n  @media (pointer: coarse) {\n    :host(:hover:not([readonly]):not([focused])) [part='label'] {\n      color: var(--vaadin-input-field-label-color, var(--lumo-secondary-text-color));\n    }\n  }\n\n  :host([has-label])::before {\n    margin-top: calc(var(--lumo-font-size-s) * 1.5);\n  }\n\n  :host([has-label][theme~='small'])::before {\n    margin-top: calc(var(--lumo-font-size-xs) * 1.5);\n  }\n\n  :host([has-label]) {\n    padding-top: var(--lumo-space-m);\n  }\n\n  :host([has-label]) ::slotted([slot='tooltip']) {\n    --vaadin-tooltip-offset-bottom: calc((var(--lumo-space-m) - var(--lumo-space-xs)) * -1);\n  }\n\n  :host([required]) [part='required-indicator']::after {\n    content: var(--lumo-required-field-indicator, '\\\\2022');\n    transition: opacity 0.2s;\n    color: var(--lumo-required-field-indicator-color, var(--lumo-primary-text-color));\n    position: absolute;\n    right: 0;\n    width: 1em;\n    text-align: center;\n  }\n\n  :host([invalid]) [part='required-indicator']::after {\n    color: var(--lumo-required-field-indicator-color, var(--lumo-error-text-color));\n  }\n\n  [part='error-message'] {\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    font-size: var(--vaadin-input-field-error-font-size, var(--lumo-font-size-xs));\n    line-height: var(--lumo-line-height-xs);\n    font-weight: var(--vaadin-input-field-error-font-weight, 400);\n    color: var(--vaadin-input-field-error-color, var(--lumo-error-text-color));\n    will-change: max-height;\n    transition: 0.4s max-height;\n    max-height: 5em;\n  }\n\n  :host([has-error-message]) [part='error-message']::before,\n  :host([has-error-message]) [part='error-message']::after {\n    content: '';\n    display: block;\n    height: 0.4em;\n  }\n\n  :host(:not([invalid])) [part='error-message'] {\n    max-height: 0;\n    overflow: hidden;\n  }\n\n  /* RTL specific styles */\n\n  :host([dir='rtl']) [part='label'] {\n    margin-left: 0;\n    margin-right: calc(var(--lumo-border-radius-m) / 4);\n  }\n\n  :host([dir='rtl']) [part='label'] {\n    padding-left: 1em;\n    padding-right: 0;\n  }\n\n  :host([dir='rtl']) [part='required-indicator']::after {\n    right: auto;\n    left: 0;\n  }\n\n  :host([dir='rtl']) [part='error-message'] {\n    margin-left: 0;\n    margin-right: calc(var(--lumo-border-radius-m) / 4);\n  }\n`;\n\nregisterStyles('', requiredField, { moduleId: 'lumo-required-field' });\n\nexport { requiredField };\n", "/**\n * @license\n * Copyright (c) 2021 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotChildObserveController } from '@vaadin/component-base/src/slot-child-observe-controller.js';\n\n/**\n * A controller that manages the error message node content.\n */\nexport class ErrorController extends SlotChildObserveController {\n  constructor(host) {\n    super(host, 'error-message', 'div');\n  }\n\n  /**\n   * Set the error message element text content.\n   *\n   * @param {string} errorMessage\n   */\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Set invalid state for detecting whether to show error message.\n   *\n   * @param {boolean} invalid\n   */\n  setInvalid(invalid) {\n    this.invalid = invalid;\n\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Override method inherited from `SlotController` to not run\n   * initializer on the custom slotted node unnecessarily.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initAddedNode(node) {\n    if (node !== this.defaultNode) {\n      // There is no need to run `initNode`.\n      this.initCustomNode(node);\n    }\n  }\n\n  /**\n   * Override to initialize the newly added default error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initNode(errorNode) {\n    this.updateDefaultNode(errorNode);\n  }\n\n  /**\n   * Override to initialize the newly added custom error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initCustomNode(errorNode) {\n    // Save the custom error message content on the host.\n    if (errorNode.textContent && !this.errorMessage) {\n      this.errorMessage = errorNode.textContent.trim();\n    }\n\n    // Notify the host about custom node.\n    super.initCustomNode(errorNode);\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to restore the default error message element.\n   *\n   * @protected\n   * @override\n   */\n  restoreDefaultNode() {\n    this.attachDefaultNode();\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to update the error message text and hidden state.\n   *\n   * Note: unlike with other controllers, this method is\n   * called for both default and custom error message.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  updateDefaultNode(errorNode) {\n    const { errorMessage, invalid } = this;\n    const hasError = Boolean(invalid && errorMessage && errorMessage.trim() !== '');\n\n    if (errorNode) {\n      errorNode.textContent = hasError ? errorMessage : '';\n      errorNode.hidden = !hasError;\n\n      // Role alert will make the error message announce immediately\n      // as the field becomes invalid\n      if (hasError) {\n        errorNode.setAttribute('role', 'alert');\n      } else {\n        errorNode.removeAttribute('role');\n      }\n    }\n\n    // Notify the host after update.\n    super.updateDefaultNode(errorNode);\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotChildObserveController } from '@vaadin/component-base/src/slot-child-observe-controller.js';\n\n/**\n * A controller that manages the helper node content.\n */\nexport class HelperController extends SlotChildObserveController {\n  constructor(host) {\n    // Do not provide tag name, as we create helper lazily.\n    super(host, 'helper', null);\n  }\n\n  /**\n   * Set helper text based on corresponding host property.\n   *\n   * @param {string} helperText\n   */\n  setHelperText(helperText) {\n    this.helperText = helperText;\n\n    // Restore the default helper, if needed.\n    const helperNode = this.getSlotChild();\n    if (!helperNode) {\n      this.restoreDefaultNode();\n    }\n\n    // When default helper is used, update it.\n    if (this.node === this.defaultNode) {\n      this.updateDefaultNode(this.node);\n    }\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to create the default helper element lazily as needed.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  restoreDefaultNode() {\n    const { helperText } = this;\n\n    // No helper yet, create one.\n    if (helperText && helperText.trim() !== '') {\n      this.tagName = 'div';\n\n      const helperNode = this.attachDefaultNode();\n\n      // Observe the default node.\n      this.observeNode(helperNode);\n    }\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to update the default helper element text content.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  updateDefaultNode(node) {\n    if (node) {\n      node.textContent = this.helperText;\n    }\n\n    // Notify the host after update.\n    super.updateDefaultNode(node);\n  }\n\n  /**\n   * Override to observe the newly added custom node.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initCustomNode(node) {\n    // Notify the host about a custom slotted helper.\n    super.initCustomNode(node);\n\n    this.observeNode(node);\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport const ValidateMixin = dedupingMixin(\n  (superclass) =>\n    class ValidateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * Set to true when the field is invalid.\n           */\n          invalid: {\n            type: Boolean,\n            reflectToAttribute: true,\n            notify: true,\n            value: false,\n          },\n\n          /**\n           * Specifies that the user must fill in a value.\n           */\n          required: {\n            type: Boolean,\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * Validates the field and sets the `invalid` property based on the result.\n       *\n       * The method fires a `validated` event with the result of the validation.\n       *\n       * @return {boolean} True if the value is valid.\n       */\n      validate() {\n        const isValid = this.checkValidity();\n        this._setInvalid(!isValid);\n        this.dispatchEvent(new CustomEvent('validated', { detail: { valid: isValid } }));\n        return isValid;\n      }\n\n      /**\n       * Returns true if the field value satisfies all constraints (if any).\n       *\n       * @return {boolean}\n       */\n      checkValidity() {\n        return !this.required || !!this.value;\n      }\n\n      /**\n       * @param {boolean} invalid\n       * @protected\n       */\n      _setInvalid(invalid) {\n        if (this._shouldSetInvalid(invalid)) {\n          this.invalid = invalid;\n        }\n      }\n\n      /**\n       * Override this method to define whether the given `invalid` state should be set.\n       *\n       * @param {boolean} _invalid\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetInvalid(_invalid) {\n        return true;\n      }\n\n      /**\n       * Fired whenever the field is validated.\n       *\n       * @event validated\n       * @param {Object} detail\n       * @param {boolean} detail.valid the result of the validation.\n       */\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FieldAriaController } from '@vaadin/a11y-base/src/field-aria-controller.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ErrorController } from './error-controller.js';\nimport { HelperController } from './helper-controller.js';\nimport { LabelMixin } from './label-mixin.js';\nimport { ValidateMixin } from './validate-mixin.js';\n\n/**\n * A mixin to provide common field logic: label, error message and helper text.\n *\n * @polymerMixin\n * @mixes ControllerMixin\n * @mixes LabelMixin\n * @mixes ValidateMixin\n */\nexport const FieldMixin = (superclass) =>\n  class FieldMixinClass extends ValidateMixin(LabelMixin(ControllerMixin(superclass))) {\n    static get properties() {\n      return {\n        /**\n         * A target element to which ARIA attributes are set.\n         * @protected\n         */\n        ariaTarget: {\n          type: Object,\n          observer: '_ariaTargetChanged',\n        },\n\n        /**\n         * Error to show when the field is invalid.\n         *\n         * @attr {string} error-message\n         */\n        errorMessage: {\n          type: String,\n          observer: '_errorMessageChanged',\n        },\n\n        /**\n         * String used for the helper text.\n         * @attr {string} helper-text\n         */\n        helperText: {\n          type: String,\n          observer: '_helperTextChanged',\n        },\n\n        /**\n         * String used to label the component to screen reader users.\n         * @attr {string} accessible-name\n         */\n        accessibleName: {\n          type: String,\n          observer: '_accessibleNameChanged',\n        },\n\n        /**\n         * Id of the element used as label of the component to screen reader users.\n         * @attr {string} accessible-name-ref\n         */\n        accessibleNameRef: {\n          type: String,\n          observer: '_accessibleNameRefChanged',\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_invalidChanged(invalid)', '_requiredChanged(required)'];\n    }\n\n    constructor() {\n      super();\n\n      this._fieldAriaController = new FieldAriaController(this);\n      this._helperController = new HelperController(this);\n      this._errorController = new ErrorController(this);\n\n      this._errorController.addEventListener('slot-content-changed', (event) => {\n        this.toggleAttribute('has-error-message', event.detail.hasContent);\n      });\n\n      this._labelController.addEventListener('slot-content-changed', (event) => {\n        const { hasContent, node } = event.detail;\n        this.__labelChanged(hasContent, node);\n      });\n\n      this._helperController.addEventListener('slot-content-changed', (event) => {\n        const { hasContent, node } = event.detail;\n        this.toggleAttribute('has-helper', hasContent);\n        this.__helperChanged(hasContent, node);\n      });\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _errorNode() {\n      return this._errorController.node;\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _helperNode() {\n      return this._helperController.node;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(this._fieldAriaController);\n      this.addController(this._helperController);\n      this.addController(this._errorController);\n    }\n\n    /** @private */\n    __helperChanged(hasHelper, helperNode) {\n      if (hasHelper) {\n        this._fieldAriaController.setHelperId(helperNode.id);\n      } else {\n        this._fieldAriaController.setHelperId(null);\n      }\n    }\n\n    /** @protected */\n    _accessibleNameChanged(accessibleName) {\n      this._fieldAriaController.setAriaLabel(accessibleName);\n    }\n\n    /** @protected */\n    _accessibleNameRefChanged(accessibleNameRef) {\n      this._fieldAriaController.setLabelId(accessibleNameRef, true);\n    }\n\n    /** @private */\n    __labelChanged(hasLabel, labelNode) {\n      // Label ID should be only added when the label content is present.\n      // Otherwise, it may conflict with an `aria-label` attribute possibly added by the user.\n      if (hasLabel) {\n        this._fieldAriaController.setLabelId(labelNode.id);\n      } else {\n        this._fieldAriaController.setLabelId(null);\n      }\n    }\n\n    /**\n     * @param {string | null | undefined} errorMessage\n     * @protected\n     */\n    _errorMessageChanged(errorMessage) {\n      this._errorController.setErrorMessage(errorMessage);\n    }\n\n    /**\n     * @param {string} helperText\n     * @protected\n     */\n    _helperTextChanged(helperText) {\n      this._helperController.setHelperText(helperText);\n    }\n\n    /**\n     * @param {HTMLElement | null | undefined} target\n     * @protected\n     */\n    _ariaTargetChanged(target) {\n      if (target) {\n        this._fieldAriaController.setTarget(target);\n      }\n    }\n\n    /**\n     * @param {boolean} required\n     * @protected\n     */\n    _requiredChanged(required) {\n      this._fieldAriaController.setRequired(required);\n    }\n\n    /**\n     * @param {boolean} invalid\n     * @protected\n     */\n    _invalidChanged(invalid) {\n      this._errorController.setInvalid(invalid);\n\n      // This timeout is needed to prevent NVDA from announcing the error message twice:\n      // 1. Once adding the `[role=alert]` attribute when updating `has-error-message` (OK).\n      // 2. Once linking the error ID with the ARIA target here (unwanted).\n      // Related issue: https://github.com/vaadin/web-components/issues/3061.\n      setTimeout(() => {\n        // Error message ID needs to be dynamically added / removed based on the validity\n        // Otherwise assistive technologies would announce the error, even if we hide it.\n        if (invalid) {\n          const node = this._errorNode;\n          this._fieldAriaController.setErrorId(node && node.id);\n        } else {\n          this._fieldAriaController.setErrorId(null);\n        }\n      });\n    }\n  };\n"],
  "mappings": "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",
  "names": []
}
