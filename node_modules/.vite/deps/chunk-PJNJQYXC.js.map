{
  "version": 3,
  "sources": ["../../@vaadin/a11y-base/src/focus-restoration-controller.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { getDeepActiveElement } from './focus-utils.js';\n\n/**\n * A controller for saving a focused node and restoring focus to it later.\n */\nexport class FocusRestorationController {\n  /**\n   * Saves the given node as a target for restoring focus to\n   * when `restoreFocus()` is called. If no node is provided,\n   * the currently focused node in the DOM is saved as a target.\n   *\n   * @param {Node | null | undefined} focusNode\n   */\n  saveFocus(focusNode) {\n    this.focusNode = focusNode || getDeepActiveElement();\n  }\n\n  /**\n   * Restores focus to the target node that was saved previously with `saveFocus()`.\n   */\n  restoreFocus() {\n    const focusNode = this.focusNode;\n    if (!focusNode) {\n      return;\n    }\n\n    if (getDeepActiveElement() === document.body) {\n      // In Firefox and Safari, focusing the node synchronously\n      // doesn't work as expected when the overlay is closing on outside click.\n      // These browsers force focus to move to the body element and retain it\n      // there until the next event loop iteration.\n      setTimeout(() => focusNode.focus());\n    } else {\n      focusNode.focus();\n    }\n\n    this.focusNode = null;\n  }\n}\n"],
  "mappings": ";;;;;AAUO,IAAM,6BAAN,MAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQtC,UAAU,WAAW;AACnB,SAAK,YAAY,aAAa,qBAAqB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe;AACb,UAAM,YAAY,KAAK;AACvB,QAAI,CAAC,WAAW;AACd;AAAA,IACF;AAEA,QAAI,qBAAqB,MAAM,SAAS,MAAM;AAK5C,iBAAW,MAAM,UAAU,MAAM,CAAC;AAAA,IACpC,OAAO;AACL,gBAAU,MAAM;AAAA,IAClB;AAEA,SAAK,YAAY;AAAA,EACnB;AACF;",
  "names": []
}
