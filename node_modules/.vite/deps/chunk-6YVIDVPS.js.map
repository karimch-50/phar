{
  "version": 3,
  "sources": ["../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/display_utils.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/network_utils.js"],
  "sourcesContent": ["import { u as unreachable, D as CMapCompressionType, K as BaseException, c as assert, J as removeNullCharacters, w as warn, L as isString, n as stringToBytes, e as Util } from './util.js';\r\n\r\n/* Copyright 2015 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass BaseCanvasFactory {\r\n  constructor() {\r\n    if (this.constructor === BaseCanvasFactory) {\r\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\r\n    }\r\n  }\r\n\r\n  create(width, height) {\r\n    if (width <= 0 || height <= 0) {\r\n      throw new Error(\"Invalid canvas size\");\r\n    }\r\n\r\n    const canvas = this._createCanvas(width, height);\r\n\r\n    return {\r\n      canvas,\r\n      context: canvas.getContext(\"2d\")\r\n    };\r\n  }\r\n\r\n  reset(canvasAndContext, width, height) {\r\n    if (!canvasAndContext.canvas) {\r\n      throw new Error(\"Canvas is not specified\");\r\n    }\r\n\r\n    if (width <= 0 || height <= 0) {\r\n      throw new Error(\"Invalid canvas size\");\r\n    }\r\n\r\n    canvasAndContext.canvas.width = width;\r\n    canvasAndContext.canvas.height = height;\r\n  }\r\n\r\n  destroy(canvasAndContext) {\r\n    if (!canvasAndContext.canvas) {\r\n      throw new Error(\"Canvas is not specified\");\r\n    } // Zeroing the width and height cause Firefox to release graphics\r\n    // resources immediately, which can greatly reduce memory consumption.\r\n\r\n\r\n    canvasAndContext.canvas.width = 0;\r\n    canvasAndContext.canvas.height = 0;\r\n    canvasAndContext.canvas = null;\r\n    canvasAndContext.context = null;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _createCanvas(width, height) {\r\n    unreachable(\"Abstract method `_createCanvas` called.\");\r\n  }\r\n\r\n}\r\n\r\nclass BaseCMapReaderFactory {\r\n  constructor({\r\n    baseUrl = null,\r\n    isCompressed = false\r\n  }) {\r\n    if (this.constructor === BaseCMapReaderFactory) {\r\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\r\n    }\r\n\r\n    this.baseUrl = baseUrl;\r\n    this.isCompressed = isCompressed;\r\n  }\r\n\r\n  async fetch({\r\n    name\r\n  }) {\r\n    if (!this.baseUrl) {\r\n      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\r\n    }\r\n\r\n    if (!name) {\r\n      throw new Error(\"CMap name must be specified.\");\r\n    }\r\n\r\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\r\n    const compressionType = this.isCompressed ? CMapCompressionType.BINARY : CMapCompressionType.NONE;\r\n    return this._fetchData(url, compressionType).catch(reason => {\r\n      throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\r\n    });\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _fetchData(url, compressionType) {\r\n    unreachable(\"Abstract method `_fetchData` called.\");\r\n  }\r\n\r\n}\r\n\r\nclass BaseStandardFontDataFactory {\r\n  constructor({\r\n    baseUrl = null\r\n  }) {\r\n    if (this.constructor === BaseStandardFontDataFactory) {\r\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\r\n    }\r\n\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async fetch({\r\n    filename\r\n  }) {\r\n    if (!this.baseUrl) {\r\n      throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\r\n    }\r\n\r\n    if (!filename) {\r\n      throw new Error(\"Font filename must be specified.\");\r\n    }\r\n\r\n    const url = `${this.baseUrl}${filename}`;\r\n    return this._fetchData(url).catch(reason => {\r\n      throw new Error(`Unable to load font data at: ${url}`);\r\n    });\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _fetchData(url) {\r\n    unreachable(\"Abstract method `_fetchData` called.\");\r\n  }\r\n\r\n}\r\n\r\nclass BaseSVGFactory {\r\n  constructor() {\r\n    if (this.constructor === BaseSVGFactory) {\r\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\r\n    }\r\n  }\r\n\r\n  create(width, height) {\r\n    if (width <= 0 || height <= 0) {\r\n      throw new Error(\"Invalid SVG dimensions\");\r\n    }\r\n\r\n    const svg = this._createSVG(\"svg:svg\");\r\n\r\n    svg.setAttribute(\"version\", \"1.1\");\r\n    svg.setAttribute(\"width\", `${width}px`);\r\n    svg.setAttribute(\"height\", `${height}px`);\r\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\r\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\r\n    return svg;\r\n  }\r\n\r\n  createElement(type) {\r\n    if (typeof type !== \"string\") {\r\n      throw new Error(\"Invalid SVG element type\");\r\n    }\r\n\r\n    return this._createSVG(type);\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _createSVG(type) {\r\n    unreachable(\"Abstract method `_createSVG` called.\");\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2015 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\r\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nclass DOMCanvasFactory extends BaseCanvasFactory {\r\n  constructor({\r\n    ownerDocument = globalThis.document\r\n  } = {}) {\r\n    super();\r\n    this._document = ownerDocument;\r\n  }\r\n\r\n  _createCanvas(width, height) {\r\n    const canvas = this._document.createElement(\"canvas\");\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return canvas;\r\n  }\r\n\r\n}\r\n\r\nasync function fetchData(url, asTypedArray = false) {\r\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\") || isValidFetchUrl(url, document.baseURI)) {\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(response.statusText);\r\n    }\r\n\r\n    return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : stringToBytes(await response.text());\r\n  } // The Fetch API is not supported.\r\n\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const request = new XMLHttpRequest();\r\n    request.open(\"GET\", url,\r\n    /* asTypedArray = */\r\n    true);\r\n\r\n    if (asTypedArray) {\r\n      request.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    request.onreadystatechange = () => {\r\n      if (request.readyState !== XMLHttpRequest.DONE) {\r\n        return;\r\n      }\r\n\r\n      if (request.status === 200 || request.status === 0) {\r\n        let data;\r\n\r\n        if (asTypedArray && request.response) {\r\n          data = new Uint8Array(request.response);\r\n        } else if (!asTypedArray && request.responseText) {\r\n          data = stringToBytes(request.responseText);\r\n        }\r\n\r\n        if (data) {\r\n          resolve(data);\r\n          return;\r\n        }\r\n      }\r\n\r\n      reject(new Error(request.statusText));\r\n    };\r\n\r\n    request.send(null);\r\n  });\r\n}\r\n\r\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\r\n  _fetchData(url, compressionType) {\r\n    return fetchData(url,\r\n    /* asTypedArray = */\r\n    this.isCompressed).then(data => {\r\n      return {\r\n        cMapData: data,\r\n        compressionType\r\n      };\r\n    });\r\n  }\r\n\r\n}\r\n\r\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\r\n  _fetchData(url) {\r\n    return fetchData(url,\r\n    /* asTypedArray = */\r\n    true);\r\n  }\r\n\r\n}\r\n\r\nclass DOMSVGFactory extends BaseSVGFactory {\r\n  _createSVG(type) {\r\n    return document.createElementNS(SVG_NS, type);\r\n  }\r\n\r\n}\r\n/**\r\n * @typedef {Object} PageViewportParameters\r\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\r\n *   yMax coordinates.\r\n * @property {number} scale - The scale of the viewport.\r\n * @property {number} rotation - The rotation, in degrees, of the viewport.\r\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\r\n *   default value is `0`.\r\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\r\n *   default value is `0`.\r\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\r\n *   The default value is `false`.\r\n */\r\n\r\n/**\r\n * @typedef {Object} PageViewportCloneParameters\r\n * @property {number} [scale] - The scale, overriding the one in the cloned\r\n *   viewport. The default value is `this.scale`.\r\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\r\n *   in the cloned viewport. The default value is `this.rotation`.\r\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\r\n *   The default value is `this.offsetX`.\r\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\r\n *   The default value is `this.offsetY`.\r\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\r\n *   The default value is `false`.\r\n */\r\n\r\n/**\r\n * PDF page viewport created based on scale, rotation and offset.\r\n */\r\n\r\n\r\nclass PageViewport {\r\n  /**\r\n   * @param {PageViewportParameters}\r\n   */\r\n  constructor({\r\n    viewBox,\r\n    scale,\r\n    rotation,\r\n    offsetX = 0,\r\n    offsetY = 0,\r\n    dontFlip = false\r\n  }) {\r\n    this.viewBox = viewBox;\r\n    this.scale = scale;\r\n    this.rotation = rotation;\r\n    this.offsetX = offsetX;\r\n    this.offsetY = offsetY; // creating transform to convert pdf coordinate system to the normal\r\n    // canvas like coordinates taking in account scale and rotation\r\n\r\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\r\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\r\n    let rotateA, rotateB, rotateC, rotateD; // Normalize the rotation, by clamping it to the [0, 360) range.\r\n\r\n    rotation %= 360;\r\n\r\n    if (rotation < 0) {\r\n      rotation += 360;\r\n    }\r\n\r\n    switch (rotation) {\r\n      case 180:\r\n        rotateA = -1;\r\n        rotateB = 0;\r\n        rotateC = 0;\r\n        rotateD = 1;\r\n        break;\r\n\r\n      case 90:\r\n        rotateA = 0;\r\n        rotateB = 1;\r\n        rotateC = 1;\r\n        rotateD = 0;\r\n        break;\r\n\r\n      case 270:\r\n        rotateA = 0;\r\n        rotateB = -1;\r\n        rotateC = -1;\r\n        rotateD = 0;\r\n        break;\r\n\r\n      case 0:\r\n        rotateA = 1;\r\n        rotateB = 0;\r\n        rotateC = 0;\r\n        rotateD = -1;\r\n        break;\r\n\r\n      default:\r\n        throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\r\n    }\r\n\r\n    if (dontFlip) {\r\n      rotateC = -rotateC;\r\n      rotateD = -rotateD;\r\n    }\r\n\r\n    let offsetCanvasX, offsetCanvasY;\r\n    let width, height;\r\n\r\n    if (rotateA === 0) {\r\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\r\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\r\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\r\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\r\n    } else {\r\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\r\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\r\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\r\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\r\n    } // creating transform for the following operations:\r\n    // translate(-centerX, -centerY), rotate and flip vertically,\r\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\r\n\r\n\r\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n  /**\r\n   * Clones viewport, with optional additional properties.\r\n   * @param {PageViewportCloneParameters} [params]\r\n   * @returns {PageViewport} Cloned viewport.\r\n   */\r\n\r\n\r\n  clone({\r\n    scale = this.scale,\r\n    rotation = this.rotation,\r\n    offsetX = this.offsetX,\r\n    offsetY = this.offsetY,\r\n    dontFlip = false\r\n  } = {}) {\r\n    return new PageViewport({\r\n      viewBox: this.viewBox.slice(),\r\n      scale,\r\n      rotation,\r\n      offsetX,\r\n      offsetY,\r\n      dontFlip\r\n    });\r\n  }\r\n  /**\r\n   * Converts PDF point to the viewport coordinates. For examples, useful for\r\n   * converting PDF location into canvas pixel coordinates.\r\n   * @param {number} x - The x-coordinate.\r\n   * @param {number} y - The y-coordinate.\r\n   * @returns {Object} Object containing `x` and `y` properties of the\r\n   *   point in the viewport coordinate space.\r\n   * @see {@link convertToPdfPoint}\r\n   * @see {@link convertToViewportRectangle}\r\n   */\r\n\r\n\r\n  convertToViewportPoint(x, y) {\r\n    return Util.applyTransform([x, y], this.transform);\r\n  }\r\n  /**\r\n   * Converts PDF rectangle to the viewport coordinates.\r\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\r\n   * @returns {Array} Array containing corresponding coordinates of the\r\n   *   rectangle in the viewport coordinate space.\r\n   * @see {@link convertToViewportPoint}\r\n   */\r\n\r\n\r\n  convertToViewportRectangle(rect) {\r\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\r\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\r\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\r\n  }\r\n  /**\r\n   * Converts viewport coordinates to the PDF location. For examples, useful\r\n   * for converting canvas pixel location into PDF one.\r\n   * @param {number} x - The x-coordinate.\r\n   * @param {number} y - The y-coordinate.\r\n   * @returns {Object} Object containing `x` and `y` properties of the\r\n   *   point in the PDF coordinate space.\r\n   * @see {@link convertToViewportPoint}\r\n   */\r\n\r\n\r\n  convertToPdfPoint(x, y) {\r\n    return Util.applyInverseTransform([x, y], this.transform);\r\n  }\r\n\r\n}\r\n\r\nclass RenderingCancelledException extends BaseException {\r\n  constructor(msg, type) {\r\n    super(msg);\r\n    this.type = type;\r\n  }\r\n\r\n}\r\n\r\nconst LinkTarget = {\r\n  NONE: 0,\r\n  // Default value.\r\n  SELF: 1,\r\n  BLANK: 2,\r\n  PARENT: 3,\r\n  TOP: 4\r\n};\r\n/**\r\n * @typedef ExternalLinkParameters\r\n * @typedef {Object} ExternalLinkParameters\r\n * @property {string} url - An absolute URL.\r\n * @property {LinkTarget} [target] - The link target. The default value is\r\n *   `LinkTarget.NONE`.\r\n * @property {string} [rel] - The link relationship. The default value is\r\n *   `DEFAULT_LINK_REL`.\r\n * @property {boolean} [enabled] - Whether the link should be enabled. The\r\n *   default value is true.\r\n */\r\n\r\n/**\r\n * Adds various attributes (href, title, target, rel) to hyperlinks.\r\n * @param {HTMLLinkElement} link - The link element.\r\n * @param {ExternalLinkParameters} params\r\n */\r\n\r\nfunction addLinkAttributes(link, {\r\n  url,\r\n  target,\r\n  rel,\r\n  enabled = true\r\n} = {}) {\r\n  assert(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\r\n  const urlNullRemoved = removeNullCharacters(url);\r\n\r\n  if (enabled) {\r\n    link.href = link.title = urlNullRemoved;\r\n  } else {\r\n    link.href = \"\";\r\n    link.title = `Disabled: ${urlNullRemoved}`;\r\n\r\n    link.onclick = () => {\r\n      return false;\r\n    };\r\n  }\r\n\r\n  let targetStr = \"\"; // LinkTarget.NONE\r\n\r\n  switch (target) {\r\n    case LinkTarget.NONE:\r\n      break;\r\n\r\n    case LinkTarget.SELF:\r\n      targetStr = \"_self\";\r\n      break;\r\n\r\n    case LinkTarget.BLANK:\r\n      targetStr = \"_blank\";\r\n      break;\r\n\r\n    case LinkTarget.PARENT:\r\n      targetStr = \"_parent\";\r\n      break;\r\n\r\n    case LinkTarget.TOP:\r\n      targetStr = \"_top\";\r\n      break;\r\n  }\r\n\r\n  link.target = targetStr;\r\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\r\n}\r\n\r\nfunction isDataScheme(url) {\r\n  const ii = url.length;\r\n  let i = 0;\r\n\r\n  while (i < ii && url[i].trim() === \"\") {\r\n    i++;\r\n  }\r\n\r\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\r\n}\r\n\r\nfunction isPdfFile(filename) {\r\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\r\n}\r\n/**\r\n * Gets the filename from a given URL.\r\n * @param {string} url\r\n * @returns {string}\r\n */\r\n\r\n\r\nfunction getFilenameFromUrl(url) {\r\n  const anchor = url.indexOf(\"#\");\r\n  const query = url.indexOf(\"?\");\r\n  const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\r\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\r\n}\r\n/**\r\n * Returns the filename or guessed filename from the url (see issue 3455).\r\n * @param {string} url - The original PDF location.\r\n * @param {string} defaultFilename - The value returned if the filename is\r\n *   unknown, or the protocol is unsupported.\r\n * @returns {string} Guessed PDF filename.\r\n */\r\n\r\n\r\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\r\n  if (typeof url !== \"string\") {\r\n    return defaultFilename;\r\n  }\r\n\r\n  if (isDataScheme(url)) {\r\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\r\n    return defaultFilename;\r\n  }\r\n\r\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/; //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\r\n  // Pattern to get last matching NAME.pdf\r\n\r\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\r\n  const splitURI = reURI.exec(url);\r\n  let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\r\n\r\n  if (suggestedFilename) {\r\n    suggestedFilename = suggestedFilename[0];\r\n\r\n    if (suggestedFilename.includes(\"%\")) {\r\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\r\n      try {\r\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\r\n      } catch (ex) {// Possible (extremely rare) errors:\r\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\r\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\r\n      }\r\n    }\r\n  }\r\n\r\n  return suggestedFilename || defaultFilename;\r\n}\r\n\r\nclass StatTimer {\r\n  constructor() {\r\n    this.started = Object.create(null);\r\n    this.times = [];\r\n  }\r\n\r\n  time(name) {\r\n    if (name in this.started) {\r\n      warn(`Timer is already running for ${name}`);\r\n    }\r\n\r\n    this.started[name] = Date.now();\r\n  }\r\n\r\n  timeEnd(name) {\r\n    if (!(name in this.started)) {\r\n      warn(`Timer has not been started for ${name}`);\r\n    }\r\n\r\n    this.times.push({\r\n      name,\r\n      start: this.started[name],\r\n      end: Date.now()\r\n    }); // Remove timer from started so it can be called again.\r\n\r\n    delete this.started[name];\r\n  }\r\n\r\n  toString() {\r\n    // Find the longest name for padding purposes.\r\n    const outBuf = [];\r\n    let longest = 0;\r\n\r\n    for (const time of this.times) {\r\n      const name = time.name;\r\n\r\n      if (name.length > longest) {\r\n        longest = name.length;\r\n      }\r\n    }\r\n\r\n    for (const time of this.times) {\r\n      const duration = time.end - time.start;\r\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\r\n    }\r\n\r\n    return outBuf.join(\"\");\r\n  }\r\n\r\n}\r\n\r\nfunction isValidFetchUrl(url, baseUrl) {\r\n  try {\r\n    const {\r\n      protocol\r\n    } = baseUrl ? new URL(url, baseUrl) : new URL(url); // The Fetch API only supports the http/https protocols, and not file/ftp.\r\n\r\n    return protocol === \"http:\" || protocol === \"https:\";\r\n  } catch (ex) {\r\n    return false; // `new URL()` will throw on incorrect data.\r\n  }\r\n}\r\n/**\r\n * @param {string} src\r\n * @param {boolean} [removeScriptElement]\r\n * @returns {Promise<void>}\r\n */\r\n\r\n\r\nfunction loadScript(src, removeScriptElement = false) {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n\r\n    script.onload = function (evt) {\r\n      if (removeScriptElement) {\r\n        script.remove();\r\n      }\r\n\r\n      resolve(evt);\r\n    };\r\n\r\n    script.onerror = function () {\r\n      reject(new Error(`Cannot load script at: ${script.src}`));\r\n    };\r\n\r\n    (document.head || document.documentElement).appendChild(script);\r\n  });\r\n} // Deprecated API function -- display regardless of the `verbosity` setting.\r\n\r\n\r\nfunction deprecated(details) {\r\n  console.log(\"Deprecated API usage: \" + details);\r\n}\r\n\r\nlet pdfDateStringRegex;\r\n\r\nclass PDFDateString {\r\n  /**\r\n   * Convert a PDF date string to a JavaScript `Date` object.\r\n   *\r\n   * The PDF date string format is described in section 7.9.4 of the official\r\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\r\n   * edition) Adobe describes the same format including a trailing apostrophe.\r\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\r\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\r\n   *\r\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\r\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\r\n   * parts of the date string).\r\n   *\r\n   * @param {string} input\r\n   * @returns {Date|null}\r\n   */\r\n  static toDateObject(input) {\r\n    if (!input || !isString(input)) {\r\n      return null;\r\n    } // Lazily initialize the regular expression.\r\n\r\n\r\n    if (!pdfDateStringRegex) {\r\n      pdfDateStringRegex = new RegExp(\"^D:\" + // Prefix (required)\r\n      \"(\\\\d{4})\" + // Year (required)\r\n      \"(\\\\d{2})?\" + // Month (optional)\r\n      \"(\\\\d{2})?\" + // Day (optional)\r\n      \"(\\\\d{2})?\" + // Hour (optional)\r\n      \"(\\\\d{2})?\" + // Minute (optional)\r\n      \"(\\\\d{2})?\" + // Second (optional)\r\n      \"([Z|+|-])?\" + // Universal time relation (optional)\r\n      \"(\\\\d{2})?\" + // Offset hour (optional)\r\n      \"'?\" + // Splitting apostrophe (optional)\r\n      \"(\\\\d{2})?\" + // Offset minute (optional)\r\n      \"'?\" // Trailing apostrophe (optional)\r\n      );\r\n    } // Optional fields that don't satisfy the requirements from the regular\r\n    // expression (such as incorrect digit counts or numbers that are out of\r\n    // range) will fall back the defaults from the specification.\r\n\r\n\r\n    const matches = pdfDateStringRegex.exec(input);\r\n\r\n    if (!matches) {\r\n      return null;\r\n    } // JavaScript's `Date` object expects the month to be between 0 and 11\r\n    // instead of 1 and 12, so we have to correct for that.\r\n\r\n\r\n    const year = parseInt(matches[1], 10);\r\n    let month = parseInt(matches[2], 10);\r\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\r\n    let day = parseInt(matches[3], 10);\r\n    day = day >= 1 && day <= 31 ? day : 1;\r\n    let hour = parseInt(matches[4], 10);\r\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\r\n    let minute = parseInt(matches[5], 10);\r\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\r\n    let second = parseInt(matches[6], 10);\r\n    second = second >= 0 && second <= 59 ? second : 0;\r\n    const universalTimeRelation = matches[7] || \"Z\";\r\n    let offsetHour = parseInt(matches[8], 10);\r\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\r\n    let offsetMinute = parseInt(matches[9], 10) || 0;\r\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0; // Universal time relation 'Z' means that the local time is equal to the\r\n    // universal time, whereas the relations '+'/'-' indicate that the local\r\n    // time is later respectively earlier than the universal time. Every date\r\n    // is normalized to universal time.\r\n\r\n    if (universalTimeRelation === \"-\") {\r\n      hour += offsetHour;\r\n      minute += offsetMinute;\r\n    } else if (universalTimeRelation === \"+\") {\r\n      hour -= offsetHour;\r\n      minute -= offsetMinute;\r\n    }\r\n\r\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\r\n  }\r\n\r\n}\r\n/**\r\n * NOTE: This is (mostly) intended to support printing of XFA forms.\r\n */\r\n\r\n\r\nfunction getXfaPageViewport(xfaPage, {\r\n  scale = 1,\r\n  rotation = 0\r\n}) {\r\n  const {\r\n    width,\r\n    height\r\n  } = xfaPage.attributes.style;\r\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\r\n  return new PageViewport({\r\n    viewBox,\r\n    scale,\r\n    rotation\r\n  });\r\n}\r\n\r\nexport { BaseCanvasFactory as B, DOMCanvasFactory as D, LinkTarget as L, PageViewport as P, RenderingCancelledException as R, StatTimer as S, BaseCMapReaderFactory as a, BaseStandardFontDataFactory as b, DOMCMapReaderFactory as c, DOMStandardFontDataFactory as d, isDataScheme as e, deprecated as f, DOMSVGFactory as g, addLinkAttributes as h, isPdfFile as i, PDFDateString as j, getFilenameFromUrl as k, loadScript as l, isValidFetchUrl as m, getPdfFilenameFromUrl as n, getXfaPageViewport as o };\r\n", "import { n as stringToBytes, c as assert, M as MissingPDFException, v as UnexpectedResponseException } from './util.js';\r\nimport { i as isPdfFile } from './display_utils.js';\r\n\r\n/* Copyright 2017 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\r\n// with the following changes:\r\n// - Modified to conform to PDF.js's coding style.\r\n// - Support UTF-8 decoding when TextDecoder is unsupported.\r\n// - Move return to the end of the function to prevent Babel from dropping the\r\n//   function declarations.\r\n\r\n/**\r\n * Extract file name from the Content-Disposition HTTP response header.\r\n *\r\n * @param {string} contentDisposition\r\n * @returns {string} Filename, if found in the Content-Disposition header.\r\n */\r\n\r\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\r\n  let needsEncodingFixup = true; // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\r\n\r\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\r\n\r\n  if (tmp) {\r\n    tmp = tmp[1];\r\n    let filename = rfc2616unquote(tmp);\r\n    filename = unescape(filename);\r\n    filename = rfc5987decode(filename);\r\n    filename = rfc2047decode(filename);\r\n    return fixupEncoding(filename);\r\n  } // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\r\n  // filename*n*=part\r\n  // filename*n=part\r\n\r\n\r\n  tmp = rfc2231getparam(contentDisposition);\r\n\r\n  if (tmp) {\r\n    // RFC 2047, section\r\n    const filename = rfc2047decode(tmp);\r\n    return fixupEncoding(filename);\r\n  } // filename=value (RFC 5987, section 4.1).\r\n\r\n\r\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\r\n\r\n  if (tmp) {\r\n    tmp = tmp[1];\r\n    let filename = rfc2616unquote(tmp);\r\n    filename = rfc2047decode(filename);\r\n    return fixupEncoding(filename);\r\n  } // After this line there are only function declarations. We cannot put\r\n  // \"return\" here for readability because babel would then drop the function\r\n  // declarations...\r\n\r\n\r\n  function toParamRegExp(attributePattern, flags) {\r\n    return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + // Captures: value = token | quoted-string\r\n    // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\r\n    \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\r\n  }\r\n\r\n  function textdecode(encoding, value) {\r\n    if (encoding) {\r\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\r\n        return value;\r\n      }\r\n\r\n      try {\r\n        const decoder = new TextDecoder(encoding, {\r\n          fatal: true\r\n        });\r\n        const buffer = stringToBytes(value);\r\n        value = decoder.decode(buffer);\r\n        needsEncodingFixup = false;\r\n      } catch (e) {\r\n        // TextDecoder constructor threw - unrecognized encoding.\r\n        // Or TextDecoder API is not available (in IE / Edge).\r\n        if (/^utf-?8$/i.test(encoding)) {\r\n          // UTF-8 is commonly used, try to support it in another way:\r\n          try {\r\n            value = decodeURIComponent(escape(value));\r\n            needsEncodingFixup = false;\r\n          } catch (err) {}\r\n        }\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function fixupEncoding(value) {\r\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\r\n      // Maybe multi-byte UTF-8.\r\n      value = textdecode(\"utf-8\", value);\r\n\r\n      if (needsEncodingFixup) {\r\n        // Try iso-8859-1 encoding.\r\n        value = textdecode(\"iso-8859-1\", value);\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function rfc2231getparam(contentDispositionStr) {\r\n    const matches = [];\r\n    let match; // Iterate over all filename*n= and filename*n*= with n being an integer\r\n    // of at least zero. Any non-zero number must not start with '0'.\r\n\r\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\r\n\r\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\r\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\r\n\r\n      n = parseInt(n, 10);\r\n\r\n      if (n in matches) {\r\n        // Ignore anything after the invalid second filename*0.\r\n        if (n === 0) {\r\n          break;\r\n        }\r\n\r\n        continue;\r\n      }\r\n\r\n      matches[n] = [quot, part];\r\n    }\r\n\r\n    const parts = [];\r\n\r\n    for (let n = 0; n < matches.length; ++n) {\r\n      if (!(n in matches)) {\r\n        // Numbers must be consecutive. Truncate when there is a hole.\r\n        break;\r\n      }\r\n\r\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\r\n\r\n      part = rfc2616unquote(part);\r\n\r\n      if (quot) {\r\n        part = unescape(part);\r\n\r\n        if (n === 0) {\r\n          part = rfc5987decode(part);\r\n        }\r\n      }\r\n\r\n      parts.push(part);\r\n    }\r\n\r\n    return parts.join(\"\");\r\n  }\r\n\r\n  function rfc2616unquote(value) {\r\n    if (value.startsWith('\"')) {\r\n      const parts = value.slice(1).split('\\\\\"'); // Find the first unescaped \" and terminate there.\r\n\r\n      for (let i = 0; i < parts.length; ++i) {\r\n        const quotindex = parts[i].indexOf('\"');\r\n\r\n        if (quotindex !== -1) {\r\n          parts[i] = parts[i].slice(0, quotindex);\r\n          parts.length = i + 1; // Truncates and stop the iteration.\r\n        }\r\n\r\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\r\n      }\r\n\r\n      value = parts.join('\"');\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function rfc5987decode(extvalue) {\r\n    // Decodes \"ext-value\" from RFC 5987.\r\n    const encodingend = extvalue.indexOf(\"'\");\r\n\r\n    if (encodingend === -1) {\r\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\r\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\r\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\r\n      return extvalue;\r\n    }\r\n\r\n    const encoding = extvalue.slice(0, encodingend);\r\n    const langvalue = extvalue.slice(encodingend + 1); // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\r\n\r\n    const value = langvalue.replace(/^[^']*'/, \"\");\r\n    return textdecode(encoding, value);\r\n  }\r\n\r\n  function rfc2047decode(value) {\r\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\r\n    // backed out because some servers use it - https://bugzil.la/875615\r\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\r\n    // We are more strict and only recognize RFC 2047-encoding if the value\r\n    // starts with \"=?\", since then it is likely that the full value is\r\n    // RFC 2047-encoded.\r\n    // Firefox also decodes words even where RFC 2047 section 5 states:\r\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\r\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\r\n      return value;\r\n    } // RFC 2047, section 2.4\r\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\r\n    // charset = token (but let's restrict to characters that denote a\r\n    //       possibly valid encoding).\r\n    // encoding = q or b\r\n    // encoded-text = any printable ASCII character other than ? or space.\r\n    //        ... but Firefox permits ? and space.\r\n\r\n\r\n    return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\r\n      if (encoding === \"q\" || encoding === \"Q\") {\r\n        // RFC 2047 section 4.2.\r\n        text = text.replace(/_/g, \" \");\r\n        text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\r\n          return String.fromCharCode(parseInt(hex, 16));\r\n        });\r\n        return textdecode(charset, text);\r\n      } // else encoding is b or B - base64 (RFC 2047 section 4.1)\r\n\r\n\r\n      try {\r\n        text = atob(text);\r\n      } catch (e) {}\r\n\r\n      return textdecode(charset, text);\r\n    });\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nfunction validateRangeRequestCapabilities({\r\n  getResponseHeader,\r\n  isHttp,\r\n  rangeChunkSize,\r\n  disableRange\r\n}) {\r\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\r\n  const returnValues = {\r\n    allowRangeRequests: false,\r\n    suggestedLength: undefined\r\n  };\r\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\r\n\r\n  if (!Number.isInteger(length)) {\r\n    return returnValues;\r\n  }\r\n\r\n  returnValues.suggestedLength = length;\r\n\r\n  if (length <= 2 * rangeChunkSize) {\r\n    // The file size is smaller than the size of two chunks, so it does not\r\n    // make any sense to abort the request and retry with a range request.\r\n    return returnValues;\r\n  }\r\n\r\n  if (disableRange || !isHttp) {\r\n    return returnValues;\r\n  }\r\n\r\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\r\n    return returnValues;\r\n  }\r\n\r\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\r\n\r\n  if (contentEncoding !== \"identity\") {\r\n    return returnValues;\r\n  }\r\n\r\n  returnValues.allowRangeRequests = true;\r\n  return returnValues;\r\n}\r\n\r\nfunction extractFilenameFromHeader(getResponseHeader) {\r\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\r\n\r\n  if (contentDisposition) {\r\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\r\n\r\n    if (filename.includes(\"%\")) {\r\n      try {\r\n        filename = decodeURIComponent(filename);\r\n      } catch (ex) {}\r\n    }\r\n\r\n    if (isPdfFile(filename)) {\r\n      return filename;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction createResponseStatusError(status, url) {\r\n  if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\r\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\r\n  }\r\n\r\n  return new UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\r\n}\r\n\r\nfunction validateResponseStatus(status) {\r\n  return status === 200 || status === 206;\r\n}\r\n\r\nexport { validateResponseStatus as a, createResponseStatusError as c, extractFilenameFromHeader as e, validateRangeRequestCapabilities as v };\r\n"],
  "mappings": "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",
  "names": []
}
