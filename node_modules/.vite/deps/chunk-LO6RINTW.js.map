{
  "version": 3,
  "sources": ["../../@vaadin/date-picker/theme/lumo/vaadin-date-picker-overlay-styles.js", "../../@vaadin/date-picker/theme/lumo/vaadin-date-picker-year-styles.js", "../../@vaadin/date-picker/theme/lumo/vaadin-date-picker-overlay-content-styles.js", "../../@vaadin/date-picker/theme/lumo/vaadin-month-calendar-styles.js", "../../@vaadin/date-picker/theme/lumo/vaadin-date-picker-styles.js", "../../@vaadin/date-picker/src/vaadin-date-picker-overlay-styles.js", "../../@vaadin/date-picker/src/vaadin-date-picker-overlay.js", "../../@vaadin/date-picker/src/vaadin-infinite-scroller.js", "../../@vaadin/date-picker/src/vaadin-date-picker-month-scroller.js", "../../@vaadin/date-picker/src/vaadin-date-picker-year-scroller.js", "../../@vaadin/date-picker/src/vaadin-date-picker-year-mixin.js", "../../@vaadin/date-picker/src/vaadin-date-picker-year.js", "../../@polymer/polymer/lib/elements/dom-repeat.js", "../../@vaadin/date-picker/src/vaadin-month-calendar-mixin.js", "../../@vaadin/date-picker/src/vaadin-month-calendar-styles.js", "../../@vaadin/date-picker/src/vaadin-month-calendar.js", "../../@vaadin/date-picker/src/vaadin-date-picker-overlay-content-mixin.js", "../../@vaadin/date-picker/src/vaadin-date-picker-overlay-content-styles.js", "../../@vaadin/date-picker/src/vaadin-date-picker-overlay-content.js", "../../@vaadin/date-picker/src/vaadin-date-picker-mixin.js", "../../@vaadin/date-picker/src/vaadin-date-picker-styles.js", "../../@vaadin/date-picker/src/vaadin-date-picker.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { menuOverlay } from '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst datePickerOverlay = css`\n  [part='overlay'] {\n    /*\n  Width:\n      date cell widths\n    + month calendar side padding\n    + year scroller width\n  */\n    /* prettier-ignore */\n    width:\n    calc(\n        var(--lumo-size-m) * 7\n      + var(--lumo-space-xs) * 2\n      + 57px\n    );\n    height: 100%;\n    max-height: calc(var(--lumo-size-m) * 14);\n    overflow: hidden;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  [part='overlay'] {\n    flex-direction: column;\n  }\n\n  [part='content'] {\n    padding: 0;\n    height: 100%;\n    overflow: hidden;\n    -webkit-mask-image: none;\n    mask-image: none;\n  }\n\n  :host([top-aligned]) [part~='overlay'] {\n    margin-top: var(--lumo-space-xs);\n  }\n\n  :host([bottom-aligned]) [part~='overlay'] {\n    margin-bottom: var(--lumo-space-xs);\n  }\n\n  @media (max-width: 420px), (max-height: 420px) {\n    [part='overlay'] {\n      width: 100vw;\n      height: 70vh;\n      max-height: 70vh;\n    }\n  }\n`;\n\nregisterStyles('vaadin-date-picker-overlay', [menuOverlay, datePickerOverlay], {\n  moduleId: 'lumo-date-picker-overlay',\n});\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-date-picker-year',\n  css`\n    :host([current]) [part='year-number'] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    :host(:not([current])) [part='year-number'],\n    [part='year-separator'] {\n      opacity: var(--_lumo-date-picker-year-opacity, 0.7);\n      transition: 0.2s opacity;\n    }\n\n    [part='year-number'],\n    [part='year-separator'] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50%;\n      transform: translateY(-50%);\n    }\n\n    [part='year-separator']::after {\n      color: var(--lumo-disabled-text-color);\n      content: '\\\\2022';\n    }\n  `,\n  { moduleId: 'lumo-date-picker-year' },\n);\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/button/theme/lumo/vaadin-button-styles.js';\nimport './vaadin-date-picker-year-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-date-picker-overlay-content',\n  css`\n    :host {\n      position: relative;\n      /* Background for the year scroller, placed here as we are using a mask image on the actual years part */\n      background-image: linear-gradient(var(--lumo-shade-5pct), var(--lumo-shade-5pct));\n      background-size: 57px 100%;\n      background-position: top right;\n      background-repeat: no-repeat;\n      cursor: default;\n    }\n\n    ::slotted([slot='months']) {\n      /* Month calendar height:\n              header height + margin-bottom\n            + weekdays height + margin-bottom\n            + date cell heights\n            + small margin between month calendars\n        */\n      /* prettier-ignore */\n      --vaadin-infinite-scroller-item-height:\n          calc(\n              var(--lumo-font-size-l) + var(--lumo-space-m)\n            + var(--lumo-font-size-xs) + var(--lumo-space-s)\n            + var(--lumo-size-m) * 6\n            + var(--lumo-space-s)\n          );\n      --vaadin-infinite-scroller-buffer-offset: 10%;\n      -webkit-mask-image: linear-gradient(transparent, #000 10%, #000 85%, transparent);\n      mask-image: linear-gradient(transparent, #000 10%, #000 85%, transparent);\n      position: relative;\n      margin-right: 57px;\n    }\n\n    ::slotted([slot='years']) {\n      /* TODO get rid of fixed magic number */\n      --vaadin-infinite-scroller-buffer-width: 97px;\n      width: 57px;\n      height: auto;\n      top: 0;\n      bottom: 0;\n      font-size: var(--lumo-font-size-s);\n      box-shadow: inset 2px 0 4px 0 var(--lumo-shade-5pct);\n      -webkit-mask-image: linear-gradient(transparent, #000 35%, #000 65%, transparent);\n      mask-image: linear-gradient(transparent, #000 35%, #000 65%, transparent);\n      cursor: var(--lumo-clickable-cursor);\n    }\n\n    ::slotted([slot='years']:hover) {\n      --_lumo-date-picker-year-opacity: 1;\n    }\n\n    /* TODO unsupported selector */\n    #scrollers {\n      position: static;\n      display: block;\n    }\n\n    /* TODO fix this in vaadin-date-picker that it adapts to the width of the year scroller */\n    :host([desktop]) ::slotted([slot='months']) {\n      right: auto;\n    }\n\n    /* Year scroller position indicator */\n    ::slotted([slot='years'])::before {\n      border: none;\n      width: 1em;\n      height: 1em;\n      background-color: var(--lumo-base-color);\n      background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n      transform: translate(-75%, -50%) rotate(45deg);\n      border-top-right-radius: var(--lumo-border-radius-s);\n      box-shadow: 2px -2px 6px 0 var(--lumo-shade-5pct);\n      z-index: 1;\n    }\n\n    [part='toolbar'] {\n      padding: var(--lumo-space-s);\n      border-bottom-left-radius: var(--lumo-border-radius-l);\n      margin-right: 57px;\n    }\n\n    [part='toolbar'] ::slotted(vaadin-button) {\n      margin: 0;\n    }\n\n    /* Narrow viewport mode (fullscreen) */\n\n    :host([fullscreen]) [part='toolbar'] {\n      order: -1;\n      background-color: var(--lumo-base-color);\n    }\n\n    :host([fullscreen]) [part='overlay-header'] {\n      order: -2;\n      height: var(--lumo-size-m);\n      padding: var(--lumo-space-s);\n      position: absolute;\n      left: 0;\n      right: 0;\n      justify-content: center;\n    }\n\n    :host([fullscreen]) [part='toggle-button'],\n    :host([fullscreen]) [part='clear-button'],\n    [part='overlay-header'] [part='label'] {\n      display: none;\n    }\n\n    /* Very narrow screen (year scroller initially hidden) */\n\n    [part='years-toggle-button'] {\n      display: flex;\n      align-items: center;\n      height: var(--lumo-size-s);\n      padding: 0 0.5em;\n      border-radius: var(--lumo-border-radius-m);\n      z-index: 3;\n      color: var(--lumo-primary-text-color);\n      font-weight: 500;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    :host([years-visible]) [part='years-toggle-button'] {\n      background-color: var(--lumo-primary-color);\n      color: var(--lumo-primary-contrast-color);\n    }\n\n    /* TODO magic number (same as used for media-query in vaadin-date-picker-overlay-content) */\n    @media screen and (max-width: 374px) {\n      :host {\n        background-image: none;\n      }\n\n      [part='toolbar'],\n      ::slotted([slot='months']) {\n        margin-right: 0;\n      }\n\n      /* TODO make date-picker adapt to the width of the years part */\n      ::slotted([slot='years']) {\n        --vaadin-infinite-scroller-buffer-width: 90px;\n        width: 50px;\n        background-color: var(--lumo-shade-5pct);\n      }\n\n      :host([years-visible]) ::slotted([slot='months']) {\n        padding-left: 50px;\n      }\n    }\n  `,\n  { moduleId: 'lumo-date-picker-overlay-content' },\n);\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-month-calendar',\n  css`\n    :host {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      -webkit-tap-highlight-color: transparent;\n      user-select: none;\n      font-size: var(--lumo-font-size-m);\n      color: var(--lumo-body-text-color);\n      text-align: center;\n      padding: 0 var(--lumo-space-xs);\n      --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\n      --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\n      --_selection-color: var(--vaadin-selection-color, var(--lumo-primary-color));\n      --_selection-color-text: var(--vaadin-selection-color-text, var(--lumo-primary-text-color));\n    }\n\n    /* Month header */\n\n    [part='month-header'] {\n      color: var(--lumo-header-text-color);\n      font-size: var(--lumo-font-size-l);\n      line-height: 1;\n      font-weight: 500;\n      margin-bottom: var(--lumo-space-m);\n    }\n\n    /* Week days and numbers */\n\n    [part='weekdays'],\n    [part='weekday'],\n    [part='week-number'] {\n      font-size: var(--lumo-font-size-xxs);\n      line-height: 1;\n      color: var(--lumo-secondary-text-color);\n    }\n\n    [part='weekdays'] {\n      margin-bottom: var(--lumo-space-s);\n    }\n\n    [part='weekday']:empty,\n    [part='week-number'] {\n      width: var(--lumo-size-xs);\n    }\n\n    /* Date and week number cells */\n\n    [part~='date'],\n    [part='week-number'] {\n      box-sizing: border-box;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      height: var(--lumo-size-m);\n      position: relative;\n    }\n\n    [part~='date'] {\n      transition: color 0.1s;\n    }\n\n    [part~='date']:not(:empty) {\n      cursor: var(--lumo-clickable-cursor);\n    }\n\n    :host([week-numbers]) [part='weekday']:not(:empty),\n    :host([week-numbers]) [part~='date'] {\n      width: calc((100% - var(--lumo-size-xs)) / 7);\n    }\n\n    /* Today date */\n\n    [part~='date'][part~='today'] {\n      color: var(--_selection-color-text);\n    }\n\n    /* Focused date */\n\n    [part~='date']::before {\n      content: '';\n      position: absolute;\n      z-index: -1;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      min-width: 2em;\n      min-height: 2em;\n      width: 80%;\n      height: 80%;\n      max-height: 100%;\n      max-width: 100%;\n      border-radius: var(--lumo-border-radius-m);\n    }\n\n    [part~='date'][part~='focused']::before {\n      box-shadow: 0 0 0 1px var(--lumo-base-color), 0 0 0 calc(var(--_focus-ring-width) + 1px) var(--_focus-ring-color);\n    }\n\n    :host(:not([focused])) [part~='date'][part~='focused']::before {\n      animation: vaadin-date-picker-month-calendar-focus-date 1.4s infinite;\n    }\n\n    @keyframes vaadin-date-picker-month-calendar-focus-date {\n      50% {\n        box-shadow: 0 0 0 1px var(--lumo-base-color), 0 0 0 calc(var(--_focus-ring-width) + 1px) transparent;\n      }\n    }\n\n    [part~='date']:not(:empty):not([part~='disabled']):not([part~='selected']):hover::before {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    [part~='date'][part~='selected'] {\n      color: var(--lumo-primary-contrast-color);\n    }\n\n    [part~='date'][part~='selected']::before {\n      background-color: var(--_selection-color);\n    }\n\n    [part~='date'][part~='disabled'] {\n      color: var(--lumo-disabled-text-color);\n    }\n\n    @media (pointer: coarse) {\n      [part~='date']:hover:not([part~='selected'])::before,\n      [part~='focused']:not([part~='selected'])::before {\n        display: none;\n      }\n\n      [part~='date']:not(:empty):not([part~='disabled']):active::before {\n        display: block;\n      }\n\n      [part~='date'][part~='selected']::before {\n        box-shadow: none;\n      }\n    }\n\n    /* Disabled */\n\n    :host([disabled]) * {\n      color: var(--lumo-disabled-text-color) !important;\n    }\n  `,\n  { moduleId: 'lumo-month-calendar' },\n);\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    @keyframes vaadin-date-picker-month-calendar-focus-date {\n      50% {\n        box-shadow: 0 0 0 var(--_focus-ring-width) transparent;\n      }\n    }\n  </style>\n`;\n\ndocument.head.appendChild(template.content);\n", "import '@vaadin/input-container/theme/lumo/vaadin-input-container-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst datePicker = css`\n  :host {\n    outline: none;\n  }\n\n  [part='toggle-button']::before {\n    content: var(--lumo-icons-calendar);\n  }\n\n  [part='clear-button']::before {\n    content: var(--lumo-icons-cross);\n  }\n\n  @media (max-width: 420px), (max-height: 420px) {\n    [part='overlay-content'] {\n      height: 70vh;\n    }\n  }\n\n  :host([dir='rtl']) [part='input-field'] ::slotted(input) {\n    --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n  }\n\n  :host([dir='rtl']) [part='input-field'] ::slotted(input:placeholder-shown) {\n    --_lumo-text-field-overflow-mask-image: none;\n  }\n`;\n\nregisterStyles('vaadin-date-picker', [inputFieldShared, datePicker], { moduleId: 'lumo-date-picker' });\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const datePickerOverlayStyles = css`\n  [part='overlay'] {\n    display: flex;\n    flex: auto;\n  }\n\n  [part~='content'] {\n    flex: auto;\n  }\n\n  @media (forced-colors: active) {\n    [part='overlay'] {\n      outline: 3px solid;\n    }\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { OverlayMixin } from '@vaadin/overlay/src/vaadin-overlay-mixin.js';\nimport { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';\nimport { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { datePickerOverlayStyles } from './vaadin-date-picker-overlay-styles.js';\n\nregisterStyles('vaadin-date-picker-overlay', [overlayStyles, datePickerOverlayStyles], {\n  moduleId: 'vaadin-date-picker-overlay-styles',\n});\n\n/**\n * An element used internally by `<vaadin-date-picker>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes PositionMixin\n * @mixes OverlayMixin\n * @mixes DirMixin\n * @mixes ThemableMixin\n * @private\n */\nclass DatePickerOverlay extends PositionMixin(OverlayMixin(DirMixin(ThemableMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-date-picker-overlay';\n  }\n\n  static get template() {\n    return html`\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\n      <div part=\"overlay\" id=\"overlay\">\n        <div part=\"content\" id=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndefineCustomElement(DatePickerOverlay);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { isFirefox } from '@vaadin/component-base/src/browser-utils.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\n\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n  <style>\n    :host {\n      display: block;\n      overflow: hidden;\n      height: 500px;\n    }\n\n    #scroller {\n      position: relative;\n      height: 100%;\n      overflow: auto;\n      outline: none;\n      margin-right: -40px;\n      -webkit-overflow-scrolling: touch;\n      overflow-x: hidden;\n    }\n\n    #scroller.notouchscroll {\n      -webkit-overflow-scrolling: auto;\n    }\n\n    #scroller::-webkit-scrollbar {\n      display: none;\n    }\n\n    .buffer {\n      position: absolute;\n      width: var(--vaadin-infinite-scroller-buffer-width, 100%);\n      box-sizing: border-box;\n      padding-right: 40px;\n      top: var(--vaadin-infinite-scroller-buffer-offset, 0);\n      animation: fadein 0.2s;\n    }\n\n    @keyframes fadein {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n  </style>\n\n  <div id=\"scroller\">\n    <div class=\"buffer\"></div>\n    <div class=\"buffer\"></div>\n    <div id=\"fullHeight\"></div>\n  </div>\n`;\n\n/**\n * @extends HTMLElement\n * @private\n */\nexport class InfiniteScroller extends HTMLElement {\n  constructor() {\n    super();\n\n    const root = this.attachShadow({ mode: 'open' });\n    root.appendChild(template.content.cloneNode(true));\n\n    /**\n     * Count of individual items in each buffer.\n     * The scroller has 2 buffers altogether so bufferSize of 20\n     * will result in 40 buffered DOM items in total.\n     * Changing after initialization not supported.\n     * @type {number}\n     */\n    this.bufferSize = 20;\n\n    /**\n     * The amount of initial scroll top. Needed in order for the\n     * user to be able to scroll backwards.\n     * @type {number}\n     * @private\n     */\n    this._initialScroll = 500000;\n\n    /**\n     * The index/position mapped at _initialScroll point.\n     * @type {number}\n     * @private\n     */\n    this._initialIndex = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this._activated = false;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get active() {\n    return this._activated;\n  }\n\n  set active(active) {\n    if (active && !this._activated) {\n      this._createPool();\n      this._activated = true;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  get bufferOffset() {\n    return this._buffers[0].offsetTop;\n  }\n\n  /**\n   * @return {number}\n   */\n  get itemHeight() {\n    if (!this._itemHeightVal) {\n      const itemHeight = getComputedStyle(this).getPropertyValue('--vaadin-infinite-scroller-item-height');\n      // Use background-position temp inline style for unit conversion\n      const tmpStyleProp = 'background-position';\n      this.$.fullHeight.style.setProperty(tmpStyleProp, itemHeight);\n      const itemHeightPx = getComputedStyle(this.$.fullHeight).getPropertyValue(tmpStyleProp);\n      this.$.fullHeight.style.removeProperty(tmpStyleProp);\n      this._itemHeightVal = parseFloat(itemHeightPx);\n    }\n\n    return this._itemHeightVal;\n  }\n\n  /** @private */\n  get _bufferHeight() {\n    return this.itemHeight * this.bufferSize;\n  }\n\n  /**\n   * @return {number}\n   */\n  get position() {\n    return (this.$.scroller.scrollTop - this._buffers[0].translateY) / this.itemHeight + this._firstIndex;\n  }\n\n  /**\n   * Current scroller position as index. Can be a fractional number.\n   *\n   * @type {number}\n   */\n  set position(index) {\n    this._preventScrollEvent = true;\n    if (index > this._firstIndex && index < this._firstIndex + this.bufferSize * 2) {\n      this.$.scroller.scrollTop = this.itemHeight * (index - this._firstIndex) + this._buffers[0].translateY;\n    } else {\n      this._initialIndex = ~~index;\n      this._reset();\n      this._scrollDisabled = true;\n      this.$.scroller.scrollTop += (index % 1) * this.itemHeight;\n      this._scrollDisabled = false;\n    }\n\n    if (this._mayHaveMomentum) {\n      // Stop the possible iOS Safari momentum with -webkit-overflow-scrolling: auto;\n      this.$.scroller.classList.add('notouchscroll');\n      this._mayHaveMomentum = false;\n\n      setTimeout(() => {\n        // Restore -webkit-overflow-scrolling: touch; after a small delay.\n        this.$.scroller.classList.remove('notouchscroll');\n      }, 10);\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    if (!this._ready) {\n      this._ready = true;\n\n      this.$ = {};\n      this.shadowRoot.querySelectorAll('[id]').forEach((node) => {\n        this.$[node.id] = node;\n      });\n\n      this.$.scroller.addEventListener('scroll', () => this._scroll());\n\n      /** @private */\n      this._buffers = [...this.shadowRoot.querySelectorAll('.buffer')];\n\n      this.$.fullHeight.style.height = `${this._initialScroll * 2}px`;\n\n      // Firefox interprets elements with overflow:auto as focusable\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1069739\n      if (isFirefox) {\n        this.$.scroller.tabIndex = -1;\n      }\n    }\n  }\n\n  /**\n   * Force the scroller to update clones after a reset, without\n   * waiting for the debouncer to resolve.\n   */\n  forceUpdate() {\n    if (this._debouncerUpdateClones) {\n      this._buffers[0].updated = this._buffers[1].updated = false;\n      this._updateClones();\n      this._debouncerUpdateClones.cancel();\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _createElement() {\n    // To be implemented.\n  }\n\n  /**\n   * @param {HTMLElement} _element\n   * @param {number} _index\n   * @protected\n   * @override\n   */\n  _updateElement(_element, _index) {\n    // To be implemented.\n  }\n\n  /** @private */\n  _finishInit() {\n    if (!this._initDone) {\n      // Once the first set of items start fading in, stamp the rest\n      this._buffers.forEach((buffer) => {\n        [...buffer.children].forEach((slot) => {\n          this._ensureStampedInstance(slot._itemWrapper);\n        });\n      });\n\n      if (!this._buffers[0].translateY) {\n        this._reset();\n      }\n\n      this._initDone = true;\n      this.dispatchEvent(new CustomEvent('init-done'));\n    }\n  }\n\n  /** @private */\n  _translateBuffer(up) {\n    const index = up ? 1 : 0;\n    this._buffers[index].translateY = this._buffers[index ? 0 : 1].translateY + this._bufferHeight * (index ? -1 : 1);\n    this._buffers[index].style.transform = `translate3d(0, ${this._buffers[index].translateY}px, 0)`;\n    this._buffers[index].updated = false;\n    this._buffers.reverse();\n  }\n\n  /** @private */\n  _scroll() {\n    if (this._scrollDisabled) {\n      return;\n    }\n\n    const scrollTop = this.$.scroller.scrollTop;\n    if (scrollTop < this._bufferHeight || scrollTop > this._initialScroll * 2 - this._bufferHeight) {\n      // Scrolled near the end/beginning of the scrollable area -> reset.\n      this._initialIndex = ~~this.position;\n      this._reset();\n    }\n\n    // Check if we scrolled enough to translate the buffer positions.\n    const offset = this.itemHeight + this.bufferOffset;\n    const upperThresholdReached = scrollTop > this._buffers[1].translateY + offset;\n    const lowerThresholdReached = scrollTop < this._buffers[0].translateY + offset;\n\n    if (upperThresholdReached || lowerThresholdReached) {\n      this._translateBuffer(lowerThresholdReached);\n      this._updateClones();\n    }\n\n    if (!this._preventScrollEvent) {\n      this.dispatchEvent(new CustomEvent('custom-scroll', { bubbles: false, composed: true }));\n      this._mayHaveMomentum = true;\n    }\n    this._preventScrollEvent = false;\n\n    this._debouncerScrollFinish = Debouncer.debounce(this._debouncerScrollFinish, timeOut.after(200), () => {\n      const scrollerRect = this.$.scroller.getBoundingClientRect();\n      if (!this._isVisible(this._buffers[0], scrollerRect) && !this._isVisible(this._buffers[1], scrollerRect)) {\n        this.position = this.position; // eslint-disable-line no-self-assign\n      }\n    });\n  }\n\n  /** @private */\n  _reset() {\n    this._scrollDisabled = true;\n    this.$.scroller.scrollTop = this._initialScroll;\n    this._buffers[0].translateY = this._initialScroll - this._bufferHeight;\n    this._buffers[1].translateY = this._initialScroll;\n    this._buffers.forEach((buffer) => {\n      buffer.style.transform = `translate3d(0, ${buffer.translateY}px, 0)`;\n    });\n    this._buffers[0].updated = this._buffers[1].updated = false;\n    this._updateClones(true);\n\n    this._debouncerUpdateClones = Debouncer.debounce(this._debouncerUpdateClones, timeOut.after(200), () => {\n      this._buffers[0].updated = this._buffers[1].updated = false;\n      this._updateClones();\n    });\n\n    this._scrollDisabled = false;\n  }\n\n  /** @private */\n  _createPool() {\n    const container = this.getBoundingClientRect();\n    this._buffers.forEach((buffer) => {\n      for (let i = 0; i < this.bufferSize; i++) {\n        const itemWrapper = document.createElement('div');\n        itemWrapper.style.height = `${this.itemHeight}px`;\n        itemWrapper.instance = {};\n\n        const slotName = `vaadin-infinite-scroller-item-content-${generateUniqueId()}`;\n\n        const slot = document.createElement('slot');\n        slot.setAttribute('name', slotName);\n        slot._itemWrapper = itemWrapper;\n        buffer.appendChild(slot);\n\n        itemWrapper.setAttribute('slot', slotName);\n        this.appendChild(itemWrapper);\n\n        // Only stamp the visible instances first\n        if (this._isVisible(itemWrapper, container)) {\n          this._ensureStampedInstance(itemWrapper);\n        }\n      }\n    });\n\n    requestAnimationFrame(() => {\n      this._finishInit();\n    });\n  }\n\n  /** @private */\n  _ensureStampedInstance(itemWrapper) {\n    if (itemWrapper.firstElementChild) {\n      return;\n    }\n\n    const tmpInstance = itemWrapper.instance;\n\n    itemWrapper.instance = this._createElement();\n    itemWrapper.appendChild(itemWrapper.instance);\n\n    Object.keys(tmpInstance).forEach((prop) => {\n      itemWrapper.instance[prop] = tmpInstance[prop];\n    });\n  }\n\n  /** @private */\n  _updateClones(viewPortOnly) {\n    this._firstIndex = ~~((this._buffers[0].translateY - this._initialScroll) / this.itemHeight) + this._initialIndex;\n\n    const scrollerRect = viewPortOnly ? this.$.scroller.getBoundingClientRect() : undefined;\n    this._buffers.forEach((buffer, bufferIndex) => {\n      if (!buffer.updated) {\n        const firstIndex = this._firstIndex + this.bufferSize * bufferIndex;\n\n        [...buffer.children].forEach((slot, index) => {\n          const itemWrapper = slot._itemWrapper;\n          if (!viewPortOnly || this._isVisible(itemWrapper, scrollerRect)) {\n            this._updateElement(itemWrapper.instance, firstIndex + index);\n          }\n        });\n        buffer.updated = true;\n      }\n    });\n  }\n\n  /** @private */\n  _isVisible(element, container) {\n    const rect = element.getBoundingClientRect();\n    return rect.bottom > container.top && rect.top < container.bottom;\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { dateAfterXMonths } from './vaadin-date-picker-helper.js';\nimport { InfiniteScroller } from './vaadin-infinite-scroller.js';\n\nconst stylesTemplate = document.createElement('template');\nstylesTemplate.innerHTML = `\n  <style>\n    :host {\n      --vaadin-infinite-scroller-item-height: 270px;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      height: 100%;\n    }\n  </style>\n`;\n\n/**\n * An element used internally by `<vaadin-date-picker>`. Not intended to be used separately.\n *\n * @customElement\n * @extends InfiniteScroller\n * @private\n */\nclass DatePickerMonthScroller extends InfiniteScroller {\n  static get is() {\n    return 'vaadin-date-picker-month-scroller';\n  }\n\n  constructor() {\n    super();\n\n    this.bufferSize = 3;\n    this.shadowRoot.appendChild(stylesTemplate.content.cloneNode(true));\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _createElement() {\n    return document.createElement('vaadin-month-calendar');\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {number} index\n   * @protected\n   * @override\n   */\n  _updateElement(element, index) {\n    element.month = dateAfterXMonths(index);\n  }\n}\n\ndefineCustomElement(DatePickerMonthScroller);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { InfiniteScroller } from './vaadin-infinite-scroller.js';\n\nconst stylesTemplate = document.createElement('template');\nstylesTemplate.innerHTML = `\n  <style>\n    :host {\n      --vaadin-infinite-scroller-item-height: 80px;\n      width: 50px;\n      display: block;\n      height: 100%;\n      position: absolute;\n      right: 0;\n      transform: translateX(100%);\n      -webkit-tap-highlight-color: transparent;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n      /* Center the year scroller position. */\n      --vaadin-infinite-scroller-buffer-offset: 50%;\n    }\n\n    :host::before {\n      content: '';\n      display: block;\n      background: transparent;\n      width: 0;\n      height: 0;\n      position: absolute;\n      left: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      border-width: 6px;\n      border-style: solid;\n      border-color: transparent;\n      border-left-color: #000;\n    }\n  </style>\n`;\n\n/**\n * An element used internally by `<vaadin-date-picker>`. Not intended to be used separately.\n *\n * @customElement\n * @extends InfiniteScroller\n * @private\n */\nclass DatePickerYearScroller extends InfiniteScroller {\n  static get is() {\n    return 'vaadin-date-picker-year-scroller';\n  }\n\n  constructor() {\n    super();\n\n    this.bufferSize = 12;\n    this.shadowRoot.appendChild(stylesTemplate.content.cloneNode(true));\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _createElement() {\n    return document.createElement('vaadin-date-picker-year');\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {number} index\n   * @protected\n   * @override\n   */\n  _updateElement(element, index) {\n    element.year = this._yearAfterXYears(index);\n  }\n\n  /** @private */\n  _yearAfterXYears(index) {\n    const today = new Date();\n    const result = new Date(today);\n    result.setFullYear(parseInt(index) + today.getFullYear());\n    return result.getFullYear();\n  }\n}\n\ndefineCustomElement(DatePickerYearScroller);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const DatePickerYearMixin = (superClass) =>\n  class DatePickerYearMixin extends superClass {\n    static get properties() {\n      return {\n        year: {\n          type: String,\n          sync: true,\n        },\n\n        selectedDate: {\n          type: Object,\n          sync: true,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['__updateSelected(year, selectedDate)'];\n    }\n\n    /** @private */\n    __updateSelected(year, selectedDate) {\n      this.toggleAttribute('selected', selectedDate && selectedDate.getFullYear() === year);\n      this.toggleAttribute('current', year === new Date().getFullYear());\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DatePickerYearMixin } from './vaadin-date-picker-year-mixin.js';\n\n/**\n * An element used internally by `<vaadin-date-picker>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DatePickerYearMixin\n * @private\n */\nexport class DatePickerYear extends ThemableMixin(DatePickerYearMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-date-picker-year';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          height: 100%;\n        }\n      </style>\n      <div part=\"year-number\">[[year]]</div>\n      <div part=\"year-separator\" aria-hidden=\"true\"></div>\n    `;\n  }\n}\n\ndefineCustomElement(DatePickerYear);\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { TemplateInstanceBase, templatize, modelForElement } from '../utils/templatize.js'; // eslint-disable-line no-unused-vars\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\nimport { suppressTemplateNotifications } from '../utils/settings.js';\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {PolymerElement}\n * @private\n */\nconst domRepeatBase = OptionalMutableData(PolymerElement);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <dom-repeat items=\"{{employees}}\">\n *       <template>\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *       </template>\n *     </dom-repeat>\n *\n *   </template>\n *\n * </dom-module>\n * ```\n *\n * With the following custom element definition:\n *\n * ```js\n * class EmployeeList extends PolymerElement {\n *   static get is() { return 'employee-list'; }\n *   static get properties() {\n *     return {\n *       employees: {\n *         value() {\n *           return [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *           ];\n *         }\n *       }\n *     };\n *   }\n * }\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on the PropertyEffects mixin (`push`, `pop`, `splice`,\n * `shift`, `unshift`), and template instances will be kept in sync with the\n * data in the array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model should be used to manipulate data on the\n * instance, for example `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer(item) {\n *   return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <dom-repeat items=\"{{employees}}\" filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @extends {domRepeatBase}\n * @appliesMixin OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nexport class DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time in ms after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffling of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: !suppressTemplateNotifications,\n        readOnly: true\n      },\n\n      /**\n       * When greater than zero, defines an initial count of template instances\n       * to render after setting the `items` array, before the next paint, and\n       * puts the `dom-repeat` into \"chunking mode\".  The remaining items (and\n       * any future items as a result of pushing onto the array) will be created\n       * and rendered incrementally at each animation frame thereof until all\n       * instances have been rendered.\n       */\n      initialCount: {\n        type: Number\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate (in\n       * fps) to target by throttling the number of instances rendered each\n       * frame to not exceed the budget for the target frame rate.  The\n       * framerate is effectively the number of `requestAnimationFrame`s that\n       * it tries to allow to actually fire in a given second. It does this\n       * by measuring the time between `rAF`s and continuously adjusting the\n       * number of items created each `rAF` to maintain the target framerate.\n       * Setting this to a higher number allows lower latency and higher\n       * throughput for event handlers and other tasks, but results in a\n       * longer time for the remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      },\n\n      /**\n       * When the global `suppressTemplateNotifications` setting is used, setting\n       * `notifyDomChange: true` will enable firing `dom-change` events on this\n       * element.\n       */\n      notifyDomChange: {\n        type: Boolean\n      },\n\n      /**\n       * When chunking is enabled via `initialCount` and the `items` array is\n       * set to a new array, this flag controls whether the previously rendered\n       * instances are reused or not.\n       *\n       * When `true`, any previously rendered template instances are updated in\n       * place to their new item values synchronously in one shot, and then any\n       * further items (if any) are chunked out.  When `false`, the list is\n       * returned back to its `initialCount` (any instances over the initial\n       * count are discarded) and the remainder of the list is chunked back in.\n       * Set this to `true` to avoid re-creating the list and losing scroll\n       * position, although note that when changing the list to completely\n       * different data the render thread will be blocked until all existing\n       * instances are updated to their new data.\n       */\n      reuseChunkedInstances: {\n        type: Boolean\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__renderStartTime = null;\n    this.__itemsArrayChanged = false;\n    this.__shouldMeasureChunk = false;\n    this.__shouldContinueChunking = false;\n    this.__chunkingId = 0;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    /** @type {?function(new:TemplateInstanceBase, Object=)} */\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n    /** @type {TemplateInfo} */\n    this._templateInfo;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n    // Stop chunking if one was in progress\n    if (this.__chunkingId) {\n      cancelAnimationFrame(this.__chunkingId);\n    }\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!hideElementsGlobally()) {\n      this.style.display = 'none';\n    }\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let wrappedParent = wrap(wrap(this).parentNode);\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, wrappedParent);\n      }\n      // Restart chunking if one was in progress when disconnected\n      if (this.__chunkingId) {\n        this.__render();\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      // When `removeNestedTemplates` is true, the \"template\" is the element\n      // itself, which has been given a `_templateInfo` property\n      const thisAsTemplate = /** @type {!HTMLTemplateElement} */ (\n          /** @type {!HTMLElement} */ (this));\n      let template = this.template = thisAsTemplate._templateInfo ?\n          thisAsTemplate :\n          /** @type {!HTMLTemplateElement} */ (this.querySelector('template'));\n      if (!template) {\n        // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {DomRepeat}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {DomRepeat}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, `${JSCompiler_renameProperty('items', this)}.${idx}`, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __functionFromPropertyValue(functionOrMethodName) {\n    if (typeof functionOrMethodName === 'string') {\n      let methodName = functionOrMethodName;\n      let obj = this.__getMethodHost();\n      return function() { return obj[methodName].apply(obj, arguments); };\n    }\n\n    return functionOrMethodName;\n  }\n\n  __sortChanged(sort) {\n    this.__sortFn = this.__functionFromPropertyValue(sort);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __filterChanged(filter) {\n    this.__filterFn = this.__functionFromPropertyValue(filter);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __handleObservedPaths(path) {\n    // Handle cases where path changes should cause a re-sort/filter\n    if (this.__sortFn || this.__filterFn) {\n      if (!path) {\n        // Always re-render if the item itself changed\n        this.__debounceRender(this.__render, this.delay);\n      } else if (this.__observePaths) {\n        // Otherwise, re-render if the path changed matches an observed path\n        let paths = this.__observePaths;\n        for (let i=0; i<paths.length; i++) {\n          if (path.indexOf(paths[i]) === 0) {\n            this.__debounceRender(this.__render, this.delay);\n          }\n        }\n      }\n    }\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (returns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a render.  Restart chunking when the items changed (for\n      // backward compatibility), unless `reuseChunkedInstances` option is set\n      if (change.path === 'items') {\n        this.__itemsArrayChanged = true;\n      }\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   * @return {void}\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    let items = this.items || [];\n    // Sort and filter the items into a mapping array from instance->item\n    const isntIdxToItemsIdx = this.__sortAndFilterItems(items);\n    // If we're chunking, increase the limit if there are new instances to\n    // create and schedule the next chunk\n    const limit = this.__calculateLimit(isntIdxToItemsIdx.length);\n    // Create, update, and/or remove instances\n    this.__updateInstances(items, limit, isntIdxToItemsIdx);\n    // If we're chunking, schedule a rAF task to measure/continue chunking.     \n    // Do this before any notifying events (renderedItemCount & dom-change)\n    // since those could modify items and enqueue a new full render which will\n    // pre-empt this measurement.\n    if (this.initialCount &&\n       (this.__shouldMeasureChunk || this.__shouldContinueChunking)) {\n      cancelAnimationFrame(this.__chunkingId);\n      this.__chunkingId = requestAnimationFrame(() => {\n        this.__chunkingId = null;\n        this.__continueChunking();\n      });\n    }\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    if (!suppressTemplateNotifications || this.notifyDomChange) {\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n\n  __sortAndFilterItems(items) {\n    // Generate array maping the instance index to the items array index\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    return isntIdxToItemsIdx;\n  }\n\n  __calculateLimit(filteredItemCount) {\n    let limit = filteredItemCount;\n    const currentCount = this.__instances.length;\n    // When chunking, we increase the limit from the currently rendered count\n    // by the chunk count that is re-calculated after each rAF (with special\n    // cases for resetting the limit to initialCount after changing items)\n    if (this.initialCount) {\n      let newCount;\n      if (!this.__chunkCount ||\n        (this.__itemsArrayChanged && !this.reuseChunkedInstances)) {\n        // Limit next render to the initial count\n        limit = Math.min(filteredItemCount, this.initialCount);\n        // Subtract off any existing instances to determine the number of\n        // instances that will be created\n        newCount = Math.max(limit - currentCount, 0);\n        // Initialize the chunk size with how many items we're creating\n        this.__chunkCount = newCount || 1;\n      } else {\n        // The number of new instances that will be created is based on the\n        // existing instances, the new list size, and the chunk size\n        newCount = Math.min(\n          Math.max(filteredItemCount - currentCount, 0), \n          this.__chunkCount);\n        // Update the limit based on how many new items we're making, limited\n        // buy the total size of the list\n        limit = Math.min(currentCount + newCount, filteredItemCount);\n      }\n      // Record some state about chunking for use in `__continueChunking`\n      this.__shouldMeasureChunk = newCount === this.__chunkCount;\n      this.__shouldContinueChunking = limit < filteredItemCount;\n      this.__renderStartTime = performance.now();\n    }\n    this.__itemsArrayChanged = false;\n    return limit;\n  }\n\n  __continueChunking() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio of\n    // target/actual frame time.  Only modify chunk size if our measurement\n    // reflects the cost of a creating a full chunk's worth of instances; this\n    // avoids scaling up the chunk size if we e.g. quickly re-rendered instances\n    // in place\n    if (this.__shouldMeasureChunk) {\n      const renderTime = performance.now() - this.__renderStartTime;\n      const ratio = this._targetFrameTime / renderTime;\n      this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    }\n    // Enqueue a new render if we haven't reached the full size of the list\n    if (this.__shouldContinueChunking) {\n      this.__debounceRender(this.__render);\n    }\n  }\n  \n  __updateInstances(items, limit, isntIdxToItemsIdx) {\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx;\n    // Generate instances and assign items\n    for (instIdx=0; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    const wrappedRoot = wrap(inst.root);\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      wrappedRoot.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    // Note, this is pre-wrapped as an optimization\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    this.__detachInstance(idx);\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    const inst = this.__stampInstance(item, instIdx, itemIdx);\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    wrap(wrap(this).parentNode).insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hidden Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {!HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {!HTMLElement} el Element for which to return the index.\n   * @return {?number} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {!HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\nimport { dateAllowed, dateEquals, getISOWeekNumber } from './vaadin-date-picker-helper.js';\n\n/**\n * @polymerMixin\n * @mixes FocusMixin\n */\nexport const MonthCalendarMixin = (superClass) =>\n  class MonthCalendarMixinClass extends FocusMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * A `Date` object defining the month to be displayed. Only year and\n         * month properties are actually used.\n         */\n        month: {\n          type: Object,\n          value: new Date(),\n          sync: true,\n        },\n\n        /**\n         * A `Date` object for the currently selected date.\n         */\n        selectedDate: {\n          type: Object,\n          notify: true,\n          sync: true,\n        },\n\n        /**\n         * A `Date` object for the currently focused date.\n         */\n        focusedDate: {\n          type: Object,\n        },\n\n        /**\n         * Set true to display ISO-8601 week numbers in the calendar. Notice that\n         * displaying week numbers is only supported when `i18n.firstDayOfWeek`\n         * is 1 (Monday).\n         */\n        showWeekNumbers: {\n          type: Boolean,\n          value: false,\n        },\n\n        i18n: {\n          type: Object,\n        },\n\n        /**\n         * Flag stating whether taps on the component should be ignored.\n         */\n        ignoreTaps: {\n          type: Boolean,\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         */\n        minDate: {\n          type: Date,\n          value: null,\n          sync: true,\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         */\n        maxDate: {\n          type: Date,\n          value: null,\n          sync: true,\n        },\n\n        disabled: {\n          type: Boolean,\n          reflectToAttribute: true,\n        },\n\n        /** @protected */\n        _days: {\n          type: Array,\n        },\n\n        /** @protected */\n        _weeks: {\n          type: Array,\n        },\n\n        /** @private */\n        _notTapping: {\n          type: Boolean,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['__focusedDateChanged(focusedDate, _days)'];\n    }\n\n    get focusableDateElement() {\n      return [...this.shadowRoot.querySelectorAll('[part~=date]')].find((datePart) => {\n        return dateEquals(datePart.date, this.focusedDate);\n      });\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      addListener(this.$.monthGrid, 'tap', this._handleTap.bind(this));\n    }\n\n    /**\n     * Returns true if all the dates in the month are out of the allowed range\n     * @protected\n     */\n    _isDisabled(month, minDate, maxDate) {\n      // First day of the month\n      const firstDate = new Date(0, 0);\n      firstDate.setFullYear(month.getFullYear());\n      firstDate.setMonth(month.getMonth());\n      firstDate.setDate(1);\n\n      // Last day of the month\n      const lastDate = new Date(0, 0);\n      lastDate.setFullYear(month.getFullYear());\n      lastDate.setMonth(month.getMonth() + 1);\n      lastDate.setDate(0);\n\n      if (\n        minDate &&\n        maxDate &&\n        minDate.getMonth() === maxDate.getMonth() &&\n        minDate.getMonth() === month.getMonth() &&\n        maxDate.getDate() - minDate.getDate() >= 0\n      ) {\n        return false;\n      }\n\n      return !dateAllowed(firstDate, minDate, maxDate) && !dateAllowed(lastDate, minDate, maxDate);\n    }\n\n    /** @protected */\n    _getTitle(month, i18n) {\n      if (month === undefined || i18n === undefined) {\n        return;\n      }\n      return i18n.formatTitle(i18n.monthNames[month.getMonth()], month.getFullYear());\n    }\n\n    /** @protected */\n    _onMonthGridTouchStart() {\n      this._notTapping = false;\n      setTimeout(() => {\n        this._notTapping = true;\n      }, 300);\n    }\n\n    /** @private */\n    _dateAdd(date, delta) {\n      date.setDate(date.getDate() + delta);\n    }\n\n    /** @private */\n    _applyFirstDayOfWeek(weekDayNames, firstDayOfWeek) {\n      if (weekDayNames === undefined || firstDayOfWeek === undefined) {\n        return;\n      }\n\n      return weekDayNames.slice(firstDayOfWeek).concat(weekDayNames.slice(0, firstDayOfWeek));\n    }\n\n    /** @protected */\n    _getWeekDayNames(i18n, showWeekNumbers) {\n      if (i18n === undefined || showWeekNumbers === undefined) {\n        return [];\n      }\n      const { weekdays, weekdaysShort, firstDayOfWeek } = i18n;\n\n      const weekDayNamesShort = this._applyFirstDayOfWeek(weekdaysShort, firstDayOfWeek);\n      const weekDayNames = this._applyFirstDayOfWeek(weekdays, firstDayOfWeek);\n\n      return weekDayNames.map((day, index) => {\n        return {\n          weekDay: day,\n          weekDayShort: weekDayNamesShort[index],\n        };\n      });\n    }\n\n    /** @private */\n    __focusedDateChanged(focusedDate, days) {\n      if (Array.isArray(days) && days.some((date) => dateEquals(date, focusedDate))) {\n        this.removeAttribute('aria-hidden');\n      } else {\n        this.setAttribute('aria-hidden', 'true');\n      }\n    }\n\n    /** @protected */\n    _getDate(date) {\n      return date ? date.getDate() : '';\n    }\n\n    /** @protected */\n    _showWeekSeparator(showWeekNumbers, i18n) {\n      // Currently only supported for locales that start the week on Monday.\n      return showWeekNumbers && i18n && i18n.firstDayOfWeek === 1;\n    }\n\n    /** @protected */\n    _isToday(date) {\n      return dateEquals(new Date(), date);\n    }\n\n    /** @protected */\n    _getDays(month, i18n) {\n      if (month === undefined || i18n === undefined) {\n        return [];\n      }\n      // First day of the month (at midnight).\n      const date = new Date(0, 0);\n      date.setFullYear(month.getFullYear());\n      date.setMonth(month.getMonth());\n      date.setDate(1);\n\n      // Rewind to first day of the week.\n      while (date.getDay() !== i18n.firstDayOfWeek) {\n        this._dateAdd(date, -1);\n      }\n\n      const days = [];\n      const startMonth = date.getMonth();\n      const targetMonth = month.getMonth();\n      while (date.getMonth() === targetMonth || date.getMonth() === startMonth) {\n        days.push(date.getMonth() === targetMonth ? new Date(date.getTime()) : null);\n\n        // Advance to next day.\n        this._dateAdd(date, 1);\n      }\n      return days;\n    }\n\n    /** @protected */\n    _getWeeks(days) {\n      return days.reduce((acc, day, i) => {\n        if (i % 7 === 0) {\n          acc.push([]);\n        }\n        acc[acc.length - 1].push(day);\n        return acc;\n      }, []);\n    }\n\n    /** @protected */\n    _handleTap(e) {\n      if (!this.ignoreTaps && !this._notTapping && e.target.date && !e.target.hasAttribute('disabled')) {\n        this.selectedDate = e.target.date;\n        this.dispatchEvent(\n          new CustomEvent('date-tap', { detail: { date: e.target.date }, bubbles: true, composed: true }),\n        );\n      }\n    }\n\n    /** @protected */\n    _preventDefault(e) {\n      e.preventDefault();\n    }\n\n    /** @protected */\n    __getWeekNumber(days) {\n      const date = days.reduce((acc, d) => {\n        return !acc && d ? d : acc;\n      });\n\n      return getISOWeekNumber(date);\n    }\n\n    /** @protected */\n    __getDayAriaLabel(date) {\n      if (!date) {\n        return '';\n      }\n\n      let ariaLabel = `${this._getDate(date)} ${this.i18n.monthNames[date.getMonth()]} ${date.getFullYear()}, ${\n        this.i18n.weekdays[date.getDay()]\n      }`;\n\n      if (this._isToday(date)) {\n        ariaLabel += `, ${this.i18n.today}`;\n      }\n\n      return ariaLabel;\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const monthCalendarStyles = css`\n  :host {\n    display: block;\n  }\n\n  #monthGrid {\n    width: 100%;\n    border-collapse: collapse;\n  }\n\n  #days-container tr,\n  #weekdays-container tr {\n    display: flex;\n  }\n\n  [part~='date'] {\n    outline: none;\n  }\n\n  [part~='disabled'] {\n    pointer-events: none;\n  }\n\n  [part='week-number'][hidden],\n  [part='weekday'][hidden] {\n    display: none;\n  }\n\n  [part='weekday'],\n  [part~='date'] {\n    width: calc(100% / 7);\n    padding: 0;\n    font-weight: normal;\n  }\n\n  [part='weekday']:empty,\n  [part='week-number'] {\n    width: 12.5%;\n    flex-shrink: 0;\n    padding: 0;\n  }\n\n  :host([week-numbers]) [part='weekday']:not(:empty),\n  :host([week-numbers]) [part~='date'] {\n    width: 12.5%;\n  }\n\n  @media (forced-colors: active) {\n    [part~='date'][part~='focused'] {\n      outline: 1px solid;\n    }\n\n    [part~='date'][part~='selected'] {\n      outline: 3px solid;\n    }\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { dateAllowed, dateEquals } from './vaadin-date-picker-helper.js';\nimport { MonthCalendarMixin } from './vaadin-month-calendar-mixin.js';\nimport { monthCalendarStyles } from './vaadin-month-calendar-styles.js';\n\nregisterStyles('vaadin-month-calendar', monthCalendarStyles, {\n  moduleId: 'vaadin-month-calendar-styles',\n});\n\n/**\n * @customElement\n * @extends HTMLElement\n * @private\n */\nclass MonthCalendar extends MonthCalendarMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <div part=\"month-header\" id=\"month-header\" aria-hidden=\"true\">[[_getTitle(month, i18n)]]</div>\n      <table\n        id=\"monthGrid\"\n        role=\"grid\"\n        aria-labelledby=\"month-header\"\n        on-touchend=\"_preventDefault\"\n        on-touchstart=\"_onMonthGridTouchStart\"\n      >\n        <thead id=\"weekdays-container\">\n          <tr role=\"row\" part=\"weekdays\">\n            <th part=\"weekday\" aria-hidden=\"true\" hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n)]]\"></th>\n            <template is=\"dom-repeat\" items=\"[[_getWeekDayNames(i18n, showWeekNumbers)]]\">\n              <th role=\"columnheader\" part=\"weekday\" scope=\"col\" abbr$=\"[[item.weekDay]]\" aria-hidden=\"true\">\n                [[item.weekDayShort]]\n              </th>\n            </template>\n          </tr>\n        </thead>\n        <tbody id=\"days-container\">\n          <template is=\"dom-repeat\" items=\"[[_weeks]]\" as=\"week\">\n            <tr role=\"row\">\n              <td part=\"week-number\" aria-hidden=\"true\" hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n)]]\">\n                [[__getWeekNumber(week)]]\n              </td>\n              <template is=\"dom-repeat\" items=\"[[week]]\">\n                <td\n                  role=\"gridcell\"\n                  part$=\"[[__getDatePart(item, focusedDate, selectedDate, minDate, maxDate)]]\"\n                  date=\"[[item]]\"\n                  tabindex$=\"[[__getDayTabindex(item, focusedDate)]]\"\n                  disabled$=\"[[__isDayDisabled(item, minDate, maxDate)]]\"\n                  aria-selected$=\"[[__getDayAriaSelected(item, selectedDate)]]\"\n                  aria-disabled$=\"[[__getDayAriaDisabled(item, minDate, maxDate)]]\"\n                  aria-label$=\"[[__getDayAriaLabel(item)]]\"\n                  >[[_getDate(item)]]</td\n                >\n              </template>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-month-calendar';\n  }\n\n  static get properties() {\n    return {\n      /** @protected */\n      _days: {\n        type: Array,\n        computed: '_getDays(month, i18n, minDate, maxDate)',\n      },\n\n      /** @protected */\n      _weeks: {\n        type: Array,\n        computed: '_getWeeks(_days)',\n      },\n\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: '_isDisabled(month, minDate, maxDate)',\n      },\n    };\n  }\n\n  static get observers() {\n    return ['_showWeekNumbersChanged(showWeekNumbers, i18n)'];\n  }\n\n  /** @private */\n  _showWeekNumbersChanged(showWeekNumbers, i18n) {\n    if (showWeekNumbers && i18n && i18n.firstDayOfWeek === 1) {\n      this.setAttribute('week-numbers', '');\n    } else {\n      this.removeAttribute('week-numbers');\n    }\n  }\n\n  /** @private */\n  __getDatePart(date, focusedDate, selectedDate, minDate, maxDate) {\n    const result = ['date'];\n\n    if (this.__isDayDisabled(date, minDate, maxDate)) {\n      result.push('disabled');\n    }\n\n    if (this.__isDayFocused(date, focusedDate)) {\n      result.push('focused');\n    }\n\n    if (this.__isDaySelected(date, selectedDate)) {\n      result.push('selected');\n    }\n\n    if (this._isToday(date)) {\n      result.push('today');\n    }\n\n    return result.join(' ');\n  }\n\n  /** @private */\n  __isDayFocused(date, focusedDate) {\n    return dateEquals(date, focusedDate);\n  }\n\n  /** @private */\n  __isDaySelected(date, selectedDate) {\n    return dateEquals(date, selectedDate);\n  }\n\n  /** @private */\n  __getDayAriaSelected(date, selectedDate) {\n    if (this.__isDaySelected(date, selectedDate)) {\n      return 'true';\n    }\n  }\n\n  /** @private */\n  __isDayDisabled(date, minDate, maxDate) {\n    return !dateAllowed(date, minDate, maxDate);\n  }\n\n  /** @private */\n  __getDayAriaDisabled(date, min, max) {\n    if (date === undefined || min === undefined || max === undefined) {\n      return;\n    }\n\n    if (this.__isDayDisabled(date, min, max)) {\n      return 'true';\n    }\n  }\n\n  /** @private */\n  __getDayTabindex(date, focusedDate) {\n    if (this.__isDayFocused(date, focusedDate)) {\n      return '0';\n    }\n\n    return '-1';\n  }\n}\n\ndefineCustomElement(MonthCalendar);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { addListener, setTouchAction } from '@vaadin/component-base/src/gestures.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\nimport { dateAfterXMonths, dateEquals, extractDateParts, getClosestDate } from './vaadin-date-picker-helper.js';\n\n/**\n * @polymerMixin\n */\nexport const DatePickerOverlayContentMixin = (superClass) =>\n  class DatePickerOverlayContentMixin extends superClass {\n    static get properties() {\n      return {\n        scrollDuration: {\n          type: Number,\n          value: 300,\n        },\n\n        /**\n         * The value for this element.\n         */\n        selectedDate: {\n          type: Object,\n          value: null,\n          sync: true,\n        },\n\n        /**\n         * Date value which is focused using keyboard.\n         */\n        focusedDate: {\n          type: Object,\n          notify: true,\n          observer: '_focusedDateChanged',\n          sync: true,\n        },\n\n        _focusedMonthDate: Number,\n\n        /**\n         * Date which should be visible when there is no value selected.\n         */\n        initialPosition: {\n          type: Object,\n          observer: '_initialPositionChanged',\n        },\n\n        _originDate: {\n          type: Object,\n          value: new Date(),\n        },\n\n        _visibleMonthIndex: Number,\n\n        _desktopMode: {\n          type: Boolean,\n          observer: '_desktopModeChanged',\n        },\n\n        _desktopMediaQuery: {\n          type: String,\n          value: '(min-width: 375px)',\n        },\n\n        _translateX: {\n          observer: '_translateXChanged',\n        },\n\n        _yearScrollerWidth: {\n          value: 50,\n        },\n\n        i18n: {\n          type: Object,\n        },\n\n        showWeekNumbers: {\n          type: Boolean,\n          value: false,\n        },\n\n        _ignoreTaps: Boolean,\n\n        _notTapping: Boolean,\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         */\n        minDate: {\n          type: Object,\n          sync: true,\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         */\n        maxDate: {\n          type: Object,\n          sync: true,\n        },\n\n        /**\n         * Input label\n         */\n        label: String,\n\n        _cancelButton: {\n          type: Object,\n        },\n\n        _todayButton: {\n          type: Object,\n        },\n\n        calendars: {\n          type: Array,\n          value: () => [],\n        },\n\n        years: {\n          type: Array,\n          value: () => [],\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '__updateCalendars(calendars, i18n, minDate, maxDate, selectedDate, focusedDate, showWeekNumbers, _ignoreTaps, _theme)',\n        '__updateCancelButton(_cancelButton, i18n)',\n        '__updateTodayButton(_todayButton, i18n, minDate, maxDate)',\n        '__updateYears(years, selectedDate, _theme)',\n      ];\n    }\n\n    /**\n     * Whether to scroll to a sub-month position when scrolling to a date.\n     * This is active if the month scroller is not large enough to fit a\n     * full month. In that case we want to scroll to a position between\n     * two months in order to have the focused date in the visible area.\n     * @returns {boolean} whether to use sub-month scrolling\n     * @private\n     */\n    get __useSubMonthScrolling() {\n      return this._monthScroller.clientHeight < this._monthScroller.itemHeight + this._monthScroller.bufferOffset;\n    }\n\n    get focusableDateElement() {\n      return this.calendars.map((calendar) => calendar.focusableDateElement).find(Boolean);\n    }\n\n    /** @protected */\n    _addListeners() {\n      setTouchAction(this.$.scrollers, 'pan-y');\n\n      addListener(this.$.scrollers, 'track', this._track.bind(this));\n      addListener(this.shadowRoot.querySelector('[part=\"clear-button\"]'), 'tap', this._clear.bind(this));\n      addListener(this.shadowRoot.querySelector('[part=\"toggle-button\"]'), 'tap', this._cancel.bind(this));\n      addListener(\n        this.shadowRoot.querySelector('[part=\"years-toggle-button\"]'),\n        'tap',\n        this._toggleYearScroller.bind(this),\n      );\n    }\n\n    /** @protected */\n    _initControllers() {\n      this.addController(\n        new MediaQueryController(this._desktopMediaQuery, (matches) => {\n          this._desktopMode = matches;\n        }),\n      );\n\n      this.addController(\n        new SlotController(this, 'today-button', 'vaadin-button', {\n          observe: false,\n          initializer: (btn) => {\n            btn.setAttribute('theme', 'tertiary');\n            btn.addEventListener('keydown', (e) => this.__onTodayButtonKeyDown(e));\n            addListener(btn, 'tap', this._onTodayTap.bind(this));\n            this._todayButton = btn;\n          },\n        }),\n      );\n\n      this.addController(\n        new SlotController(this, 'cancel-button', 'vaadin-button', {\n          observe: false,\n          initializer: (btn) => {\n            btn.setAttribute('theme', 'tertiary');\n            btn.addEventListener('keydown', (e) => this.__onCancelButtonKeyDown(e));\n            addListener(btn, 'tap', this._cancel.bind(this));\n            this._cancelButton = btn;\n          },\n        }),\n      );\n\n      this.__initMonthScroller();\n      this.__initYearScroller();\n    }\n\n    reset() {\n      this._closeYearScroller();\n      this._toggleAnimateClass(true);\n    }\n\n    /**\n     * Focuses the cancel button\n     */\n    focusCancel() {\n      this._cancelButton.focus();\n    }\n\n    /**\n     * Scrolls the list to the given Date.\n     */\n    scrollToDate(date, animate) {\n      const offset = this.__useSubMonthScrolling ? this._calculateWeekScrollOffset(date) : 0;\n      this._scrollToPosition(this._differenceInMonths(date, this._originDate) + offset, animate);\n      this._monthScroller.forceUpdate();\n    }\n\n    /** @private */\n    __initMonthScroller() {\n      this.addController(\n        new SlotController(this, 'months', 'vaadin-date-picker-month-scroller', {\n          observe: false,\n          initializer: (scroller) => {\n            scroller.addEventListener('custom-scroll', () => {\n              this._onMonthScroll();\n            });\n\n            scroller.addEventListener('touchstart', () => {\n              this._onMonthScrollTouchStart();\n            });\n\n            scroller.addEventListener('keydown', (e) => {\n              this.__onMonthCalendarKeyDown(e);\n            });\n\n            scroller.addEventListener('init-done', () => {\n              const calendars = [...this.querySelectorAll('vaadin-month-calendar')];\n\n              // Two-way binding for selectedDate property\n              calendars.forEach((calendar) => {\n                calendar.addEventListener('selected-date-changed', (e) => {\n                  this.selectedDate = e.detail.value;\n                });\n              });\n\n              this.calendars = calendars;\n            });\n\n            this._monthScroller = scroller;\n          },\n        }),\n      );\n    }\n\n    /** @private */\n    __initYearScroller() {\n      this.addController(\n        new SlotController(this, 'years', 'vaadin-date-picker-year-scroller', {\n          observe: false,\n          initializer: (scroller) => {\n            scroller.setAttribute('aria-hidden', 'true');\n\n            addListener(scroller, 'tap', (e) => {\n              this._onYearTap(e);\n            });\n\n            scroller.addEventListener('custom-scroll', () => {\n              this._onYearScroll();\n            });\n\n            scroller.addEventListener('touchstart', () => {\n              this._onYearScrollTouchStart();\n            });\n\n            scroller.addEventListener('init-done', () => {\n              this.years = [...this.querySelectorAll('vaadin-date-picker-year')];\n            });\n\n            this._yearScroller = scroller;\n          },\n        }),\n      );\n    }\n\n    /** @private */\n    __updateCancelButton(cancelButton, i18n) {\n      if (cancelButton) {\n        cancelButton.textContent = i18n && i18n.cancel;\n      }\n    }\n\n    /** @private */\n    __updateTodayButton(todayButton, i18n, minDate, maxDate) {\n      if (todayButton) {\n        todayButton.textContent = i18n && i18n.today;\n        todayButton.disabled = !this._isTodayAllowed(minDate, maxDate);\n      }\n    }\n\n    // eslint-disable-next-line max-params\n    __updateCalendars(\n      calendars,\n      i18n,\n      minDate,\n      maxDate,\n      selectedDate,\n      focusedDate,\n      showWeekNumbers,\n      ignoreTaps,\n      theme,\n    ) {\n      if (calendars && calendars.length) {\n        calendars.forEach((calendar) => {\n          calendar.i18n = i18n;\n          calendar.minDate = minDate;\n          calendar.maxDate = maxDate;\n          calendar.focusedDate = focusedDate;\n          calendar.selectedDate = selectedDate;\n          calendar.showWeekNumbers = showWeekNumbers;\n          calendar.ignoreTaps = ignoreTaps;\n\n          if (theme) {\n            calendar.setAttribute('theme', theme);\n          } else {\n            calendar.removeAttribute('theme');\n          }\n        });\n      }\n    }\n\n    /** @private */\n    __updateYears(years, selectedDate, theme) {\n      if (years && years.length) {\n        years.forEach((year) => {\n          year.selectedDate = selectedDate;\n\n          if (theme) {\n            year.setAttribute('theme', theme);\n          } else {\n            year.removeAttribute('theme');\n          }\n        });\n      }\n    }\n\n    /**\n     * Select a date and fire event indicating user interaction.\n     * @protected\n     */\n    _selectDate(dateToSelect) {\n      this.selectedDate = dateToSelect;\n      this.dispatchEvent(\n        new CustomEvent('date-selected', { detail: { date: dateToSelect }, bubbles: true, composed: true }),\n      );\n    }\n\n    /** @private */\n    _desktopModeChanged(desktopMode) {\n      this.toggleAttribute('desktop', desktopMode);\n    }\n\n    /** @private */\n    _focusedDateChanged(focusedDate) {\n      this.revealDate(focusedDate);\n    }\n\n    /**\n     * Scrolls the month and year scrollers enough to reveal the given date.\n     */\n    revealDate(date, animate = true) {\n      if (!date) {\n        return;\n      }\n      const diff = this._differenceInMonths(date, this._originDate);\n      // If scroll area does not fit the full month, then always scroll with an offset to\n      // approximately display the week of the date\n      if (this.__useSubMonthScrolling) {\n        const offset = this._calculateWeekScrollOffset(date);\n        this._scrollToPosition(diff + offset, animate);\n        return;\n      }\n\n      // Otherwise determine if we need to scroll to make the month of the date visible\n      const scrolledAboveViewport = this._monthScroller.position > diff;\n\n      const visibleArea = Math.max(\n        this._monthScroller.itemHeight,\n        this._monthScroller.clientHeight - this._monthScroller.bufferOffset * 2,\n      );\n      const visibleItems = visibleArea / this._monthScroller.itemHeight;\n      const scrolledBelowViewport = this._monthScroller.position + visibleItems - 1 < diff;\n\n      if (scrolledAboveViewport) {\n        this._scrollToPosition(diff, animate);\n      } else if (scrolledBelowViewport) {\n        this._scrollToPosition(diff - visibleItems + 1, animate);\n      }\n    }\n\n    /**\n     * Calculates an offset to be added to the month scroll position\n     * when using sub-month scrolling, in order ensure that the week\n     * that the date is in is visible even for small scroll areas.\n     * As the month scroller uses a month as minimal scroll unit\n     * (a value of `1` equals one month), we can not exactly identify\n     * the position of a specific week. This is a best effort\n     * implementation based on manual testing.\n     * @param date the date for which to calculate the offset\n     * @returns {number} the offset\n     * @private\n     */\n    _calculateWeekScrollOffset(date) {\n      // Get first day of month\n      const temp = new Date(0, 0);\n      temp.setFullYear(date.getFullYear());\n      temp.setMonth(date.getMonth());\n      temp.setDate(1);\n      // Determine week (=row index) of date within the month\n      let week = 0;\n      while (temp.getDate() < date.getDate()) {\n        temp.setDate(temp.getDate() + 1);\n        if (temp.getDay() === this.i18n.firstDayOfWeek) {\n          week += 1;\n        }\n      }\n      // Calculate magic number that approximately keeps the week visible\n      return week / 6;\n    }\n\n    /** @private */\n    _initialPositionChanged(initialPosition) {\n      if (this._monthScroller && this._yearScroller) {\n        this._monthScroller.active = true;\n        this._yearScroller.active = true;\n      }\n\n      this.scrollToDate(initialPosition);\n    }\n\n    /** @private */\n    _repositionYearScroller() {\n      const monthPosition = this._monthScroller.position;\n      this._visibleMonthIndex = Math.floor(monthPosition);\n      this._yearScroller.position = (monthPosition + this._originDate.getMonth()) / 12;\n    }\n\n    /** @private */\n    _repositionMonthScroller() {\n      this._monthScroller.position = this._yearScroller.position * 12 - this._originDate.getMonth();\n      this._visibleMonthIndex = Math.floor(this._monthScroller.position);\n    }\n\n    /** @private */\n    _onMonthScroll() {\n      this._repositionYearScroller();\n      this._doIgnoreTaps();\n    }\n\n    /** @private */\n    _onYearScroll() {\n      this._repositionMonthScroller();\n      this._doIgnoreTaps();\n    }\n\n    /** @private */\n    _onYearScrollTouchStart() {\n      this._notTapping = false;\n      setTimeout(() => {\n        this._notTapping = true;\n      }, 300);\n\n      this._repositionMonthScroller();\n    }\n\n    /** @private */\n    _onMonthScrollTouchStart() {\n      this._repositionYearScroller();\n    }\n\n    /** @private */\n    _doIgnoreTaps() {\n      this._ignoreTaps = true;\n      this._debouncer = Debouncer.debounce(this._debouncer, timeOut.after(300), () => {\n        this._ignoreTaps = false;\n      });\n    }\n\n    /** @protected */\n    _formatDisplayed(date, i18n, label) {\n      if (date && i18n && typeof i18n.formatDate === 'function') {\n        return i18n.formatDate(extractDateParts(date));\n      }\n      return label;\n    }\n\n    /** @private */\n    _onTodayTap() {\n      const today = new Date();\n\n      if (Math.abs(this._monthScroller.position - this._differenceInMonths(today, this._originDate)) < 0.001) {\n        // Select today only if the month scroller is positioned approximately\n        // at the beginning of the current month\n        this._selectDate(today);\n        this._close();\n      } else {\n        this._scrollToCurrentMonth();\n      }\n    }\n\n    /** @private */\n    _scrollToCurrentMonth() {\n      if (this.focusedDate) {\n        this.focusedDate = new Date();\n      }\n\n      this.scrollToDate(new Date(), true);\n    }\n\n    /** @private */\n    _onYearTap(e) {\n      if (!this._ignoreTaps && !this._notTapping) {\n        const scrollDelta =\n          e.detail.y - (this._yearScroller.getBoundingClientRect().top + this._yearScroller.clientHeight / 2);\n        const yearDelta = scrollDelta / this._yearScroller.itemHeight;\n        this._scrollToPosition(this._monthScroller.position + yearDelta * 12, true);\n      }\n    }\n\n    /** @private */\n    _scrollToPosition(targetPosition, animate) {\n      if (this._targetPosition !== undefined) {\n        this._targetPosition = targetPosition;\n        return;\n      }\n\n      if (!animate) {\n        this._monthScroller.position = targetPosition;\n        this._targetPosition = undefined;\n        this._repositionYearScroller();\n        this.__tryFocusDate();\n        return;\n      }\n\n      this._targetPosition = targetPosition;\n\n      let revealResolve;\n      this._revealPromise = new Promise((resolve) => {\n        revealResolve = resolve;\n      });\n\n      // http://gizma.com/easing/\n      const easingFunction = (t, b, c, d) => {\n        t /= d / 2;\n        if (t < 1) {\n          return (c / 2) * t * t + b;\n        }\n        t -= 1;\n        return (-c / 2) * (t * (t - 2) - 1) + b;\n      };\n\n      let start = 0;\n      const initialPosition = this._monthScroller.position;\n\n      const smoothScroll = (timestamp) => {\n        if (!start) {\n          start = timestamp;\n        }\n\n        const currentTime = timestamp - start;\n\n        if (currentTime < this.scrollDuration) {\n          const currentPos = easingFunction(\n            currentTime,\n            initialPosition,\n            this._targetPosition - initialPosition,\n            this.scrollDuration,\n          );\n          this._monthScroller.position = currentPos;\n          window.requestAnimationFrame(smoothScroll);\n        } else {\n          this.dispatchEvent(\n            new CustomEvent('scroll-animation-finished', {\n              bubbles: true,\n              composed: true,\n              detail: {\n                position: this._targetPosition,\n                oldPosition: initialPosition,\n              },\n            }),\n          );\n\n          this._monthScroller.position = this._targetPosition;\n          this._targetPosition = undefined;\n\n          revealResolve();\n          this._revealPromise = undefined;\n        }\n\n        setTimeout(this._repositionYearScroller.bind(this), 1);\n      };\n\n      // Start the animation.\n      window.requestAnimationFrame(smoothScroll);\n    }\n\n    /** @private */\n    _limit(value, range) {\n      return Math.min(range.max, Math.max(range.min, value));\n    }\n\n    /** @private */\n    _handleTrack(e) {\n      // Check if horizontal movement threshold (dx) not exceeded or\n      // scrolling fast vertically (ddy).\n      if (Math.abs(e.detail.dx) < 10 || Math.abs(e.detail.ddy) > 10) {\n        return;\n      }\n\n      // If we're flinging quickly -> start animating already.\n      if (Math.abs(e.detail.ddx) > this._yearScrollerWidth / 3) {\n        this._toggleAnimateClass(true);\n      }\n\n      const newTranslateX = this._translateX + e.detail.ddx;\n      this._translateX = this._limit(newTranslateX, {\n        min: 0,\n        max: this._yearScrollerWidth,\n      });\n    }\n\n    /** @private */\n    _track(e) {\n      if (this._desktopMode) {\n        // No need to track for swipe gestures on desktop.\n        return;\n      }\n\n      switch (e.detail.state) {\n        case 'start':\n          this._toggleAnimateClass(false);\n          break;\n        case 'track':\n          this._handleTrack(e);\n          break;\n        case 'end':\n          this._toggleAnimateClass(true);\n          if (this._translateX >= this._yearScrollerWidth / 2) {\n            this._closeYearScroller();\n          } else {\n            this._openYearScroller();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    /** @private */\n    _toggleAnimateClass(enable) {\n      if (enable) {\n        this.classList.add('animate');\n      } else {\n        this.classList.remove('animate');\n      }\n    }\n\n    /** @private */\n    _toggleYearScroller() {\n      if (this._isYearScrollerVisible()) {\n        this._closeYearScroller();\n      } else {\n        this._openYearScroller();\n      }\n    }\n\n    /** @private */\n    _openYearScroller() {\n      this._translateX = 0;\n      this.setAttribute('years-visible', '');\n    }\n\n    /** @private */\n    _closeYearScroller() {\n      this.removeAttribute('years-visible');\n      this._translateX = this._yearScrollerWidth;\n    }\n\n    /** @private */\n    _isYearScrollerVisible() {\n      return this._translateX < this._yearScrollerWidth / 2;\n    }\n\n    /** @private */\n    _translateXChanged(x) {\n      if (!this._desktopMode) {\n        this._monthScroller.style.transform = `translateX(${x - this._yearScrollerWidth}px)`;\n        this._yearScroller.style.transform = `translateX(${x}px)`;\n      }\n    }\n\n    /** @private */\n    _yearAfterXMonths(months) {\n      return dateAfterXMonths(months).getFullYear();\n    }\n\n    /** @private */\n    _differenceInMonths(date1, date2) {\n      const months = (date1.getFullYear() - date2.getFullYear()) * 12;\n      return months - date2.getMonth() + date1.getMonth();\n    }\n\n    /** @private */\n    _clear() {\n      this._selectDate('');\n    }\n\n    /** @private */\n    _close() {\n      this.dispatchEvent(new CustomEvent('close', { bubbles: true, composed: true }));\n    }\n\n    /** @private */\n    _cancel() {\n      this.focusedDate = this.selectedDate;\n      this._close();\n    }\n\n    /** @protected */\n    _preventDefault(e) {\n      e.preventDefault();\n    }\n\n    /** @private */\n    __toggleDate(date) {\n      if (dateEquals(date, this.selectedDate)) {\n        this._clear();\n        this.focusedDate = date;\n      } else {\n        this._selectDate(date);\n      }\n    }\n\n    /** @private */\n    __onMonthCalendarKeyDown(event) {\n      let handled = false;\n\n      switch (event.key) {\n        case 'ArrowDown':\n          this._moveFocusByDays(7);\n          handled = true;\n          break;\n        case 'ArrowUp':\n          this._moveFocusByDays(-7);\n          handled = true;\n          break;\n        case 'ArrowRight':\n          this._moveFocusByDays(this.__isRTL ? -1 : 1);\n          handled = true;\n          break;\n        case 'ArrowLeft':\n          this._moveFocusByDays(this.__isRTL ? 1 : -1);\n          handled = true;\n          break;\n        case 'Enter':\n          this._selectDate(this.focusedDate);\n          this._close();\n          handled = true;\n          break;\n        case ' ':\n          this.__toggleDate(this.focusedDate);\n          handled = true;\n          break;\n        case 'Home':\n          this._moveFocusInsideMonth(this.focusedDate, 'minDate');\n          handled = true;\n          break;\n        case 'End':\n          this._moveFocusInsideMonth(this.focusedDate, 'maxDate');\n          handled = true;\n          break;\n        case 'PageDown':\n          this._moveFocusByMonths(event.shiftKey ? 12 : 1);\n          handled = true;\n          break;\n        case 'PageUp':\n          this._moveFocusByMonths(event.shiftKey ? -12 : -1);\n          handled = true;\n          break;\n        case 'Tab':\n          this._onTabKeyDown(event, 'calendar');\n          break;\n        default:\n          break;\n      }\n\n      if (handled) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n\n    /** @private */\n    _onTabKeyDown(event, section) {\n      // Stop propagation to avoid focus-trap\n      // listener when used in a modal dialog.\n      event.stopPropagation();\n\n      switch (section) {\n        case 'calendar':\n          if (event.shiftKey) {\n            event.preventDefault();\n\n            if (this.hasAttribute('fullscreen')) {\n              // Trap focus in the overlay\n              this.focusCancel();\n            } else {\n              this.__focusInput();\n            }\n          }\n          break;\n        case 'today':\n          if (event.shiftKey) {\n            event.preventDefault();\n            this.focusDateElement();\n          }\n          break;\n        case 'cancel':\n          if (!event.shiftKey) {\n            event.preventDefault();\n\n            if (this.hasAttribute('fullscreen')) {\n              // Trap focus in the overlay\n              this.focusDateElement();\n            } else {\n              this.__focusInput();\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    /** @private */\n    __onTodayButtonKeyDown(event) {\n      if (event.key === 'Tab') {\n        this._onTabKeyDown(event, 'today');\n      }\n    }\n\n    /** @private */\n    __onCancelButtonKeyDown(event) {\n      if (event.key === 'Tab') {\n        this._onTabKeyDown(event, 'cancel');\n      }\n    }\n\n    /** @private */\n    __focusInput() {\n      this.dispatchEvent(new CustomEvent('focus-input', { bubbles: true, composed: true }));\n    }\n\n    /** @private */\n    __tryFocusDate() {\n      const dateToFocus = this.__pendingDateFocus;\n      if (dateToFocus) {\n        // Check the date element with tabindex=\"0\"\n        const dateElement = this.focusableDateElement;\n\n        if (dateElement && dateEquals(dateElement.date, this.__pendingDateFocus)) {\n          delete this.__pendingDateFocus;\n          dateElement.focus();\n        }\n      }\n    }\n\n    async focusDate(date, keepMonth) {\n      const dateToFocus = date || this.selectedDate || this.initialPosition || new Date();\n      this.focusedDate = dateToFocus;\n      if (!keepMonth) {\n        this._focusedMonthDate = dateToFocus.getDate();\n      }\n      await this.focusDateElement(false);\n    }\n\n    async focusDateElement(reveal = true) {\n      this.__pendingDateFocus = this.focusedDate;\n\n      // Wait for `vaadin-month-calendar` elements to be rendered\n      if (!this.calendars.length) {\n        await new Promise((resolve) => {\n          afterNextRender(this, () => {\n            // Force dom-repeat elements to render\n            flush();\n            resolve();\n          });\n        });\n      }\n\n      // Reveal focused date unless it has been just set,\n      // which triggers `revealDate()` in the observer.\n      if (reveal) {\n        this.revealDate(this.focusedDate);\n      }\n\n      if (this._revealPromise) {\n        // Wait for focused date to be scrolled into view.\n        await this._revealPromise;\n      }\n\n      this.__tryFocusDate();\n    }\n\n    /** @private */\n    _focusClosestDate(focus) {\n      this.focusDate(getClosestDate(focus, [this.minDate, this.maxDate]));\n    }\n\n    /** @private */\n    _focusAllowedDate(dateToFocus, diff, keepMonth) {\n      if (this._dateAllowed(dateToFocus)) {\n        this.focusDate(dateToFocus, keepMonth);\n      } else if (this._dateAllowed(this.focusedDate)) {\n        // Move to min or max date\n        if (diff > 0) {\n          // Down, Right or Page Down key\n          this.focusDate(this.maxDate);\n        } else {\n          // Up, Left or Page Up key\n          this.focusDate(this.minDate);\n        }\n      } else {\n        // Move to closest allowed date\n        this._focusClosestDate(this.focusedDate);\n      }\n    }\n\n    /** @private */\n    _getDateDiff(months, days) {\n      const date = new Date(0, 0);\n      date.setFullYear(this.focusedDate.getFullYear());\n      date.setMonth(this.focusedDate.getMonth() + months);\n      if (days) {\n        date.setDate(this.focusedDate.getDate() + days);\n      }\n      return date;\n    }\n\n    /** @private */\n    _moveFocusByDays(days) {\n      const dateToFocus = this._getDateDiff(0, days);\n\n      this._focusAllowedDate(dateToFocus, days, false);\n    }\n\n    /** @private */\n    _moveFocusByMonths(months) {\n      const dateToFocus = this._getDateDiff(months);\n      const targetMonth = dateToFocus.getMonth();\n\n      if (!this._focusedMonthDate) {\n        this._focusedMonthDate = this.focusedDate.getDate();\n      }\n\n      dateToFocus.setDate(this._focusedMonthDate);\n\n      if (dateToFocus.getMonth() !== targetMonth) {\n        dateToFocus.setDate(0);\n      }\n\n      this._focusAllowedDate(dateToFocus, months, true);\n    }\n\n    /** @private */\n    _moveFocusInsideMonth(focusedDate, property) {\n      const dateToFocus = new Date(0, 0);\n      dateToFocus.setFullYear(focusedDate.getFullYear());\n\n      if (property === 'minDate') {\n        dateToFocus.setMonth(focusedDate.getMonth());\n        dateToFocus.setDate(1);\n      } else {\n        dateToFocus.setMonth(focusedDate.getMonth() + 1);\n        dateToFocus.setDate(0);\n      }\n\n      if (this._dateAllowed(dateToFocus)) {\n        this.focusDate(dateToFocus);\n      } else if (this._dateAllowed(focusedDate)) {\n        // Move to minDate or maxDate\n        this.focusDate(this[property]);\n      } else {\n        // Move to closest allowed date\n        this._focusClosestDate(focusedDate);\n      }\n    }\n\n    /** @private */\n    _dateAllowed(date, min = this.minDate, max = this.maxDate) {\n      return (!min || date >= min) && (!max || date <= max);\n    }\n\n    /** @private */\n    _isTodayAllowed(min, max) {\n      const today = new Date();\n      const todayMidnight = new Date(0, 0);\n      todayMidnight.setFullYear(today.getFullYear());\n      todayMidnight.setMonth(today.getMonth());\n      todayMidnight.setDate(today.getDate());\n      return this._dateAllowed(todayMidnight, min, max);\n    }\n\n    /**\n     * Fired when the scroller reaches the target scrolling position.\n     * @event scroll-animation-finished\n     * @param {Number} detail.position new position\n     * @param {Number} detail.oldPosition old position\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const overlayContentStyles = css`\n  :host {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    outline: none;\n  }\n\n  [part='overlay-header'] {\n    display: flex;\n    flex-shrink: 0;\n    flex-wrap: nowrap;\n    align-items: center;\n  }\n\n  :host(:not([fullscreen])) [part='overlay-header'] {\n    display: none;\n  }\n\n  [part='label'] {\n    flex-grow: 1;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n\n  [part='years-toggle-button'] {\n    display: flex;\n  }\n\n  #scrollers {\n    display: flex;\n    height: 100%;\n    width: 100%;\n    position: relative;\n    overflow: hidden;\n  }\n\n  :host([desktop]) ::slotted([slot='months']) {\n    right: 50px;\n    transform: none !important;\n  }\n\n  :host([desktop]) ::slotted([slot='years']) {\n    transform: none !important;\n  }\n\n  :host(.animate) ::slotted([slot='months']),\n  :host(.animate) ::slotted([slot='years']) {\n    transition: all 200ms;\n  }\n\n  [part='toolbar'] {\n    display: flex;\n    justify-content: space-between;\n    z-index: 2;\n    flex-shrink: 0;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/button/src/vaadin-button.js';\nimport './vaadin-date-picker-month-scroller.js';\nimport './vaadin-date-picker-year-scroller.js';\nimport './vaadin-date-picker-year.js';\nimport './vaadin-month-calendar.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DatePickerOverlayContentMixin } from './vaadin-date-picker-overlay-content-mixin.js';\nimport { overlayContentStyles } from './vaadin-date-picker-overlay-content-styles.js';\n\nregisterStyles('vaadin-date-picker-overlay-content', overlayContentStyles, {\n  moduleId: 'vaadin-date-picker-overlay-content-styles',\n});\n\n/**\n * @customElement\n * @extends HTMLElement\n * @private\n */\nclass DatePickerOverlayContent extends DatePickerOverlayContentMixin(\n  ControllerMixin(ThemableMixin(DirMixin(PolymerElement))),\n) {\n  static get template() {\n    return html`\n      <div part=\"overlay-header\" on-touchend=\"_preventDefault\" aria-hidden=\"true\">\n        <div part=\"label\">[[_formatDisplayed(selectedDate, i18n, label)]]</div>\n        <div part=\"clear-button\" hidden$=\"[[!selectedDate]]\"></div>\n        <div part=\"toggle-button\"></div>\n\n        <div part=\"years-toggle-button\" hidden$=\"[[_desktopMode]]\" aria-hidden=\"true\">\n          [[_yearAfterXMonths(_visibleMonthIndex)]]\n        </div>\n      </div>\n\n      <div id=\"scrollers\">\n        <slot name=\"months\"></slot>\n        <slot name=\"years\"></slot>\n      </div>\n\n      <div on-touchend=\"_preventDefault\" role=\"toolbar\" part=\"toolbar\">\n        <slot name=\"today-button\"></slot>\n        <slot name=\"cancel-button\"></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-date-picker-overlay-content';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'dialog');\n\n    this._addListeners();\n    this._initControllers();\n  }\n}\n\ndefineCustomElement(DatePickerOverlayContent);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { hideOthers } from '@vaadin/a11y-base/src/aria-hidden.js';\nimport { DelegateFocusMixin } from '@vaadin/a11y-base/src/delegate-focus-mixin.js';\nimport { KeyboardMixin } from '@vaadin/a11y-base/src/keyboard-mixin.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\nimport { InputConstraintsMixin } from '@vaadin/field-base/src/input-constraints-mixin.js';\nimport { VirtualKeyboardController } from '@vaadin/field-base/src/virtual-keyboard-controller.js';\nimport {\n  dateAllowed,\n  dateEquals,\n  extractDateParts,\n  getAdjustedYear,\n  getClosestDate,\n  parseDate,\n} from './vaadin-date-picker-helper.js';\n\n/**\n * @polymerMixin\n * @mixes ControllerMixin\n * @mixes DelegateFocusMixin\n * @mixes InputConstraintsMixin\n * @mixes KeyboardMixin\n * @mixes OverlayClassMixin\n * @param {function(new:HTMLElement)} subclass\n */\nexport const DatePickerMixin = (subclass) =>\n  class DatePickerMixinClass extends OverlayClassMixin(\n    ControllerMixin(DelegateFocusMixin(InputConstraintsMixin(KeyboardMixin(subclass)))),\n  ) {\n    static get properties() {\n      return {\n        /**\n         * The current selected date.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _selectedDate: {\n          type: Object,\n          sync: true,\n        },\n\n        /**\n         * @type {Date | undefined}\n         * @protected\n         */\n        _focusedDate: {\n          type: Object,\n          sync: true,\n        },\n\n        /**\n         * Selected date.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string}\n         */\n        value: {\n          type: String,\n          notify: true,\n          value: '',\n          sync: true,\n        },\n\n        /**\n         * Date which should be visible when there is no value selected.\n         *\n         * The same date formats as for the `value` property are supported.\n         * @attr {string} initial-position\n         */\n        initialPosition: String,\n\n        /**\n         * Set true to open the date selector overlay.\n         */\n        opened: {\n          type: Boolean,\n          reflectToAttribute: true,\n          notify: true,\n          observer: '_openedChanged',\n          sync: true,\n        },\n\n        /**\n         * Set true to prevent the overlay from opening automatically.\n         * @attr {boolean} auto-open-disabled\n         */\n        autoOpenDisabled: Boolean,\n\n        /**\n         * Set true to display ISO-8601 week numbers in the calendar. Notice that\n         * displaying week numbers is only supported when `i18n.firstDayOfWeek`\n         * is 1 (Monday).\n         * @attr {boolean} show-week-numbers\n         */\n        showWeekNumbers: {\n          type: Boolean,\n          value: false,\n          sync: true,\n        },\n\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _fullscreen: {\n          type: Boolean,\n          value: false,\n          sync: true,\n        },\n\n        /**\n         * @type {string}\n         * @protected\n         */\n        _fullscreenMediaQuery: {\n          value: '(max-width: 420px), (max-height: 420px)',\n        },\n\n        /**\n         * The object used to localize this component.\n         * To change the default localization, replace the entire\n         * `i18n` object with a custom one.\n         *\n         * To update individual properties, extend the existing i18n object like so:\n         * ```\n         * datePicker.i18n = { ...datePicker.i18n, {\n         *   formatDate: date => { ... },\n         *   parseDate: value => { ... },\n         * }};\n         * ```\n         *\n         * The object has the following JSON structure and default values:\n         *\n         * ```\n         * {\n         *   // An array with the full names of months starting\n         *   // with January.\n         *   monthNames: [\n         *     'January', 'February', 'March', 'April', 'May',\n         *     'June', 'July', 'August', 'September',\n         *     'October', 'November', 'December'\n         *   ],\n         *\n         *   // An array of weekday names starting with Sunday. Used\n         *   // in screen reader announcements.\n         *   weekdays: [\n         *     'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n         *     'Thursday', 'Friday', 'Saturday'\n         *   ],\n         *\n         *   // An array of short weekday names starting with Sunday.\n         *   // Displayed in the calendar.\n         *   weekdaysShort: [\n         *     'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n         *   ],\n         *\n         *   // An integer indicating the first day of the week\n         *   // (0 = Sunday, 1 = Monday, etc.).\n         *   firstDayOfWeek: 0,\n         *\n         *   // Translation of the Today shortcut button text.\n         *   today: 'Today',\n         *\n         *   // Translation of the Cancel button text.\n         *   cancel: 'Cancel',\n         *\n         *   // Used for adjusting the year value when parsing dates with short years.\n         *   // The year values between 0 and 99 are evaluated and adjusted.\n         *   // Example: for a referenceDate of 1970-10-30;\n         *   //   dateToBeParsed: 40-10-30, result: 1940-10-30\n         *   //   dateToBeParsed: 80-10-30, result: 1980-10-30\n         *   //   dateToBeParsed: 10-10-30, result: 2010-10-30\n         *   // Supported date format: ISO 8601 `\"YYYY-MM-DD\"` (default)\n         *   // The default value is the current date.\n         *   referenceDate: '',\n         *\n         *   // A function to format given `Object` as\n         *   // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   formatDate: d => {\n         *     // returns a string representation of the given\n         *     // object in 'MM/DD/YYYY' -format\n         *   },\n         *\n         *   // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   // Must properly parse (at least) text formatted by `formatDate`.\n         *   // Setting the property to null will disable keyboard input feature.\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   parseDate: text => {\n         *     // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n         *     // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   }\n         *\n         *   // A function to format given `monthName` and\n         *   // `fullYear` integer as calendar title string.\n         *   formatTitle: (monthName, fullYear) => {\n         *     return monthName + ' ' + fullYear;\n         *   }\n         * }\n         * ```\n         *\n         * @type {!DatePickerI18n}\n         * @default {English/US}\n         */\n        i18n: {\n          type: Object,\n          sync: true,\n          value: () => {\n            return {\n              monthNames: [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December',\n              ],\n              weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n              weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n              firstDayOfWeek: 0,\n              today: 'Today',\n              cancel: 'Cancel',\n              referenceDate: '',\n              formatDate(d) {\n                const yearStr = String(d.year).replace(/\\d+/u, (y) => '0000'.substr(y.length) + y);\n                return [d.month + 1, d.day, yearStr].join('/');\n              },\n              parseDate(text) {\n                const parts = text.split('/');\n                const today = new Date();\n                let date,\n                  month = today.getMonth(),\n                  year = today.getFullYear();\n\n                if (parts.length === 3) {\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                  year = parseInt(parts[2]);\n                  if (parts[2].length < 3 && year >= 0) {\n                    const usedReferenceDate = this.referenceDate ? parseDate(this.referenceDate) : new Date();\n                    year = getAdjustedYear(usedReferenceDate, year, month, date);\n                  }\n                } else if (parts.length === 2) {\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                } else if (parts.length === 1) {\n                  date = parseInt(parts[0]);\n                }\n\n                if (date !== undefined) {\n                  return { day: date, month, year };\n                }\n              },\n              formatTitle: (monthName, fullYear) => {\n                return `${monthName} ${fullYear}`;\n              },\n            };\n          },\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        min: {\n          type: String,\n          sync: true,\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        max: {\n          type: String,\n          sync: true,\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _minDate: {\n          type: Date,\n          computed: '__computeMinOrMaxDate(min)',\n          sync: true,\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _maxDate: {\n          type: Date,\n          computed: '__computeMinOrMaxDate(max)',\n          sync: true,\n        },\n\n        /** @private */\n        _noInput: {\n          type: Boolean,\n          computed: '_isNoInput(inputElement, _fullscreen, _ios, i18n, opened, autoOpenDisabled)',\n        },\n\n        /** @private */\n        _ios: {\n          type: Boolean,\n          value: isIOS,\n        },\n\n        /** @private */\n        _focusOverlayOnOpen: Boolean,\n\n        /** @private */\n        _overlayContent: {\n          type: Object,\n          sync: true,\n        },\n\n        /**\n         * In date-picker, unlike other components extending `InputMixin`,\n         * the property indicates true only if the input has been entered by the user.\n         * In the case of programmatic changes, the property is reset to false.\n         * Read more about why this workaround is needed:\n         * https://github.com/vaadin/web-components/issues/5639\n         *\n         * @protected\n         * @override\n         */\n        _hasInputValue: {\n          type: Boolean,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '_selectedDateChanged(_selectedDate, i18n)',\n        '_focusedDateChanged(_focusedDate, i18n)',\n        '__updateOverlayContent(_overlayContent, i18n, label, _minDate, _maxDate, _focusedDate, _selectedDate, showWeekNumbers)',\n        '__updateOverlayContentTheme(_overlayContent, _theme)',\n        '__updateOverlayContentFullScreen(_overlayContent, _fullscreen)',\n      ];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'min', 'max'];\n    }\n\n    constructor() {\n      super();\n\n      this._boundOnClick = this._onClick.bind(this);\n      this._boundOnScroll = this._onScroll.bind(this);\n      this._boundOverlayRenderer = this._overlayRenderer.bind(this);\n    }\n\n    /**\n     * @override\n     * @protected\n     */\n    get _inputElementValue() {\n      return super._inputElementValue;\n    }\n\n    /**\n     * The setter is overridden to reset the `_hasInputValue` property\n     * to false when the input element's value is updated programmatically.\n     * In date-picker, `_hasInputValue` is supposed to indicate true only\n     * if the input has been entered by the user.\n     * Read more about why this workaround is needed:\n     * https://github.com/vaadin/web-components/issues/5639\n     *\n     * @override\n     * @protected\n     */\n    set _inputElementValue(value) {\n      super._inputElementValue = value;\n      this._hasInputValue = false;\n    }\n\n    /**\n     * Override a getter from `InputControlMixin` to make it optional\n     * and to prevent warning when a clear button is missing,\n     * for example when using <vaadin-date-picker-light>.\n     * @protected\n     * @return {Element | null | undefined}\n     */\n    get clearElement() {\n      return null;\n    }\n\n    /** @private */\n    get _nativeInput() {\n      if (this.inputElement) {\n        // TODO: support focusElement for backwards compatibility\n        return this.inputElement.focusElement || this.inputElement;\n      }\n      return null;\n    }\n\n    /**\n     * The input element's value when it cannot be parsed as a date, and an empty string otherwise.\n     *\n     * @return {string}\n     * @private\n     */\n    get __unparsableValue() {\n      if (!this._inputElementValue || this.__parseDate(this._inputElementValue)) {\n        return '';\n      }\n\n      return this._inputElementValue;\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`\n     * @protected\n     */\n    _onFocus(event) {\n      super._onFocus(event);\n\n      if (this._noInput) {\n        event.target.blur();\n      }\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`\n     * @protected\n     */\n    _onBlur(event) {\n      super._onBlur(event);\n\n      if (!this.opened) {\n        this.__commitParsedOrFocusedDate();\n\n        // Do not validate when focusout is caused by document\n        // losing focus, which happens on browser tab switch.\n        if (document.hasFocus()) {\n          this.validate();\n        }\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addEventListener('click', this._boundOnClick);\n\n      this.addController(\n        new MediaQueryController(this._fullscreenMediaQuery, (matches) => {\n          this._fullscreen = matches;\n        }),\n      );\n\n      this.addController(new VirtualKeyboardController(this));\n\n      const overlay = this.$.overlay;\n      this._overlayElement = overlay;\n\n      overlay.renderer = this._boundOverlayRenderer;\n\n      this.addEventListener('mousedown', () => this.__bringToFront());\n      this.addEventListener('touchstart', () => this.__bringToFront());\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      this.opened = false;\n    }\n\n    /**\n     * Opens the dropdown.\n     */\n    open() {\n      if (!this.disabled && !this.readonly) {\n        this.opened = true;\n      }\n    }\n\n    /**\n     * Closes the dropdown.\n     */\n    close() {\n      this.$.overlay.close();\n    }\n\n    /** @private */\n    _overlayRenderer(root) {\n      if (root.firstChild) {\n        return;\n      }\n\n      // Create and store document content element\n      const content = document.createElement('vaadin-date-picker-overlay-content');\n      root.appendChild(content);\n\n      this._overlayContent = content;\n\n      content.addEventListener('close', () => {\n        this._close();\n      });\n\n      content.addEventListener('focus-input', this._focusAndSelect.bind(this));\n\n      // User confirmed selected date by clicking the calendar.\n      content.addEventListener('date-tap', (e) => {\n        this.__commitDate(e.detail.date);\n\n        this._close();\n      });\n\n      // User confirmed selected date by pressing Enter, Space, or Today.\n      content.addEventListener('date-selected', (e) => {\n        this.__commitDate(e.detail.date);\n      });\n\n      // Set focus-ring attribute when moving focus to the overlay\n      // by pressing Tab or arrow key, after opening it on click.\n      content.addEventListener('focusin', () => {\n        if (this._keyboardActive) {\n          this._setFocused(true);\n        }\n      });\n\n      // Two-way data binding for `focusedDate` property\n      content.addEventListener('focused-date-changed', (e) => {\n        this._focusedDate = e.detail.value;\n      });\n\n      content.addEventListener('click', (e) => e.stopPropagation());\n    }\n\n    /**\n     * @param {string} dateString\n     * @private\n     */\n    __parseDate(dateString) {\n      if (!this.i18n.parseDate) {\n        return;\n      }\n\n      let dateObject = this.i18n.parseDate(dateString);\n      if (dateObject) {\n        dateObject = parseDate(`${dateObject.year}-${dateObject.month + 1}-${dateObject.day}`);\n      }\n      if (dateObject && !isNaN(dateObject.getTime())) {\n        return dateObject;\n      }\n    }\n\n    /**\n     * @param {Date} dateObject\n     * @private\n     */\n    __formatDate(dateObject) {\n      if (this.i18n.formatDate) {\n        return this.i18n.formatDate(extractDateParts(dateObject));\n      }\n    }\n\n    /**\n     * Returns true if the current input value satisfies all constraints (if any)\n     *\n     * Override the `checkValidity` method for custom validations.\n     *\n     * @return {boolean} True if the value is valid\n     */\n    checkValidity() {\n      const inputValue = this._inputElementValue;\n      const inputValid = !inputValue || (!!this._selectedDate && inputValue === this.__formatDate(this._selectedDate));\n      const minMaxValid = !this._selectedDate || dateAllowed(this._selectedDate, this._minDate, this._maxDate);\n\n      let inputValidity = true;\n      if (this.inputElement) {\n        if (this.inputElement.checkValidity) {\n          inputValidity = this.inputElement.checkValidity();\n        } else if (this.inputElement.validate) {\n          // Iron-form-elements have the validate API\n          inputValidity = this.inputElement.validate();\n        }\n      }\n\n      return inputValid && minMaxValid && inputValidity;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to not call `_setFocused(true)` when focus\n     * is restored after closing overlay on click,\n     * and to avoid removing `focus-ring` attribute.\n     *\n     * @param {!FocusEvent} _event\n     * @return {boolean}\n     * @protected\n     * @override\n     */\n    _shouldSetFocus(_event) {\n      return !this._shouldKeepFocusRing;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to prevent removing the `focused` attribute:\n     * - when moving focus to the overlay content,\n     * - when closing on date click / outside click.\n     *\n     * @param {!FocusEvent} _event\n     * @return {boolean}\n     * @protected\n     * @override\n     */\n    _shouldRemoveFocus(_event) {\n      return !this.opened;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to store the `focus-ring` state to restore\n     * it later when closing on outside click.\n     *\n     * @param {boolean} focused\n     * @protected\n     * @override\n     */\n    _setFocused(focused) {\n      super._setFocused(focused);\n\n      this._shouldKeepFocusRing = focused && this._keyboardActive;\n    }\n\n    /**\n     * Depending on the nature of the value change that has occurred since\n     * the last commit attempt, triggers validation and fires an event:\n     *\n     * Value change             | Event\n     * :------------------------|:------------------\n     * empty => parsable        | change\n     * empty => unparsable      | unparsable-change\n     * parsable => empty        | change\n     * parsable => parsable     | change\n     * parsable => unparsable   | change\n     * unparsable => empty      | unparsable-change\n     * unparsable => parsable   | change\n     * unparsable => unparsable | unparsable-change\n     *\n     * @private\n     */\n    __commitValueChange() {\n      const unparsableValue = this.__unparsableValue;\n\n      if (this.__committedValue !== this.value) {\n        this.validate();\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n      } else if (this.__committedUnparsableValue !== unparsableValue) {\n        this.validate();\n        this.dispatchEvent(new CustomEvent('unparsable-change'));\n      }\n\n      this.__committedValue = this.value;\n      this.__committedUnparsableValue = unparsableValue;\n    }\n\n    /**\n     * Sets the given date as the value and commits it.\n     *\n     * @param {Date} date\n     * @private\n     */\n    __commitDate(date) {\n      // Prevent the value observer from treating the following value change\n      // as initiated programmatically by the developer, and therefore\n      // from automatically committing it without a change event.\n      this.__keepCommittedValue = true;\n      this._selectedDate = date;\n      this.__keepCommittedValue = false;\n      this.__commitValueChange();\n    }\n\n    /** @private */\n    _close() {\n      this._focus();\n      this.close();\n    }\n\n    /** @private */\n    __bringToFront() {\n      requestAnimationFrame(() => {\n        this.$.overlay.bringToFront();\n      });\n    }\n\n    /** @private */\n    // eslint-disable-next-line max-params\n    _isNoInput(inputElement, fullscreen, ios, i18n, opened, autoOpenDisabled) {\n      // On fullscreen mode, text input is disabled if auto-open isn't disabled or\n      // whenever the dropdown is opened\n      const noInputOnFullscreenMode = fullscreen && (!autoOpenDisabled || opened);\n      // On iOS, text input is disabled whenever the dropdown is opened, because\n      // the virtual keyboard doesn't affect the viewport metrics and thus the\n      // dropdown could get covered by the keyboard.\n      const noInputOnIos = ios && opened;\n\n      return !inputElement || noInputOnFullscreenMode || noInputOnIos || !i18n.parseDate;\n    }\n\n    /** @private */\n    _formatISO(date) {\n      if (!(date instanceof Date)) {\n        return '';\n      }\n\n      const pad = (num, fmt = '00') => (fmt + num).substr((fmt + num).length - fmt.length);\n\n      let yearSign = '';\n      let yearFmt = '0000';\n      let yearAbs = date.getFullYear();\n      if (yearAbs < 0) {\n        yearAbs = -yearAbs;\n        yearSign = '-';\n        yearFmt = '000000';\n      } else if (date.getFullYear() >= 10000) {\n        yearSign = '+';\n        yearFmt = '000000';\n      }\n\n      const year = yearSign + pad(yearAbs, yearFmt);\n      const month = pad(date.getMonth() + 1);\n      const day = pad(date.getDate());\n      return [year, month, day].join('-');\n    }\n\n    /** @protected */\n    _inputElementChanged(input) {\n      super._inputElementChanged(input);\n      if (input) {\n        input.autocomplete = 'off';\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-haspopup', 'dialog');\n        input.setAttribute('aria-expanded', !!this.opened);\n        this._applyInputValue(this._selectedDate);\n      }\n    }\n\n    /** @protected */\n    _openedChanged(opened) {\n      if (this.inputElement) {\n        this.inputElement.setAttribute('aria-expanded', opened);\n      }\n    }\n\n    /** @private */\n    _selectedDateChanged(selectedDate, i18n) {\n      if (selectedDate === undefined || i18n === undefined) {\n        return;\n      }\n\n      if (!this.__keepInputValue) {\n        this._applyInputValue(selectedDate);\n      }\n\n      this.value = this._formatISO(selectedDate);\n      this._ignoreFocusedDateChange = true;\n      this._focusedDate = selectedDate;\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @private */\n    _focusedDateChanged(focusedDate, i18n) {\n      if (focusedDate === undefined || i18n === undefined) {\n        return;\n      }\n      if (!this._ignoreFocusedDateChange && !this._noInput) {\n        this._applyInputValue(focusedDate);\n      }\n    }\n\n    /**\n     * Override the value observer from `InputMixin` to implement custom\n     * handling of the `value` property. The date-picker doesn't forward\n     * the value directly to the input like the default implementation of `InputMixin`.\n     * Instead, it parses the value into a date, puts it in `_selectedDate` which\n     * is then displayed in the input with respect to the specified date format.\n     *\n     * @param {string | undefined} value\n     * @param {string | undefined} oldValue\n     * @protected\n     * @override\n     */\n    _valueChanged(value, oldValue) {\n      const newDate = parseDate(value);\n\n      if (value && !newDate) {\n        // The new value cannot be parsed, revert the old value.\n        this.value = oldValue;\n        return;\n      }\n\n      if (value) {\n        if (!dateEquals(this._selectedDate, newDate)) {\n          // Update the date instance only if the date has actually changed.\n          this._selectedDate = newDate;\n\n          if (oldValue !== undefined) {\n            // Validate only if `value` changes after initialization.\n            this.validate();\n          }\n        }\n      } else {\n        this._selectedDate = null;\n      }\n\n      if (!this.__keepCommittedValue) {\n        this.__committedValue = this.value;\n        this.__committedUnparsableValue = '';\n      }\n\n      this._toggleHasValue(this._hasValue);\n    }\n\n    /** @private */\n    // eslint-disable-next-line max-params\n    __updateOverlayContent(overlayContent, i18n, label, minDate, maxDate, focusedDate, selectedDate, showWeekNumbers) {\n      if (overlayContent) {\n        overlayContent.i18n = i18n;\n        overlayContent.label = label;\n        overlayContent.minDate = minDate;\n        overlayContent.maxDate = maxDate;\n        overlayContent.focusedDate = focusedDate;\n        overlayContent.selectedDate = selectedDate;\n        overlayContent.showWeekNumbers = showWeekNumbers;\n      }\n    }\n\n    /** @private */\n    __updateOverlayContentTheme(overlayContent, theme) {\n      if (overlayContent) {\n        if (theme) {\n          overlayContent.setAttribute('theme', theme);\n        } else {\n          overlayContent.removeAttribute('theme');\n        }\n      }\n    }\n\n    /** @private */\n    __updateOverlayContentFullScreen(overlayContent, fullscreen) {\n      if (overlayContent) {\n        overlayContent.toggleAttribute('fullscreen', fullscreen);\n      }\n    }\n\n    /** @protected */\n    _onOverlayEscapePress() {\n      this._focusedDate = this._selectedDate;\n      this._close();\n    }\n\n    /** @protected */\n    _onOverlayOpened() {\n      const content = this._overlayContent;\n      content.reset();\n\n      // Detect which date to show\n      const initialPosition = this._getInitialPosition();\n      content.initialPosition = initialPosition;\n\n      // Scroll the date into view\n      const scrollFocusDate = content.focusedDate || initialPosition;\n      content.scrollToDate(scrollFocusDate);\n\n      // Ensure the date is focused\n      this._ignoreFocusedDateChange = true;\n      content.focusedDate = scrollFocusDate;\n      this._ignoreFocusedDateChange = false;\n\n      window.addEventListener('scroll', this._boundOnScroll, true);\n\n      if (this._focusOverlayOnOpen) {\n        content.focusDateElement();\n        this._focusOverlayOnOpen = false;\n      } else {\n        this._focus();\n      }\n\n      const input = this._nativeInput;\n      if (this._noInput && input) {\n        input.blur();\n        this._overlayContent.focusDateElement();\n      }\n\n      const focusables = this._noInput ? content : [input, content];\n      this.__showOthers = hideOthers(focusables);\n    }\n\n    /** @private */\n    _getInitialPosition() {\n      const parsedInitialPosition = parseDate(this.initialPosition);\n\n      const initialPosition =\n        this._selectedDate || this._overlayContent.initialPosition || parsedInitialPosition || new Date();\n\n      return parsedInitialPosition || dateAllowed(initialPosition, this._minDate, this._maxDate)\n        ? initialPosition\n        : getClosestDate(initialPosition, [this._minDate, this._maxDate]);\n    }\n\n    /**\n     * Tries to parse the input element's value as a date. If the input value\n     * is parsable, commits the resulting date as the value. Otherwise, commits\n     * an empty string as the value. If no i18n parser is provided, commits\n     * the focused date as the value.\n     *\n     * @private\n     */\n    __commitParsedOrFocusedDate() {\n      // Select the parsed input or focused date\n      this._ignoreFocusedDateChange = true;\n      if (this.i18n.parseDate) {\n        const inputValue = this._inputElementValue || '';\n        const parsedDate = this.__parseDate(inputValue);\n\n        if (parsedDate) {\n          this.__commitDate(parsedDate);\n        } else {\n          this.__keepInputValue = true;\n          this.__commitDate(null);\n          this.__keepInputValue = false;\n        }\n      } else if (this._focusedDate) {\n        this.__commitDate(this._focusedDate);\n      }\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @protected */\n    _onOverlayClosed() {\n      // Reset `aria-hidden` state.\n      if (this.__showOthers) {\n        this.__showOthers();\n        this.__showOthers = null;\n      }\n      window.removeEventListener('scroll', this._boundOnScroll, true);\n\n      this.__commitParsedOrFocusedDate();\n\n      if (this._nativeInput && this._nativeInput.selectionStart) {\n        this._nativeInput.selectionStart = this._nativeInput.selectionEnd;\n      }\n      // No need to revalidate the value after `_selectedDateChanged`\n      // Needed in case the value was not changed: open and close dropdown,\n      // especially on outside click. On Esc key press, do not validate.\n      if (!this.value && !this._keyboardActive) {\n        this.validate();\n      }\n    }\n\n    /** @private */\n    _onScroll(e) {\n      if (e.target === window || !this._overlayContent.contains(e.target)) {\n        this._overlayContent._repositionYearScroller();\n      }\n    }\n\n    /** @protected */\n    _focus() {\n      if (!this._noInput) {\n        this.inputElement.focus();\n      }\n    }\n\n    /** @private */\n    _focusAndSelect() {\n      this._focus();\n      this._setSelectionRange(0, this._inputElementValue.length);\n    }\n\n    /** @private */\n    _applyInputValue(date) {\n      this._inputElementValue = date ? this.__formatDate(date) : '';\n    }\n\n    /** @private */\n    _setSelectionRange(a, b) {\n      if (this._nativeInput && this._nativeInput.setSelectionRange) {\n        this._nativeInput.setSelectionRange(a, b);\n      }\n    }\n\n    /**\n     * Override an event listener from `InputConstraintsMixin`\n     * to have date-picker fully control when to fire a change event\n     * and trigger validation.\n     *\n     * @protected\n     */\n    _onChange(event) {\n      event.stopPropagation();\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onClick(event) {\n      // Clear button click is handled in separate listener\n      // but bubbles to the host, so we need to ignore it.\n      if (!this._isClearButton(event)) {\n        this._onHostClick(event);\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onHostClick(event) {\n      if (!this.autoOpenDisabled || this._noInput) {\n        event.preventDefault();\n        this.open();\n      }\n    }\n\n    /**\n     * Override an event listener from `InputControlMixin`\n     * to validate and dispatch change on clear.\n     * @protected\n     */\n    _onClearButtonClick(event) {\n      event.preventDefault();\n      this.__commitDate(null);\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * @param {KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onKeyDown(e) {\n      super._onKeyDown(e);\n\n      if (this._noInput) {\n        // The input element cannot be readonly as it would conflict with\n        // the required attribute. Both are not allowed on an input element.\n        // Therefore we prevent default on most keydown events.\n        const allowedKeys = [\n          9, // Tab\n        ];\n        if (allowedKeys.indexOf(e.keyCode) === -1) {\n          e.preventDefault();\n        }\n      }\n\n      switch (e.key) {\n        case 'ArrowDown':\n        case 'ArrowUp':\n          // Prevent scrolling the page with arrows\n          e.preventDefault();\n          if (this.opened) {\n            // The overlay can be opened with ctrl + option + shift in VoiceOver\n            // and without this logic, it won't be possible to focus the dialog opened this way.\n            this._overlayContent.focusDateElement();\n          } else {\n            this._focusOverlayOnOpen = true;\n            this.open();\n          }\n          break;\n        case 'Tab':\n          if (this.opened) {\n            e.preventDefault();\n            e.stopPropagation();\n            // Clear the selection range (remains visible on IE)\n            this._setSelectionRange(0, 0);\n            if (e.shiftKey) {\n              this._overlayContent.focusCancel();\n            } else {\n              this._overlayContent.focusDateElement();\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {!KeyboardEvent} _event\n     * @protected\n     * @override\n     */\n    _onEnter(_event) {\n      if (this.opened) {\n        // Closing will implicitly select parsed or focused date\n        this.close();\n      } else {\n        this.__commitParsedOrFocusedDate();\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * Do not call `super` in order to override clear\n     * button logic defined in `InputControlMixin`.\n     *\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onEscape(event) {\n      // Closing overlay is handled in vaadin-overlay-escape-press event listener.\n      if (this.opened) {\n        return;\n      }\n\n      if (this.clearButtonVisible && !!this.value) {\n        // Stop event from propagating to the host element\n        // to avoid closing dialog when clearing on Esc\n        event.stopPropagation();\n        this._onClearButtonClick(event);\n        return;\n      }\n\n      if (this.inputElement.value === '') {\n        // Do not restore selected date if Esc was pressed after clearing input field\n        this.__commitDate(null);\n      } else {\n        this._applyInputValue(this._selectedDate);\n      }\n    }\n\n    /** @protected */\n    _isClearButton(event) {\n      return event.composedPath()[0] === this.clearElement;\n    }\n\n    /**\n     * Override an event listener from `InputMixin`\n     * @protected\n     */\n    _onInput() {\n      if (!this.opened && this._inputElementValue && !this.autoOpenDisabled) {\n        this.open();\n      }\n\n      if (this._inputElementValue) {\n        const parsedDate = this.__parseDate(this._inputElementValue);\n        if (parsedDate) {\n          this._ignoreFocusedDateChange = true;\n          if (!dateEquals(parsedDate, this._focusedDate)) {\n            this._focusedDate = parsedDate;\n          }\n          this._ignoreFocusedDateChange = false;\n        }\n      }\n    }\n\n    /** @private */\n    __computeMinOrMaxDate(dateString) {\n      return parseDate(dateString);\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when `value` property value changes.\n     *\n     * @event value-changed\n     */\n\n    /**\n     * Fired when `opened` property value changes.\n     *\n     * @event opened-changed\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const datePickerStyles = css`\n  :host([opened]) {\n    pointer-events: auto;\n  }\n\n  :host([dir='rtl']) [part='input-field'] {\n    direction: ltr;\n  }\n\n  :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n    direction: rtl;\n    text-align: left;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport './vaadin-date-picker-overlay.js';\nimport './vaadin-date-picker-overlay-content.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { InputControlMixin } from '@vaadin/field-base/src/input-control-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DatePickerMixin } from './vaadin-date-picker-mixin.js';\nimport { datePickerStyles } from './vaadin-date-picker-styles.js';\n\nregisterStyles('vaadin-date-picker', [inputFieldShared, datePickerStyles], { moduleId: 'vaadin-date-picker-styles' });\n\n/**\n * `<vaadin-date-picker>` is an input field that allows to enter a date by typing or by selecting from a calendar overlay.\n *\n * ```html\n * <vaadin-date-picker label=\"Birthday\"></vaadin-date-picker>\n * ```\n *\n * ```js\n * datePicker.value = '2016-03-02';\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property                | Description                | Default\n * -------------------------------|----------------------------|---------\n * `--vaadin-field-default-width` | Default width of the field | `12em`\n *\n * `<vaadin-date-picker>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `toggle-button`       | Toggle button\n *\n * In addition to `<vaadin-text-field>` state attributes, the following state attributes are available for theming:\n *\n * Attribute  | Description                                      | Part name\n * -----------|--------------------------------------------------|-----------\n * `opened`   | Set when the date selector overlay is opened     | :host\n *\n * If you want to replace the default `<input>` and its container with a custom implementation to get full control\n * over the input field, consider using the [`<vaadin-date-picker-light>`](#/elements/vaadin-date-picker-light) element.\n *\n * ### Internal components\n *\n * In addition to `<vaadin-date-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-date-picker-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\n * - `<vaadin-date-picker-overlay-content>`\n * - `<vaadin-date-picker-month-scroller>`\n * - `<vaadin-date-picker-year-scroller>`\n * - `<vaadin-date-picker-year>`\n * - `<vaadin-month-calendar>`\n * - [`<vaadin-input-container>`](#/elements/vaadin-input-container) - an internal element wrapping the input.\n *\n * In order to style the overlay content, use `<vaadin-date-picker-overlay-content>` shadow DOM parts:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `overlay-header`      | Fullscreen mode header\n * `label`               | Fullscreen mode value/label\n * `clear-button`        | Fullscreen mode clear button\n * `toggle-button`       | Fullscreen mode toggle button\n * `years-toggle-button` | Fullscreen mode years scroller toggle\n * `toolbar`             | Footer bar with slotted buttons\n *\n * The following state attributes are available on the `<vaadin-date-picker-overlay-content>` element:\n *\n * Attribute       | Description\n * ----------------|-------------------------------------------------\n * `desktop`       | Set when the overlay content is in desktop mode\n * `fullscreen`    | Set when the overlay content is in fullscreen mode\n * `years-visible` | Set when the year scroller is visible in fullscreen mode\n *\n * In order to style the month calendar, use `<vaadin-month-calendar>` shadow DOM parts:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `month-header`        | Month title\n * `weekdays`            | Weekday container\n * `weekday`             | Weekday element\n * `week-numbers`        | Week numbers container\n * `week-number`         | Week number element\n * `date`                | Date element\n * `disabled`            | Disabled date element\n * `focused`             | Focused date element\n * `selected`            | Selected date element\n * `today`               | Date element corresponding to the current day\n *\n * In order to style year scroller elements, use `<vaadin-date-picker-year>` shadow DOM parts:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `year-number`         | Year number\n * `year-separator`      | Year separator\n *\n * Note: the `theme` attribute value set on `<vaadin-date-picker>` is\n * propagated to the internal components listed above.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * ### Change events\n *\n * Depending on the nature of the value change that the user attempts to commit e.g. by pressing Enter,\n * the component can fire either a `change` event or an `unparsable-change` event:\n *\n * Value change             | Event\n * :------------------------|:------------------\n * empty => parsable        | change\n * empty => unparsable      | unparsable-change\n * parsable => empty        | change\n * parsable => parsable     | change\n * parsable => unparsable   | change\n * unparsable => empty      | unparsable-change\n * unparsable => parsable   | change\n * unparsable => unparsable | unparsable-change\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {Event} unparsable-change Fired when the user commits an unparsable value change and there is no change event.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes InputControlMixin\n * @mixes DatePickerMixin\n */\nclass DatePicker extends DatePickerMixin(InputControlMixin(ThemableMixin(ElementMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-date-picker';\n  }\n\n  static get template() {\n    return html`\n      <div class=\"vaadin-date-picker-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[_theme]]\"\n        >\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"input\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n          <div part=\"toggle-button\" slot=\"suffix\" aria-hidden=\"true\" on-click=\"_toggle\"></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <vaadin-date-picker-overlay\n        id=\"overlay\"\n        fullscreen$=\"[[_fullscreen]]\"\n        theme$=\"[[_theme]]\"\n        opened=\"{{opened}}\"\n        on-vaadin-overlay-escape-press=\"_onOverlayEscapePress\"\n        on-vaadin-overlay-open=\"_onOverlayOpened\"\n        on-vaadin-overlay-closing=\"_onOverlayClosed\"\n        restore-focus-on-close\n        restore-focus-node=\"[[inputElement]]\"\n      ></vaadin-date-picker-overlay>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      }),\n    );\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n    this._tooltipController.setPosition('top');\n    this._tooltipController.setAriaTarget(this.inputElement);\n    this._tooltipController.setShouldShow((target) => !target.opened);\n\n    const toggleButton = this.shadowRoot.querySelector('[part=\"toggle-button\"]');\n    toggleButton.addEventListener('mousedown', (e) => e.preventDefault());\n\n    this.$.overlay.addEventListener('vaadin-overlay-close', this._onVaadinOverlayClose.bind(this));\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(e) {\n    if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().includes(this)) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _toggle(e) {\n    e.stopPropagation();\n    if (this.$.overlay.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  // Workaround https://github.com/vaadin/web-components/issues/2855\n  /** @protected */\n  _openedChanged(opened) {\n    super._openedChanged(opened);\n\n    this.$.overlay.positionTarget = this.shadowRoot.querySelector('[part=\"input-field\"]');\n    this.$.overlay.noVerticalOverlap = true;\n  }\n}\n\ndefineCustomElement(DatePicker);\n\nexport { DatePicker };\n"],
  "mappings": "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",
  "names": ["template", "Debouncer", "timeOut", "stylesTemplate", "template", "matches", "Debouncer", "timeOut", "matches", "inputFieldShared"]
}
