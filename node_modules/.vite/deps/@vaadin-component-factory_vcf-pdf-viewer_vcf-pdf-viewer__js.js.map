{
  "version": 3,
  "sources": ["../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/node_stream.js", "../../@vaadin/polymer-legacy-adapter/src/template-renderer-templatizer.js", "../../@vaadin/polymer-legacy-adapter/src/template-renderer-grid-templatizer.js", "../../@vaadin/polymer-legacy-adapter/src/template-renderer.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/pdf.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/ui_utils.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/pdf_rendering_queue.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/l10n_utils.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/pdf_viewer.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/pdf_link_service.js", "../../@vaadin-component-factory/vcf-pdf-viewer/pdfjs/dist/pdf_thumbnail_viewer.js", "../../@vaadin-component-factory/vcf-pdf-viewer/src/vcf-pdf-viewer.js", "../../@vaadin-component-factory/vcf-pdf-viewer/theme/lumo/vcf-pdf-viewer-styles.js"],
  "sourcesContent": ["import { c as assert, M as MissingPDFException, l as createPromiseCapability, A as AbortException } from './util.js';\r\nimport { v as validateRangeRequestCapabilities, e as extractFilenameFromHeader } from './network_utils.js';\r\nimport './display_utils.js';\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\r\n  throw new Error('Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.');\r\n}\r\n\r\nconst fs = __non_webpack_require__(\"fs\");\r\n\r\nconst http = __non_webpack_require__(\"http\");\r\n\r\nconst https = __non_webpack_require__(\"https\");\r\n\r\nconst url = __non_webpack_require__(\"url\");\r\n\r\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\r\n\r\nfunction parseUrl(sourceUrl) {\r\n  const parsedUrl = url.parse(sourceUrl);\r\n\r\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\r\n    return parsedUrl;\r\n  } // Prepending 'file:///' to Windows absolute path.\r\n\r\n\r\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\r\n    return url.parse(`file:///${sourceUrl}`);\r\n  } // Changes protocol to 'file:' if url refers to filesystem.\r\n\r\n\r\n  if (!parsedUrl.host) {\r\n    parsedUrl.protocol = \"file:\";\r\n  }\r\n\r\n  return parsedUrl;\r\n}\r\n\r\nclass PDFNodeStream {\r\n  constructor(source) {\r\n    this.source = source;\r\n    this.url = parseUrl(source.url);\r\n    this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\"; // Check if url refers to filesystem.\r\n\r\n    this.isFsUrl = this.url.protocol === \"file:\";\r\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\r\n    this._fullRequestReader = null;\r\n    this._rangeRequestReaders = [];\r\n  }\r\n\r\n  get _progressiveDataLength() {\r\n    var _this$_fullRequestRea, _this$_fullRequestRea2;\r\n\r\n    return (_this$_fullRequestRea = (_this$_fullRequestRea2 = this._fullRequestReader) === null || _this$_fullRequestRea2 === void 0 ? void 0 : _this$_fullRequestRea2._loaded) !== null && _this$_fullRequestRea !== void 0 ? _this$_fullRequestRea : 0;\r\n  }\r\n\r\n  getFullReader() {\r\n    assert(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\r\n    this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\r\n    return this._fullRequestReader;\r\n  }\r\n\r\n  getRangeReader(start, end) {\r\n    if (end <= this._progressiveDataLength) {\r\n      return null;\r\n    }\r\n\r\n    const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\r\n\r\n    this._rangeRequestReaders.push(rangeReader);\r\n\r\n    return rangeReader;\r\n  }\r\n\r\n  cancelAllRequests(reason) {\r\n    if (this._fullRequestReader) {\r\n      this._fullRequestReader.cancel(reason);\r\n    }\r\n\r\n    for (const reader of this._rangeRequestReaders.slice(0)) {\r\n      reader.cancel(reason);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass BaseFullReader {\r\n  constructor(stream) {\r\n    this._url = stream.url;\r\n    this._done = false;\r\n    this._storedError = null;\r\n    this.onProgress = null;\r\n    const source = stream.source;\r\n    this._contentLength = source.length; // optional\r\n\r\n    this._loaded = 0;\r\n    this._filename = null;\r\n    this._disableRange = source.disableRange || false;\r\n    this._rangeChunkSize = source.rangeChunkSize;\r\n\r\n    if (!this._rangeChunkSize && !this._disableRange) {\r\n      this._disableRange = true;\r\n    }\r\n\r\n    this._isStreamingSupported = !source.disableStream;\r\n    this._isRangeSupported = !source.disableRange;\r\n    this._readableStream = null;\r\n    this._readCapability = createPromiseCapability();\r\n    this._headersCapability = createPromiseCapability();\r\n  }\r\n\r\n  get headersReady() {\r\n    return this._headersCapability.promise;\r\n  }\r\n\r\n  get filename() {\r\n    return this._filename;\r\n  }\r\n\r\n  get contentLength() {\r\n    return this._contentLength;\r\n  }\r\n\r\n  get isRangeSupported() {\r\n    return this._isRangeSupported;\r\n  }\r\n\r\n  get isStreamingSupported() {\r\n    return this._isStreamingSupported;\r\n  }\r\n\r\n  async read() {\r\n    await this._readCapability.promise;\r\n\r\n    if (this._done) {\r\n      return {\r\n        value: undefined,\r\n        done: true\r\n      };\r\n    }\r\n\r\n    if (this._storedError) {\r\n      throw this._storedError;\r\n    }\r\n\r\n    const chunk = this._readableStream.read();\r\n\r\n    if (chunk === null) {\r\n      this._readCapability = createPromiseCapability();\r\n      return this.read();\r\n    }\r\n\r\n    this._loaded += chunk.length;\r\n\r\n    if (this.onProgress) {\r\n      this.onProgress({\r\n        loaded: this._loaded,\r\n        total: this._contentLength\r\n      });\r\n    } // Ensure that `read()` method returns ArrayBuffer.\r\n\r\n\r\n    const buffer = new Uint8Array(chunk).buffer;\r\n    return {\r\n      value: buffer,\r\n      done: false\r\n    };\r\n  }\r\n\r\n  cancel(reason) {\r\n    // Call `this._error()` method when cancel is called\r\n    // before _readableStream is set.\r\n    if (!this._readableStream) {\r\n      this._error(reason);\r\n\r\n      return;\r\n    }\r\n\r\n    this._readableStream.destroy(reason);\r\n  }\r\n\r\n  _error(reason) {\r\n    this._storedError = reason;\r\n\r\n    this._readCapability.resolve();\r\n  }\r\n\r\n  _setReadableStream(readableStream) {\r\n    this._readableStream = readableStream;\r\n    readableStream.on(\"readable\", () => {\r\n      this._readCapability.resolve();\r\n    });\r\n    readableStream.on(\"end\", () => {\r\n      // Destroy readable to minimize resource usage.\r\n      readableStream.destroy();\r\n      this._done = true;\r\n\r\n      this._readCapability.resolve();\r\n    });\r\n    readableStream.on(\"error\", reason => {\r\n      this._error(reason);\r\n    }); // We need to stop reading when range is supported and streaming is\r\n    // disabled.\r\n\r\n    if (!this._isStreamingSupported && this._isRangeSupported) {\r\n      this._error(new AbortException(\"streaming is disabled\"));\r\n    } // Destroy ReadableStream if already in errored state.\r\n\r\n\r\n    if (this._storedError) {\r\n      this._readableStream.destroy(this._storedError);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass BaseRangeReader {\r\n  constructor(stream) {\r\n    this._url = stream.url;\r\n    this._done = false;\r\n    this._storedError = null;\r\n    this.onProgress = null;\r\n    this._loaded = 0;\r\n    this._readableStream = null;\r\n    this._readCapability = createPromiseCapability();\r\n    const source = stream.source;\r\n    this._isStreamingSupported = !source.disableStream;\r\n  }\r\n\r\n  get isStreamingSupported() {\r\n    return this._isStreamingSupported;\r\n  }\r\n\r\n  async read() {\r\n    await this._readCapability.promise;\r\n\r\n    if (this._done) {\r\n      return {\r\n        value: undefined,\r\n        done: true\r\n      };\r\n    }\r\n\r\n    if (this._storedError) {\r\n      throw this._storedError;\r\n    }\r\n\r\n    const chunk = this._readableStream.read();\r\n\r\n    if (chunk === null) {\r\n      this._readCapability = createPromiseCapability();\r\n      return this.read();\r\n    }\r\n\r\n    this._loaded += chunk.length;\r\n\r\n    if (this.onProgress) {\r\n      this.onProgress({\r\n        loaded: this._loaded\r\n      });\r\n    } // Ensure that `read()` method returns ArrayBuffer.\r\n\r\n\r\n    const buffer = new Uint8Array(chunk).buffer;\r\n    return {\r\n      value: buffer,\r\n      done: false\r\n    };\r\n  }\r\n\r\n  cancel(reason) {\r\n    // Call `this._error()` method when cancel is called\r\n    // before _readableStream is set.\r\n    if (!this._readableStream) {\r\n      this._error(reason);\r\n\r\n      return;\r\n    }\r\n\r\n    this._readableStream.destroy(reason);\r\n  }\r\n\r\n  _error(reason) {\r\n    this._storedError = reason;\r\n\r\n    this._readCapability.resolve();\r\n  }\r\n\r\n  _setReadableStream(readableStream) {\r\n    this._readableStream = readableStream;\r\n    readableStream.on(\"readable\", () => {\r\n      this._readCapability.resolve();\r\n    });\r\n    readableStream.on(\"end\", () => {\r\n      // Destroy readableStream to minimize resource usage.\r\n      readableStream.destroy();\r\n      this._done = true;\r\n\r\n      this._readCapability.resolve();\r\n    });\r\n    readableStream.on(\"error\", reason => {\r\n      this._error(reason);\r\n    }); // Destroy readableStream if already in errored state.\r\n\r\n    if (this._storedError) {\r\n      this._readableStream.destroy(this._storedError);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction createRequestOptions(parsedUrl, headers) {\r\n  return {\r\n    protocol: parsedUrl.protocol,\r\n    auth: parsedUrl.auth,\r\n    host: parsedUrl.hostname,\r\n    port: parsedUrl.port,\r\n    path: parsedUrl.path,\r\n    method: \"GET\",\r\n    headers\r\n  };\r\n}\r\n\r\nclass PDFNodeStreamFullReader extends BaseFullReader {\r\n  constructor(stream) {\r\n    super(stream);\r\n\r\n    const handleResponse = response => {\r\n      if (response.statusCode === 404) {\r\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\r\n        this._storedError = error;\r\n\r\n        this._headersCapability.reject(error);\r\n\r\n        return;\r\n      }\r\n\r\n      this._headersCapability.resolve();\r\n\r\n      this._setReadableStream(response);\r\n\r\n      const getResponseHeader = name => {\r\n        // Make sure that headers name are in lower case, as mentioned\r\n        // here: https://nodejs.org/api/http.html#http_message_headers.\r\n        return this._readableStream.headers[name.toLowerCase()];\r\n      };\r\n\r\n      const {\r\n        allowRangeRequests,\r\n        suggestedLength\r\n      } = validateRangeRequestCapabilities({\r\n        getResponseHeader,\r\n        isHttp: stream.isHttp,\r\n        rangeChunkSize: this._rangeChunkSize,\r\n        disableRange: this._disableRange\r\n      });\r\n      this._isRangeSupported = allowRangeRequests; // Setting right content length.\r\n\r\n      this._contentLength = suggestedLength || this._contentLength;\r\n      this._filename = extractFilenameFromHeader(getResponseHeader);\r\n    };\r\n\r\n    this._request = null;\r\n\r\n    if (this._url.protocol === \"http:\") {\r\n      this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\r\n    } else {\r\n      this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\r\n    }\r\n\r\n    this._request.on(\"error\", reason => {\r\n      this._storedError = reason;\r\n\r\n      this._headersCapability.reject(reason);\r\n    }); // Note: `request.end(data)` is used to write `data` to request body\r\n    // and notify end of request. But one should always call `request.end()`\r\n    // even if there is no data to write -- (to notify the end of request).\r\n\r\n\r\n    this._request.end();\r\n  }\r\n\r\n}\r\n\r\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\r\n  constructor(stream, start, end) {\r\n    super(stream);\r\n    this._httpHeaders = {};\r\n\r\n    for (const property in stream.httpHeaders) {\r\n      const value = stream.httpHeaders[property];\r\n\r\n      if (typeof value === \"undefined\") {\r\n        continue;\r\n      }\r\n\r\n      this._httpHeaders[property] = value;\r\n    }\r\n\r\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\r\n\r\n    const handleResponse = response => {\r\n      if (response.statusCode === 404) {\r\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\r\n        this._storedError = error;\r\n        return;\r\n      }\r\n\r\n      this._setReadableStream(response);\r\n    };\r\n\r\n    this._request = null;\r\n\r\n    if (this._url.protocol === \"http:\") {\r\n      this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\r\n    } else {\r\n      this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\r\n    }\r\n\r\n    this._request.on(\"error\", reason => {\r\n      this._storedError = reason;\r\n    });\r\n\r\n    this._request.end();\r\n  }\r\n\r\n}\r\n\r\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\r\n  constructor(stream) {\r\n    super(stream);\r\n    let path = decodeURIComponent(this._url.path); // Remove the extra slash to get right path from url like `file:///C:/`\r\n\r\n    if (fileUriRegex.test(this._url.href)) {\r\n      path = path.replace(/^\\//, \"\");\r\n    }\r\n\r\n    fs.lstat(path, (error, stat) => {\r\n      if (error) {\r\n        if (error.code === \"ENOENT\") {\r\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\r\n        }\r\n\r\n        this._storedError = error;\r\n\r\n        this._headersCapability.reject(error);\r\n\r\n        return;\r\n      } // Setting right content length.\r\n\r\n\r\n      this._contentLength = stat.size;\r\n\r\n      this._setReadableStream(fs.createReadStream(path));\r\n\r\n      this._headersCapability.resolve();\r\n    });\r\n  }\r\n\r\n}\r\n\r\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\r\n  constructor(stream, start, end) {\r\n    super(stream);\r\n    let path = decodeURIComponent(this._url.path); // Remove the extra slash to get right path from url like `file:///C:/`\r\n\r\n    if (fileUriRegex.test(this._url.href)) {\r\n      path = path.replace(/^\\//, \"\");\r\n    }\r\n\r\n    this._setReadableStream(fs.createReadStream(path, {\r\n      start,\r\n      end: end - 1\r\n    }));\r\n  }\r\n\r\n}\r\n\r\nexport { PDFNodeStream };\r\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement } from '@polymer/polymer';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\n\nexport class Templatizer extends PolymerElement {\n  static get is() {\n    return 'vaadin-template-renderer-templatizer';\n  }\n\n  static create(component, template) {\n    const templatizer = new this();\n    templatizer.__template = template;\n    templatizer.__component = component;\n    return templatizer;\n  }\n\n  constructor() {\n    super();\n\n    this.__template = null;\n    this.__component = null;\n    this.__TemplateClass = null;\n    this.__templateInstances = new Set();\n  }\n\n  /**\n   * If the template instance was created by this templatizer's instance and is still attached to DOM,\n   * it only re-renders the instance with the new properties.\n   * Otherwise, it disposes of the old template instance (if it exists),\n   * creates a new template instance with the given properties and renders the instance's root to the element.\n   */\n  render(element, properties = {}) {\n    let instance = element.__templateInstance;\n\n    if (this.__hasTemplateInstance(instance) && this.__isTemplateInstanceAttachedToDOM(instance)) {\n      this.__updateProperties(instance, properties);\n      return;\n    }\n\n    if (this.__hasTemplateInstance(instance)) {\n      this.__disposeOfTemplateInstance(instance);\n    }\n\n    instance = this.__createTemplateInstance(properties);\n    element.__templateInstance = instance;\n    element.innerHTML = '';\n    element.appendChild(instance.root);\n  }\n\n  /** @private */\n  __updateProperties(instance, properties) {\n    // The Polymer uses `===` to check whether a property is changed and should be re-rendered.\n    // This means, object properties won't be re-rendered when mutated inside.\n    // This workaround forces the `item` property to re-render even\n    // the new item is strictly equal to the old item.\n    if (instance.item === properties.item) {\n      instance._setPendingProperty('item');\n    }\n\n    instance.__properties = properties;\n    instance.setProperties(properties);\n  }\n\n  /** @private */\n  __createTemplateInstance(properties) {\n    this.__createTemplateClass(properties);\n\n    const instance = new this.__TemplateClass(properties);\n    instance.__properties = properties;\n\n    this.__templateInstances.add(instance);\n\n    return instance;\n  }\n\n  /** @private */\n  __disposeOfTemplateInstance(instance) {\n    this.__templateInstances.delete(instance);\n  }\n\n  /** @private */\n  __hasTemplateInstance(instance) {\n    return this.__templateInstances.has(instance);\n  }\n\n  /** @private */\n  __isTemplateInstanceAttachedToDOM(instance) {\n    // The edge-case case when the template is empty\n    if (instance.children.length === 0) {\n      return false;\n    }\n\n    return !!instance.children[0].parentElement;\n  }\n\n  /** @private */\n  __createTemplateClass(properties) {\n    if (this.__TemplateClass) {\n      return;\n    }\n\n    const instanceProps = Object.keys(properties).reduce((accum, key) => {\n      return { ...accum, [key]: true };\n    }, {});\n\n    this.__TemplateClass = templatize(this.__template, this, {\n      // Events handled by declarative event listeners\n      // (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n      // to the template instance that stamped it.\n      parentModel: true,\n      // This property prevents the template instance properties\n      // from passing into the `forwardHostProp` callback\n      instanceProps,\n\n      // When changing a property of the data host component, this callback forwards\n      // the changed property to the template instances so that cause their re-rendering.\n      forwardHostProp(prop, value) {\n        this.__templateInstances.forEach((instance) => {\n          instance.forwardHostProp(prop, value);\n        });\n      },\n\n      notifyInstanceProp(instance, path, value) {\n        let rootProperty;\n\n        // Extracts the root property name from the path\n        rootProperty = path.split('.')[0];\n        // Capitalizes the property name\n        rootProperty = rootProperty[0].toUpperCase() + rootProperty.slice(1);\n\n        const callback = `_on${rootProperty}PropertyChanged`;\n\n        if (this[callback]) {\n          this[callback](instance, path, value);\n        }\n      },\n    });\n  }\n}\n\ndefineCustomElement(Templatizer);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { Templatizer } from './template-renderer-templatizer.js';\n\nexport class GridTemplatizer extends Templatizer {\n  /**\n   * @override\n   */\n  static get is() {\n    return 'vaadin-template-renderer-grid-templatizer';\n  }\n\n  /**\n   * Returns a reference to the grid which the templatizer is connected to.\n   *\n   * @private\n   */\n  get __grid() {\n    if (this.__component.__gridElement) {\n      return this.__component;\n    }\n\n    return this.__component._grid;\n  }\n\n  /**\n   * Updates the grid items once an item's nested property is changed.\n   *\n   * Note: The templatizer doesn't support 2-way binding for items provided by custom data provider.\n   * Note: The templatizer doesn't support 2-way binding for the whole item:\n   * <div>{{item}}</div> - not allowed.\n   * <div>{{item.title}}</div> - allowed.\n   *\n   * @protected\n   */\n  _onItemPropertyChanged(instance, path, value) {\n    // Supports 2-way binding only for nested `item` properties.\n    if (path === 'item') {\n      return;\n    }\n\n    // Supports 2-way binding only for items provided by the array data provider.\n    if (!Array.isArray(this.__grid.items)) {\n      return;\n    }\n\n    const index = this.__grid.items.indexOf(instance.item);\n\n    path = path.replace(/^item\\./u, '');\n    path = `items.${index}.${path}`;\n\n    this.__grid.notifyPath(path, value);\n  }\n\n  /**\n   * Expands or collapses the item once the `expanded` property is changed.\n   * The listener handles only user-fired changes.\n   *\n   * @protected\n   */\n  _onExpandedPropertyChanged(instance, _path, value) {\n    // Skip if the value is changed by the templatizer.\n    if (instance.__properties.expanded === value) {\n      return;\n    }\n\n    if (value) {\n      this.__grid.expandItem(instance.item);\n    } else {\n      this.__grid.collapseItem(instance.item);\n    }\n  }\n\n  /**\n   * Selects or deselects the item once the `selected` property is changed.\n   * The listener handles only user-fired changes.\n   *\n   * @protected\n   */\n  _onSelectedPropertyChanged(instance, _path, value) {\n    // Skip if the value is changed by the templatizer.\n    if (instance.__properties.selected === value) {\n      return;\n    }\n\n    if (value) {\n      this.__grid.selectItem(instance.item);\n    } else {\n      this.__grid.deselectItem(instance.item);\n    }\n  }\n\n  /**\n   * Opens or closes the details for the item once the `detailsOpened` property is changed.\n   * The listener handles only user-fired changes.\n   *\n   * @protected\n   */\n  _onDetailsOpenedPropertyChanged(instance, _path, value) {\n    // Skip if the value is changed by the templatizer.\n    if (instance.__properties.detailsOpened === value) {\n      return;\n    }\n\n    if (value) {\n      this.__grid.openItemDetails(instance.item);\n    } else {\n      this.__grid.closeItemDetails(instance.item);\n    }\n  }\n}\n\ndefineCustomElement(GridTemplatizer);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { GridTemplatizer } from './template-renderer-grid-templatizer.js';\nimport { Templatizer } from './template-renderer-templatizer.js';\n\nfunction createRenderer(component, template, TemplatizerClass = Templatizer) {\n  const templatizer = TemplatizerClass.create(component, template);\n\n  const renderer = (root, _owner, model) => {\n    templatizer.render(root, model);\n  };\n\n  template.__templatizer = templatizer;\n  renderer.__templatized = true;\n\n  return renderer;\n}\n\nfunction assignRenderer(component, rendererName, renderer) {\n  const oldRenderer = component[rendererName];\n\n  if (oldRenderer && !oldRenderer.__templatized) {\n    const tag = component.localName;\n\n    throw new Error(`Cannot use both a template and a renderer for <${tag} />.`);\n  }\n\n  component[rendererName] = renderer;\n}\n\nfunction showTemplateWarning(component) {\n  if (component.__suppressTemplateWarning) {\n    return;\n  }\n\n  if (component.hasAttribute('suppress-template-warning')) {\n    return;\n  }\n\n  console.warn(\n    `WARNING: <template> inside <${component.localName}> is deprecated. Use a renderer function instead (see https://vaad.in/template-renderer)`,\n  );\n\n  component.__suppressTemplateWarning = true;\n}\n\nfunction processGridTemplate(grid, template) {\n  if (template.matches('.row-details')) {\n    const renderer = createRenderer(grid, template, GridTemplatizer);\n    assignRenderer(grid, 'rowDetailsRenderer', renderer);\n  }\n}\n\nfunction processGridColumnTemplate(column, template) {\n  if (template.matches('.header')) {\n    const renderer = createRenderer(column, template);\n    assignRenderer(column, 'headerRenderer', renderer);\n    return;\n  }\n\n  if (template.matches('.footer')) {\n    const renderer = createRenderer(column, template);\n    assignRenderer(column, 'footerRenderer', renderer);\n    return;\n  }\n\n  if (template.matches('.editor')) {\n    const renderer = createRenderer(column, template, GridTemplatizer);\n    assignRenderer(column, 'editModeRenderer', renderer);\n    return;\n  }\n\n  const renderer = createRenderer(column, template, GridTemplatizer);\n  assignRenderer(column, 'renderer', renderer);\n}\n\nfunction processTemplate(component, template) {\n  showTemplateWarning(component);\n\n  if (component.__gridElement) {\n    processGridTemplate(component, template);\n    return;\n  }\n\n  if (component.__gridColumnElement) {\n    processGridColumnTemplate(component, template);\n    return;\n  }\n\n  const renderer = createRenderer(component, template);\n  assignRenderer(component, 'renderer', renderer);\n}\n\nfunction processTemplates(component) {\n  FlattenedNodesObserver.getFlattenedNodes(component)\n    .filter((child) => {\n      return child instanceof HTMLTemplateElement;\n    })\n    .forEach((template) => {\n      // Ignore templates which have been processed earlier\n      if (template.__templatizer) {\n        return;\n      }\n\n      processTemplate(component, template);\n    });\n}\n\nfunction observeTemplates(component) {\n  if (component.__templateObserver) {\n    return;\n  }\n\n  component.__templateObserver = new FlattenedNodesObserver(component, () => {\n    processTemplates(component);\n  });\n}\n\n/**\n * Public API\n */\nif (!window.Vaadin) {\n  window.Vaadin = {};\n}\n\nwindow.Vaadin.templateRendererCallback = (component) => {\n  processTemplates(component);\n  observeTemplates(component);\n};\n", "import { B as BaseCanvasFactory, a as BaseCMapReaderFactory, b as BaseStandardFontDataFactory, i as isPdfFile, D as DOMCanvasFactory, c as DOMCMapReaderFactory, d as DOMStandardFontDataFactory, e as isDataScheme, f as deprecated, S as StatTimer, P as PageViewport, R as RenderingCancelledException, l as loadScript, g as DOMSVGFactory, h as addLinkAttributes, L as LinkTarget, j as PDFDateString, k as getFilenameFromUrl, m as isValidFetchUrl } from './display_utils.js';\r\nexport { L as LinkTarget, j as PDFDateString, R as RenderingCancelledException, h as addLinkAttributes, k as getFilenameFromUrl, n as getPdfFilenameFromUrl, o as getXfaPageViewport, i as isPdfFile, l as loadScript } from './display_utils.js';\r\nimport { s as shadow, a as string32, b as bytesToString, U as UNSUPPORTED_FEATURES, w as warn, I as IsEvalSupportedCached, u as unreachable, c as assert, i as isNodeJS, o as objectFromMap, d as info, e as Util, F as FormatError, O as OPS, f as IDENTITY_MATRIX, g as FONT_IDENTITY_MATRIX, T as TextRenderingMode, h as isNum, j as ImageKind, k as IsLittleEndianCached, l as createPromiseCapability, m as isArrayBuffer, n as stringToBytes, p as setVerbosityLevel, q as getVerbosityLevel, r as isSameOrigin, A as AbortException, t as UnknownErrorException, v as UnexpectedResponseException, M as MissingPDFException, x as InvalidPDFException, P as PasswordException, y as AnnotationType, z as AnnotationBorderStyleType, B as stringToPDFString, C as createObjectURL } from './util.js';\r\nexport { D as CMapCompressionType, x as InvalidPDFException, M as MissingPDFException, O as OPS, G as PasswordResponses, H as PermissionFlag, U as UNSUPPORTED_FEATURES, v as UnexpectedResponseException, e as Util, V as VerbosityLevel, C as createObjectURL, l as createPromiseCapability, E as createValidAbsoluteUrl, J as removeNullCharacters, s as shadow } from './util.js';\r\nimport { M as MessageHandler } from './message_handler.js';\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass BaseFontLoader {\r\n  constructor({\r\n    docId,\r\n    onUnsupportedFeature,\r\n    ownerDocument = globalThis.document,\r\n    // For testing only.\r\n    styleElement = null\r\n  }) {\r\n    if (this.constructor === BaseFontLoader) {\r\n      unreachable(\"Cannot initialize BaseFontLoader.\");\r\n    }\r\n\r\n    this.docId = docId;\r\n    this._onUnsupportedFeature = onUnsupportedFeature;\r\n    this._document = ownerDocument;\r\n    this.nativeFontFaces = [];\r\n    this.styleElement = typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\") ? styleElement : null;\r\n  }\r\n\r\n  addNativeFontFace(nativeFontFace) {\r\n    this.nativeFontFaces.push(nativeFontFace);\r\n\r\n    this._document.fonts.add(nativeFontFace);\r\n  }\r\n\r\n  insertRule(rule) {\r\n    let styleElement = this.styleElement;\r\n\r\n    if (!styleElement) {\r\n      styleElement = this.styleElement = this._document.createElement(\"style\");\r\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\r\n\r\n      this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\r\n    }\r\n\r\n    const styleSheet = styleElement.sheet;\r\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\r\n  }\r\n\r\n  clear() {\r\n    for (const nativeFontFace of this.nativeFontFaces) {\r\n      this._document.fonts.delete(nativeFontFace);\r\n    }\r\n\r\n    this.nativeFontFaces.length = 0;\r\n\r\n    if (this.styleElement) {\r\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\r\n      this.styleElement.remove();\r\n      this.styleElement = null;\r\n    }\r\n  }\r\n\r\n  async bind(font) {\r\n    // Add the font to the DOM only once; skip if the font is already loaded.\r\n    if (font.attached || font.missingFile) {\r\n      return;\r\n    }\r\n\r\n    font.attached = true;\r\n\r\n    if (this.isFontLoadingAPISupported) {\r\n      const nativeFontFace = font.createNativeFontFace();\r\n\r\n      if (nativeFontFace) {\r\n        this.addNativeFontFace(nativeFontFace);\r\n\r\n        try {\r\n          await nativeFontFace.loaded;\r\n        } catch (ex) {\r\n          this._onUnsupportedFeature({\r\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative\r\n          });\r\n\r\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`); // When font loading failed, fall back to the built-in font renderer.\r\n\r\n          font.disableFontFace = true;\r\n          throw ex;\r\n        }\r\n      }\r\n\r\n      return; // The font was, asynchronously, loaded.\r\n    } // !this.isFontLoadingAPISupported\r\n\r\n\r\n    const rule = font.createFontFaceRule();\r\n\r\n    if (rule) {\r\n      this.insertRule(rule);\r\n\r\n      if (this.isSyncFontLoadingSupported) {\r\n        return; // The font was, synchronously, loaded.\r\n      }\r\n\r\n      await new Promise(resolve => {\r\n        const request = this._queueLoadingCallback(resolve);\r\n\r\n        this._prepareFontLoadEvent([rule], [font], request);\r\n      }); // The font was, asynchronously, loaded.\r\n    }\r\n  }\r\n\r\n  _queueLoadingCallback(callback) {\r\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\r\n  }\r\n\r\n  get isFontLoadingAPISupported() {\r\n    var _this$_document;\r\n\r\n    const hasFonts = !!((_this$_document = this._document) !== null && _this$_document !== void 0 && _this$_document.fonts);\r\n\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")) {\r\n      return shadow(this, \"isFontLoadingAPISupported\", hasFonts && !this.styleElement);\r\n    }\r\n\r\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\r\n  } // eslint-disable-next-line getter-return\r\n\r\n\r\n  get isSyncFontLoadingSupported() {\r\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\r\n  } // eslint-disable-next-line getter-return\r\n\r\n\r\n  get _loadTestFont() {\r\n    unreachable(\"Abstract method `_loadTestFont`.\");\r\n  }\r\n\r\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\r\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\r\n  }\r\n\r\n}\r\n\r\nlet FontLoader;\r\n\r\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\r\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\r\n    get isSyncFontLoadingSupported() {\r\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\r\n    }\r\n\r\n  };\r\n} else {\r\n  // PDFJSDev.test('CHROME || GENERIC')\r\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\r\n    constructor(params) {\r\n      super(params);\r\n      this.loadingContext = {\r\n        requests: [],\r\n        nextRequestId: 0\r\n      };\r\n      this.loadTestFontId = 0;\r\n    }\r\n\r\n    get isSyncFontLoadingSupported() {\r\n      let supported = false;\r\n\r\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\r\n        if (typeof navigator === \"undefined\") {\r\n          // Node.js - we can pretend that sync font loading is supported.\r\n          supported = true;\r\n        } else {\r\n          // User agent string sniffing is bad, but there is no reliable way to\r\n          // tell if the font is fully loaded and ready to be used with canvas.\r\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\r\n\r\n          if ((m === null || m === void 0 ? void 0 : m[1]) >= 14) {\r\n            supported = true;\r\n          } // TODO - other browsers...\r\n\r\n        }\r\n      }\r\n\r\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\r\n    }\r\n\r\n    _queueLoadingCallback(callback) {\r\n      function completeRequest() {\r\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\r\n        request.done = true; // Sending all completed requests in order of how they were queued.\r\n\r\n        while (context.requests.length > 0 && context.requests[0].done) {\r\n          const otherRequest = context.requests.shift();\r\n          setTimeout(otherRequest.callback, 0);\r\n        }\r\n      }\r\n\r\n      const context = this.loadingContext;\r\n      const request = {\r\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\r\n        done: false,\r\n        complete: completeRequest,\r\n        callback\r\n      };\r\n      context.requests.push(request);\r\n      return request;\r\n    }\r\n\r\n    get _loadTestFont() {\r\n      const getLoadTestFont = function () {\r\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\r\n        // and height.\r\n        return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\r\n      };\r\n\r\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\r\n    }\r\n\r\n    _prepareFontLoadEvent(rules, fonts, request) {\r\n      /** Hack begin */\r\n      // There's currently no event when a font has finished downloading so the\r\n      // following code is a dirty hack to 'guess' when a font is ready.\r\n      // It's assumed fonts are loaded in order, so add a known test font after\r\n      // the desired fonts and then test for the loading of that test font.\r\n      function int32(data, offset) {\r\n        return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\r\n      }\r\n\r\n      function spliceString(s, offset, remove, insert) {\r\n        const chunk1 = s.substring(0, offset);\r\n        const chunk2 = s.substring(offset + remove);\r\n        return chunk1 + insert + chunk2;\r\n      }\r\n\r\n      let i, ii; // The temporary canvas is used to determine if fonts are loaded.\r\n\r\n      const canvas = this._document.createElement(\"canvas\");\r\n\r\n      canvas.width = 1;\r\n      canvas.height = 1;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      let called = 0;\r\n\r\n      function isFontReady(name, callback) {\r\n        called++; // With setTimeout clamping this gives the font ~100ms to load.\r\n\r\n        if (called > 30) {\r\n          warn(\"Load test font never loaded.\");\r\n          callback();\r\n          return;\r\n        }\r\n\r\n        ctx.font = \"30px \" + name;\r\n        ctx.fillText(\".\", 0, 20);\r\n        const imageData = ctx.getImageData(0, 0, 1, 1);\r\n\r\n        if (imageData.data[3] > 0) {\r\n          callback();\r\n          return;\r\n        }\r\n\r\n        setTimeout(isFontReady.bind(null, name, callback));\r\n      }\r\n\r\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`; // Chromium seems to cache fonts based on a hash of the actual font data,\r\n      // so the font must be modified for each load test else it will appear to\r\n      // be loaded already.\r\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\r\n      // font by splitting it in chunks before hand and padding the font id.\r\n\r\n      let data = this._loadTestFont;\r\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\r\n\r\n      data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId); // CFF checksum is important for IE, adjusting it\r\n\r\n      const CFF_CHECKSUM_OFFSET = 16;\r\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\r\n\r\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\r\n\r\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\r\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\r\n      }\r\n\r\n      if (i < loadTestFontId.length) {\r\n        // align to 4 bytes boundary\r\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\r\n      }\r\n\r\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\r\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\r\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\r\n      this.insertRule(rule);\r\n      const names = [];\r\n\r\n      for (const font of fonts) {\r\n        names.push(font.loadedName);\r\n      }\r\n\r\n      names.push(loadTestFontId);\r\n\r\n      const div = this._document.createElement(\"div\");\r\n\r\n      div.style.visibility = \"hidden\";\r\n      div.style.width = div.style.height = \"10px\";\r\n      div.style.position = \"absolute\";\r\n      div.style.top = div.style.left = \"0px\";\r\n\r\n      for (const name of names) {\r\n        const span = this._document.createElement(\"span\");\r\n\r\n        span.textContent = \"Hi\";\r\n        span.style.fontFamily = name;\r\n        div.appendChild(span);\r\n      }\r\n\r\n      this._document.body.appendChild(div);\r\n\r\n      isFontReady(loadTestFontId, () => {\r\n        this._document.body.removeChild(div);\r\n\r\n        request.complete();\r\n      });\r\n      /** Hack end */\r\n    }\r\n\r\n  };\r\n} // End of PDFJSDev.test('CHROME || GENERIC')\r\n\r\n\r\nclass FontFaceObject {\r\n  constructor(translatedData, {\r\n    isEvalSupported = true,\r\n    disableFontFace = false,\r\n    ignoreErrors = false,\r\n    onUnsupportedFeature,\r\n    fontRegistry = null\r\n  }) {\r\n    this.compiledGlyphs = Object.create(null); // importing translated data\r\n\r\n    for (const i in translatedData) {\r\n      this[i] = translatedData[i];\r\n    }\r\n\r\n    this.isEvalSupported = isEvalSupported !== false;\r\n    this.disableFontFace = disableFontFace === true;\r\n    this.ignoreErrors = ignoreErrors === true;\r\n    this._onUnsupportedFeature = onUnsupportedFeature;\r\n    this.fontRegistry = fontRegistry;\r\n  }\r\n\r\n  createNativeFontFace() {\r\n    if (!this.data || this.disableFontFace) {\r\n      return null;\r\n    }\r\n\r\n    let nativeFontFace;\r\n\r\n    if (!this.cssFontInfo) {\r\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\r\n    } else {\r\n      const css = {\r\n        weight: this.cssFontInfo.fontWeight\r\n      };\r\n\r\n      if (this.cssFontInfo.italicAngle) {\r\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\r\n      }\r\n\r\n      nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\r\n    }\r\n\r\n    if (this.fontRegistry) {\r\n      this.fontRegistry.registerFont(this);\r\n    }\r\n\r\n    return nativeFontFace;\r\n  }\r\n\r\n  createFontFaceRule() {\r\n    if (!this.data || this.disableFontFace) {\r\n      return null;\r\n    }\r\n\r\n    const data = bytesToString(this.data); // Add the @font-face rule to the document.\r\n\r\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\r\n    let rule;\r\n\r\n    if (!this.cssFontInfo) {\r\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\r\n    } else {\r\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\r\n\r\n      if (this.cssFontInfo.italicAngle) {\r\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\r\n      }\r\n\r\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\r\n    }\r\n\r\n    if (this.fontRegistry) {\r\n      this.fontRegistry.registerFont(this, url);\r\n    }\r\n\r\n    return rule;\r\n  }\r\n\r\n  getPathGenerator(objs, character) {\r\n    if (this.compiledGlyphs[character] !== undefined) {\r\n      return this.compiledGlyphs[character];\r\n    }\r\n\r\n    let cmds;\r\n\r\n    try {\r\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\r\n    } catch (ex) {\r\n      if (!this.ignoreErrors) {\r\n        throw ex;\r\n      }\r\n\r\n      this._onUnsupportedFeature({\r\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath\r\n      });\r\n\r\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\r\n      return this.compiledGlyphs[character] = function (c, size) {// No-op function, to allow rendering to continue.\r\n      };\r\n    } // If we can, compile cmds into JS for MAXIMUM SPEED...\r\n\r\n\r\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\r\n      const jsBuf = [];\r\n\r\n      for (const current of cmds) {\r\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\r\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\r\n      } // eslint-disable-next-line no-new-func\r\n\r\n\r\n      return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\r\n    } // ... but fall back on using Function.prototype.apply() if we're\r\n    // blocked from using eval() for whatever reason (like CSP policies).\r\n\r\n\r\n    return this.compiledGlyphs[character] = function (c, size) {\r\n      for (const current of cmds) {\r\n        if (current.cmd === \"scale\") {\r\n          current.args = [size, -size];\r\n        }\r\n\r\n        c[current.cmd].apply(c, current.args);\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2020 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet NodeCanvasFactory = class {\r\n  constructor() {\r\n    unreachable(\"Not implemented: NodeCanvasFactory\");\r\n  }\r\n\r\n};\r\nlet NodeCMapReaderFactory = class {\r\n  constructor() {\r\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\r\n  }\r\n\r\n};\r\nlet NodeStandardFontDataFactory = class {\r\n  constructor() {\r\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\r\n  }\r\n\r\n};\r\n\r\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\r\n  const fetchData = function (url) {\r\n    return new Promise((resolve, reject) => {\r\n      const fs = __non_webpack_require__(\"fs\");\r\n\r\n      fs.readFile(url, (error, data) => {\r\n        if (error || !data) {\r\n          reject(new Error(error));\r\n          return;\r\n        }\r\n\r\n        resolve(new Uint8Array(data));\r\n      });\r\n    });\r\n  };\r\n\r\n  NodeCanvasFactory = class extends BaseCanvasFactory {\r\n    _createCanvas(width, height) {\r\n      const Canvas = __non_webpack_require__(\"canvas\");\r\n\r\n      return Canvas.createCanvas(width, height);\r\n    }\r\n\r\n  };\r\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\r\n    _fetchData(url, compressionType) {\r\n      return fetchData(url).then(data => {\r\n        return {\r\n          cMapData: data,\r\n          compressionType\r\n        };\r\n      });\r\n    }\r\n\r\n  };\r\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\r\n    _fetchData(url) {\r\n      return fetchData(url);\r\n    }\r\n\r\n  };\r\n}\r\n\r\n/* Copyright 2020 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Key/value storage for annotation data in forms.\r\n */\r\n\r\nclass AnnotationStorage {\r\n  constructor() {\r\n    this._storage = new Map();\r\n    this._modified = false; // Callbacks to signal when the modification state is set or reset.\r\n    // This is used by the viewer to only bind on `beforeunload` if forms\r\n    // are actually edited to prevent doing so unconditionally since that\r\n    // can have undesirable effects.\r\n\r\n    this.onSetModified = null;\r\n    this.onResetModified = null;\r\n  }\r\n  /**\r\n   * Get the value for a given key if it exists, or return the default value.\r\n   *\r\n   * @public\r\n   * @memberof AnnotationStorage\r\n   * @param {string} key\r\n   * @param {Object} defaultValue\r\n   * @returns {Object}\r\n   */\r\n\r\n\r\n  getValue(key, defaultValue) {\r\n    const obj = this._storage.get(key);\r\n\r\n    return obj !== undefined ? obj : defaultValue;\r\n  }\r\n  /**\r\n   * Set the value for a given key\r\n   *\r\n   * @public\r\n   * @memberof AnnotationStorage\r\n   * @param {string} key\r\n   * @param {Object} value\r\n   */\r\n\r\n\r\n  setValue(key, value) {\r\n    const obj = this._storage.get(key);\r\n\r\n    let modified = false;\r\n\r\n    if (obj !== undefined) {\r\n      for (const [entry, val] of Object.entries(value)) {\r\n        if (obj[entry] !== val) {\r\n          modified = true;\r\n          obj[entry] = val;\r\n        }\r\n      }\r\n    } else {\r\n      this._storage.set(key, value);\r\n\r\n      modified = true;\r\n    }\r\n\r\n    if (modified) {\r\n      this._setModified();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\r\n  }\r\n\r\n  get size() {\r\n    return this._storage.size;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _setModified() {\r\n    if (!this._modified) {\r\n      this._modified = true;\r\n\r\n      if (typeof this.onSetModified === \"function\") {\r\n        this.onSetModified();\r\n      }\r\n    }\r\n  }\r\n\r\n  resetModified() {\r\n    if (this._modified) {\r\n      this._modified = false;\r\n\r\n      if (typeof this.onResetModified === \"function\") {\r\n        this.onResetModified();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * PLEASE NOTE: Only intended for usage within the API itself.\r\n   * @ignore\r\n   */\r\n\r\n\r\n  get serializable() {\r\n    return this._storage.size > 0 ? this._storage : null;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2014 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nfunction applyBoundingBox(ctx, bbox) {\r\n  if (!bbox || typeof Path2D === \"undefined\") {\r\n    return;\r\n  }\r\n\r\n  const width = bbox[2] - bbox[0];\r\n  const height = bbox[3] - bbox[1];\r\n  const region = new Path2D();\r\n  region.rect(bbox[0], bbox[1], width, height);\r\n  ctx.clip(region);\r\n}\r\n\r\nclass BaseShadingPattern {\r\n  constructor() {\r\n    if (this.constructor === BaseShadingPattern) {\r\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\r\n    }\r\n  }\r\n\r\n  getPattern() {\r\n    unreachable(\"Abstract method `getPattern` called.\");\r\n  }\r\n\r\n}\r\n\r\nclass RadialAxialShadingPattern extends BaseShadingPattern {\r\n  constructor(IR) {\r\n    super();\r\n    this._type = IR[1];\r\n    this._bbox = IR[2];\r\n    this._colorStops = IR[3];\r\n    this._p0 = IR[4];\r\n    this._p1 = IR[5];\r\n    this._r0 = IR[6];\r\n    this._r1 = IR[7];\r\n    this._matrix = IR[8];\r\n    this._patternCache = null;\r\n  }\r\n\r\n  _createGradient(ctx) {\r\n    let grad;\r\n\r\n    if (this._type === \"axial\") {\r\n      grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\r\n    } else if (this._type === \"radial\") {\r\n      grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\r\n    }\r\n\r\n    for (const colorStop of this._colorStops) {\r\n      grad.addColorStop(colorStop[0], colorStop[1]);\r\n    }\r\n\r\n    return grad;\r\n  }\r\n\r\n  getPattern(ctx, owner, inverse, shadingFill = false) {\r\n    let pattern;\r\n\r\n    if (this._patternCache) {\r\n      pattern = this._patternCache;\r\n    } else {\r\n      if (!shadingFill) {\r\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", owner.ctx.canvas.width, owner.ctx.canvas.height, true);\r\n        const tmpCtx = tmpCanvas.context;\r\n        tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\r\n        tmpCtx.beginPath();\r\n        tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\r\n        tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\r\n\r\n        if (this._matrix) {\r\n          tmpCtx.transform.apply(tmpCtx, this._matrix);\r\n        }\r\n\r\n        applyBoundingBox(tmpCtx, this._bbox);\r\n        tmpCtx.fillStyle = this._createGradient(tmpCtx);\r\n        tmpCtx.fill();\r\n        pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\r\n      } else {\r\n        applyBoundingBox(ctx, this._bbox);\r\n        pattern = this._createGradient(ctx);\r\n      }\r\n\r\n      this._patternCache = pattern;\r\n    }\r\n\r\n    if (!shadingFill) {\r\n      const domMatrix = new DOMMatrix(inverse);\r\n\r\n      try {\r\n        pattern.setTransform(domMatrix);\r\n      } catch (ex) {\r\n        // Avoid rendering breaking completely in Firefox 78 ESR,\r\n        // and in Node.js (see issue 13724).\r\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex === null || ex === void 0 ? void 0 : ex.message}\".`);\r\n      }\r\n    }\r\n\r\n    return pattern;\r\n  }\r\n\r\n}\r\n\r\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\r\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\r\n  const coords = context.coords,\r\n        colors = context.colors;\r\n  const bytes = data.data,\r\n        rowSize = data.width * 4;\r\n  let tmp;\r\n\r\n  if (coords[p1 + 1] > coords[p2 + 1]) {\r\n    tmp = p1;\r\n    p1 = p2;\r\n    p2 = tmp;\r\n    tmp = c1;\r\n    c1 = c2;\r\n    c2 = tmp;\r\n  }\r\n\r\n  if (coords[p2 + 1] > coords[p3 + 1]) {\r\n    tmp = p2;\r\n    p2 = p3;\r\n    p3 = tmp;\r\n    tmp = c2;\r\n    c2 = c3;\r\n    c3 = tmp;\r\n  }\r\n\r\n  if (coords[p1 + 1] > coords[p2 + 1]) {\r\n    tmp = p1;\r\n    p1 = p2;\r\n    p2 = tmp;\r\n    tmp = c1;\r\n    c1 = c2;\r\n    c2 = tmp;\r\n  }\r\n\r\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\r\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\r\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\r\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\r\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\r\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\r\n\r\n  if (y1 >= y3) {\r\n    return;\r\n  }\r\n\r\n  const c1r = colors[c1],\r\n        c1g = colors[c1 + 1],\r\n        c1b = colors[c1 + 2];\r\n  const c2r = colors[c2],\r\n        c2g = colors[c2 + 1],\r\n        c2b = colors[c2 + 2];\r\n  const c3r = colors[c3],\r\n        c3g = colors[c3 + 1],\r\n        c3b = colors[c3 + 2];\r\n  const minY = Math.round(y1),\r\n        maxY = Math.round(y3);\r\n  let xa, car, cag, cab;\r\n  let xb, cbr, cbg, cbb;\r\n\r\n  for (let y = minY; y <= maxY; y++) {\r\n    if (y < y2) {\r\n      let k;\r\n\r\n      if (y < y1) {\r\n        k = 0;\r\n      } else {\r\n        k = (y1 - y) / (y1 - y2);\r\n      }\r\n\r\n      xa = x1 - (x1 - x2) * k;\r\n      car = c1r - (c1r - c2r) * k;\r\n      cag = c1g - (c1g - c2g) * k;\r\n      cab = c1b - (c1b - c2b) * k;\r\n    } else {\r\n      let k;\r\n\r\n      if (y > y3) {\r\n        k = 1;\r\n      } else if (y2 === y3) {\r\n        k = 0;\r\n      } else {\r\n        k = (y2 - y) / (y2 - y3);\r\n      }\r\n\r\n      xa = x2 - (x2 - x3) * k;\r\n      car = c2r - (c2r - c3r) * k;\r\n      cag = c2g - (c2g - c3g) * k;\r\n      cab = c2b - (c2b - c3b) * k;\r\n    }\r\n\r\n    let k;\r\n\r\n    if (y < y1) {\r\n      k = 0;\r\n    } else if (y > y3) {\r\n      k = 1;\r\n    } else {\r\n      k = (y1 - y) / (y1 - y3);\r\n    }\r\n\r\n    xb = x1 - (x1 - x3) * k;\r\n    cbr = c1r - (c1r - c3r) * k;\r\n    cbg = c1g - (c1g - c3g) * k;\r\n    cbb = c1b - (c1b - c3b) * k;\r\n    const x1_ = Math.round(Math.min(xa, xb));\r\n    const x2_ = Math.round(Math.max(xa, xb));\r\n    let j = rowSize * y + x1_ * 4;\r\n\r\n    for (let x = x1_; x <= x2_; x++) {\r\n      k = (xa - x) / (xa - xb);\r\n\r\n      if (k < 0) {\r\n        k = 0;\r\n      } else if (k > 1) {\r\n        k = 1;\r\n      }\r\n\r\n      bytes[j++] = car - (car - cbr) * k | 0;\r\n      bytes[j++] = cag - (cag - cbg) * k | 0;\r\n      bytes[j++] = cab - (cab - cbb) * k | 0;\r\n      bytes[j++] = 255;\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawFigure(data, figure, context) {\r\n  const ps = figure.coords;\r\n  const cs = figure.colors;\r\n  let i, ii;\r\n\r\n  switch (figure.type) {\r\n    case \"lattice\":\r\n      const verticesPerRow = figure.verticesPerRow;\r\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\r\n      const cols = verticesPerRow - 1;\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        let q = i * verticesPerRow;\r\n\r\n        for (let j = 0; j < cols; j++, q++) {\r\n          drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\r\n          drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    case \"triangles\":\r\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\r\n        drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\r\n      }\r\n\r\n      break;\r\n\r\n    default:\r\n      throw new Error(\"illegal figure\");\r\n  }\r\n}\r\n\r\nclass MeshShadingPattern extends BaseShadingPattern {\r\n  constructor(IR) {\r\n    super();\r\n    this._coords = IR[2];\r\n    this._colors = IR[3];\r\n    this._figures = IR[4];\r\n    this._bounds = IR[5];\r\n    this._matrix = IR[6];\r\n    this._bbox = IR[7];\r\n    this._background = IR[8];\r\n  }\r\n\r\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\r\n    // we will increase scale on some weird factor to let antialiasing take\r\n    // care of \"rough\" edges\r\n    const EXPECTED_SCALE = 1.1; // MAX_PATTERN_SIZE is used to avoid OOM situation.\r\n\r\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\r\n    // We need to keep transparent border around our pattern for fill():\r\n    // createPattern with 'no-repeat' will bleed edges across entire area.\r\n\r\n    const BORDER_SIZE = 2;\r\n    const offsetX = Math.floor(this._bounds[0]);\r\n    const offsetY = Math.floor(this._bounds[1]);\r\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\r\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\r\n    const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\r\n    const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\r\n    const scaleX = boundsWidth / width;\r\n    const scaleY = boundsHeight / height;\r\n    const context = {\r\n      coords: this._coords,\r\n      colors: this._colors,\r\n      offsetX: -offsetX,\r\n      offsetY: -offsetY,\r\n      scaleX: 1 / scaleX,\r\n      scaleY: 1 / scaleY\r\n    };\r\n    const paddedWidth = width + BORDER_SIZE * 2;\r\n    const paddedHeight = height + BORDER_SIZE * 2;\r\n    const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\r\n    const tmpCtx = tmpCanvas.context;\r\n    const data = tmpCtx.createImageData(width, height);\r\n\r\n    if (backgroundColor) {\r\n      const bytes = data.data;\r\n\r\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\r\n        bytes[i] = backgroundColor[0];\r\n        bytes[i + 1] = backgroundColor[1];\r\n        bytes[i + 2] = backgroundColor[2];\r\n        bytes[i + 3] = 255;\r\n      }\r\n    }\r\n\r\n    for (const figure of this._figures) {\r\n      drawFigure(data, figure, context);\r\n    }\r\n\r\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\r\n    const canvas = tmpCanvas.canvas;\r\n    return {\r\n      canvas,\r\n      offsetX: offsetX - BORDER_SIZE * scaleX,\r\n      offsetY: offsetY - BORDER_SIZE * scaleY,\r\n      scaleX,\r\n      scaleY\r\n    };\r\n  }\r\n\r\n  getPattern(ctx, owner, inverse, shadingFill = false) {\r\n    applyBoundingBox(ctx, this._bbox);\r\n    let scale;\r\n\r\n    if (shadingFill) {\r\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\r\n    } else {\r\n      // Obtain scale from matrix and current transformation matrix.\r\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\r\n\r\n      if (this._matrix) {\r\n        const matrixScale = Util.singularValueDecompose2dScale(this._matrix);\r\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\r\n      }\r\n    } // Rasterizing on the main thread since sending/queue large canvases\r\n    // might cause OOM.\r\n\r\n\r\n    const temporaryPatternCanvas = this._createMeshCanvas(scale, shadingFill ? null : this._background, owner.cachedCanvases);\r\n\r\n    if (!shadingFill) {\r\n      ctx.setTransform.apply(ctx, owner.baseTransform);\r\n\r\n      if (this._matrix) {\r\n        ctx.transform.apply(ctx, this._matrix);\r\n      }\r\n    }\r\n\r\n    ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\r\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\r\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\r\n  }\r\n\r\n}\r\n\r\nclass DummyShadingPattern extends BaseShadingPattern {\r\n  getPattern() {\r\n    return \"hotpink\";\r\n  }\r\n\r\n}\r\n\r\nfunction getShadingPattern(IR) {\r\n  switch (IR[0]) {\r\n    case \"RadialAxial\":\r\n      return new RadialAxialShadingPattern(IR);\r\n\r\n    case \"Mesh\":\r\n      return new MeshShadingPattern(IR);\r\n\r\n    case \"Dummy\":\r\n      return new DummyShadingPattern();\r\n  }\r\n\r\n  throw new Error(`Unknown IR type: ${IR[0]}`);\r\n}\r\n\r\nconst PaintType = {\r\n  COLORED: 1,\r\n  UNCOLORED: 2\r\n};\r\n\r\nclass TilingPattern {\r\n  // 10in @ 300dpi shall be enough.\r\n  static get MAX_PATTERN_SIZE() {\r\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\r\n  }\r\n\r\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\r\n    this.operatorList = IR[2];\r\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\r\n    this.bbox = IR[4];\r\n    this.xstep = IR[5];\r\n    this.ystep = IR[6];\r\n    this.paintType = IR[7];\r\n    this.tilingType = IR[8];\r\n    this.color = color;\r\n    this.ctx = ctx;\r\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\r\n    this.baseTransform = baseTransform;\r\n  }\r\n\r\n  createPatternCanvas(owner) {\r\n    const operatorList = this.operatorList;\r\n    const bbox = this.bbox;\r\n    const xstep = this.xstep;\r\n    const ystep = this.ystep;\r\n    const paintType = this.paintType;\r\n    const tilingType = this.tilingType;\r\n    const color = this.color;\r\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\r\n    info(\"TilingType: \" + tilingType); // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\r\n    // described by bbox, and may repeat regularly by shifting the cell by\r\n    // xstep and ystep.\r\n    // Because the HTML5 canvas API does not support pattern repetition with\r\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\r\n    //\r\n    // This has the following consequences (similarly for ystep):\r\n    //\r\n    // - If xstep is the same as bbox, then there is no observable difference.\r\n    //\r\n    // - If xstep is larger than bbox, then the pattern canvas is partially\r\n    //   empty: the area bounded by bbox is painted, the outside area is void.\r\n    //\r\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\r\n    //   bbox boundary will be missing. This is INCORRECT behavior.\r\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\r\n    //   but overlapping cells without common pixels are still valid.\r\n    //   TODO: Fix the implementation, to allow this scenario to be painted\r\n    //   correctly.\r\n\r\n    const x0 = bbox[0],\r\n          y0 = bbox[1],\r\n          x1 = bbox[2],\r\n          y1 = bbox[3]; // Obtain scale from matrix and current transformation matrix.\r\n\r\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\r\n    const curMatrixScale = Util.singularValueDecompose2dScale(this.baseTransform);\r\n    const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]]; // Use width and height values that are as close as possible to the end\r\n    // result when the pattern is used. Too low value makes the pattern look\r\n    // blurry. Too large value makes it look too crispy.\r\n\r\n    const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\r\n    const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\r\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\r\n    const tmpCtx = tmpCanvas.context;\r\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\r\n    graphics.groupLevel = owner.groupLevel;\r\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\r\n    let adjustedX0 = x0;\r\n    let adjustedY0 = y0;\r\n    let adjustedX1 = x1;\r\n    let adjustedY1 = y1; // Some bounding boxes have negative x0/y0 cordinates which will cause the\r\n    // some of the drawing to be off of the canvas. To avoid this shift the\r\n    // bounding box over.\r\n\r\n    if (x0 < 0) {\r\n      adjustedX0 = 0;\r\n      adjustedX1 += Math.abs(x0);\r\n    }\r\n\r\n    if (y0 < 0) {\r\n      adjustedY0 = 0;\r\n      adjustedY1 += Math.abs(y0);\r\n    }\r\n\r\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\r\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\r\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\r\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\r\n    graphics.executeOperatorList(operatorList);\r\n    graphics.endDrawing();\r\n    return {\r\n      canvas: tmpCanvas.canvas,\r\n      scaleX: dimx.scale,\r\n      scaleY: dimy.scale,\r\n      offsetX: adjustedX0,\r\n      offsetY: adjustedY0\r\n    };\r\n  }\r\n\r\n  getSizeAndScale(step, realOutputSize, scale) {\r\n    // xstep / ystep may be negative -- normalize.\r\n    step = Math.abs(step); // MAX_PATTERN_SIZE is used to avoid OOM situation.\r\n    // Use the destination canvas's size if it is bigger than the hard-coded\r\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\r\n    // whole canvas.\r\n\r\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\r\n    let size = Math.ceil(step * scale);\r\n\r\n    if (size >= maxSize) {\r\n      size = maxSize;\r\n    } else {\r\n      scale = size / step;\r\n    }\r\n\r\n    return {\r\n      scale,\r\n      size\r\n    };\r\n  }\r\n\r\n  clipBbox(graphics, x0, y0, x1, y1) {\r\n    const bboxWidth = x1 - x0;\r\n    const bboxHeight = y1 - y0;\r\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\r\n    graphics.clip();\r\n    graphics.endPath();\r\n  }\r\n\r\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\r\n    const context = graphics.ctx,\r\n          current = graphics.current;\r\n\r\n    switch (paintType) {\r\n      case PaintType.COLORED:\r\n        const ctx = this.ctx;\r\n        context.fillStyle = ctx.fillStyle;\r\n        context.strokeStyle = ctx.strokeStyle;\r\n        current.fillColor = ctx.fillStyle;\r\n        current.strokeColor = ctx.strokeStyle;\r\n        break;\r\n\r\n      case PaintType.UNCOLORED:\r\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\r\n        context.fillStyle = cssColor;\r\n        context.strokeStyle = cssColor; // Set color needed by image masks (fixes issues 3226 and 8741).\r\n\r\n        current.fillColor = cssColor;\r\n        current.strokeColor = cssColor;\r\n        break;\r\n\r\n      default:\r\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\r\n    }\r\n  }\r\n\r\n  getPattern(ctx, owner, inverse, shadingFill = false) {\r\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\r\n    let matrix = inverse;\r\n\r\n    if (!shadingFill) {\r\n      matrix = Util.transform(matrix, owner.baseTransform);\r\n\r\n      if (this.matrix) {\r\n        matrix = Util.transform(matrix, this.matrix);\r\n      }\r\n    }\r\n\r\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\r\n    let domMatrix = new DOMMatrix(matrix); // Rescale and so that the ctx.createPattern call generates a pattern with\r\n    // the desired size.\r\n\r\n    domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\r\n    domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\r\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\r\n\r\n    try {\r\n      pattern.setTransform(domMatrix);\r\n    } catch (ex) {\r\n      // Avoid rendering breaking completely in Firefox 78 ESR,\r\n      // and in Node.js (see issue 13724).\r\n      warn(`TilingPattern.getPattern: \"${ex === null || ex === void 0 ? void 0 : ex.message}\".`);\r\n    }\r\n\r\n    return pattern;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// However, PDF needs a bit more state, which we store here.\r\n// Minimal font size that would be used during canvas fillText operations.\r\n\r\nconst MIN_FONT_SIZE = 16; // Maximum font size that would be used during canvas fillText operations.\r\n\r\nconst MAX_FONT_SIZE = 100;\r\nconst MAX_GROUP_SIZE = 4096;\r\nconst MAX_SIZE_TO_COMPILE = 1000;\r\nconst FULL_CHUNK_HEIGHT = 16; // Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\r\n// some curves aren't rendered correctly.\r\n// Multiplying lineWidth by this factor should help to have \"correct\"\r\n// rendering with no artifacts.\r\n// Once the bug is fixed upstream, we can remove this constant and its use.\r\n\r\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\r\n\r\nfunction addContextCurrentTransform(ctx) {\r\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\r\n  if (ctx.mozCurrentTransform) {\r\n    return;\r\n  }\r\n\r\n  ctx._originalSave = ctx.save;\r\n  ctx._originalRestore = ctx.restore;\r\n  ctx._originalRotate = ctx.rotate;\r\n  ctx._originalScale = ctx.scale;\r\n  ctx._originalTranslate = ctx.translate;\r\n  ctx._originalTransform = ctx.transform;\r\n  ctx._originalSetTransform = ctx.setTransform;\r\n  ctx._originalResetTransform = ctx.resetTransform;\r\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\r\n  ctx._transformStack = [];\r\n\r\n  try {\r\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\r\n    // \"TypeError: Method lineWidth called on incompatible receiver\r\n    //  #<CanvasRenderingContext2D>\".\r\n    const desc = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(ctx), \"lineWidth\");\r\n    ctx._setLineWidth = desc.set;\r\n    ctx._getLineWidth = desc.get;\r\n    Object.defineProperty(ctx, \"lineWidth\", {\r\n      set: function setLineWidth(width) {\r\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\r\n      },\r\n      get: function getLineWidth() {\r\n        return this._getLineWidth();\r\n      }\r\n    });\r\n  } catch (_) {}\r\n\r\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\r\n    get: function getCurrentTransform() {\r\n      return this._transformMatrix;\r\n    }\r\n  });\r\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\r\n    get: function getCurrentTransformInverse() {\r\n      // Calculation done using WolframAlpha:\r\n      // http://www.wolframalpha.com/input/?\r\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\r\n      const [a, b, c, d, e, f] = this._transformMatrix;\r\n      const ad_bc = a * d - b * c;\r\n      const bc_ad = b * c - a * d;\r\n      return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\r\n    }\r\n  });\r\n\r\n  ctx.save = function ctxSave() {\r\n    const old = this._transformMatrix;\r\n\r\n    this._transformStack.push(old);\r\n\r\n    this._transformMatrix = old.slice(0, 6);\r\n\r\n    this._originalSave();\r\n  };\r\n\r\n  ctx.restore = function ctxRestore() {\r\n    const prev = this._transformStack.pop();\r\n\r\n    if (prev) {\r\n      this._transformMatrix = prev;\r\n\r\n      this._originalRestore();\r\n    }\r\n  };\r\n\r\n  ctx.translate = function ctxTranslate(x, y) {\r\n    const m = this._transformMatrix;\r\n    m[4] = m[0] * x + m[2] * y + m[4];\r\n    m[5] = m[1] * x + m[3] * y + m[5];\r\n\r\n    this._originalTranslate(x, y);\r\n  };\r\n\r\n  ctx.scale = function ctxScale(x, y) {\r\n    const m = this._transformMatrix;\r\n    m[0] *= x;\r\n    m[1] *= x;\r\n    m[2] *= y;\r\n    m[3] *= y;\r\n\r\n    this._originalScale(x, y);\r\n  };\r\n\r\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\r\n    const m = this._transformMatrix;\r\n    this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\r\n\r\n    ctx._originalTransform(a, b, c, d, e, f);\r\n  };\r\n\r\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\r\n    this._transformMatrix = [a, b, c, d, e, f];\r\n\r\n    ctx._originalSetTransform(a, b, c, d, e, f);\r\n  };\r\n\r\n  ctx.resetTransform = function ctxResetTransform() {\r\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\r\n\r\n    ctx._originalResetTransform();\r\n  };\r\n\r\n  ctx.rotate = function ctxRotate(angle) {\r\n    const cosValue = Math.cos(angle);\r\n    const sinValue = Math.sin(angle);\r\n    const m = this._transformMatrix;\r\n    this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\r\n\r\n    this._originalRotate(angle);\r\n  };\r\n}\r\n\r\nclass CachedCanvases {\r\n  constructor(canvasFactory) {\r\n    this.canvasFactory = canvasFactory;\r\n    this.cache = Object.create(null);\r\n  }\r\n\r\n  getCanvas(id, width, height, trackTransform) {\r\n    let canvasEntry;\r\n\r\n    if (this.cache[id] !== undefined) {\r\n      canvasEntry = this.cache[id];\r\n      this.canvasFactory.reset(canvasEntry, width, height); // reset canvas transform for emulated mozCurrentTransform, if needed\r\n\r\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\r\n    } else {\r\n      canvasEntry = this.canvasFactory.create(width, height);\r\n      this.cache[id] = canvasEntry;\r\n    }\r\n\r\n    if (trackTransform) {\r\n      addContextCurrentTransform(canvasEntry.context);\r\n    }\r\n\r\n    return canvasEntry;\r\n  }\r\n\r\n  clear() {\r\n    for (const id in this.cache) {\r\n      const canvasEntry = this.cache[id];\r\n      this.canvasFactory.destroy(canvasEntry);\r\n      delete this.cache[id];\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction compileType3Glyph(imgData) {\r\n  const POINT_TO_PROCESS_LIMIT = 1000;\r\n  const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\r\n  const width = imgData.width,\r\n        height = imgData.height,\r\n        width1 = width + 1;\r\n  let i, ii, j, j0;\r\n  const points = new Uint8Array(width1 * (height + 1)); // decodes bit-packed mask data\r\n\r\n  const lineSize = width + 7 & ~7,\r\n        data0 = imgData.data;\r\n  const data = new Uint8Array(lineSize * height);\r\n  let pos = 0;\r\n\r\n  for (i = 0, ii = data0.length; i < ii; i++) {\r\n    const elem = data0[i];\r\n    let mask = 128;\r\n\r\n    while (mask > 0) {\r\n      data[pos++] = elem & mask ? 0 : 255;\r\n      mask >>= 1;\r\n    }\r\n  } // finding interesting points: every point is located between mask pixels,\r\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\r\n  // will have flags assigned based on neighboring mask pixels:\r\n  //   4 | 8\r\n  //   --P--\r\n  //   2 | 1\r\n  // We are interested only in points with the flags:\r\n  //   - outside corners: 1, 2, 4, 8;\r\n  //   - inside corners: 7, 11, 13, 14;\r\n  //   - and, intersections: 5, 10.\r\n\r\n\r\n  let count = 0;\r\n  pos = 0;\r\n\r\n  if (data[pos] !== 0) {\r\n    points[0] = 1;\r\n    ++count;\r\n  }\r\n\r\n  for (j = 1; j < width; j++) {\r\n    if (data[pos] !== data[pos + 1]) {\r\n      points[j] = data[pos] ? 2 : 1;\r\n      ++count;\r\n    }\r\n\r\n    pos++;\r\n  }\r\n\r\n  if (data[pos] !== 0) {\r\n    points[j] = 2;\r\n    ++count;\r\n  }\r\n\r\n  for (i = 1; i < height; i++) {\r\n    pos = i * lineSize;\r\n    j0 = i * width1;\r\n\r\n    if (data[pos - lineSize] !== data[pos]) {\r\n      points[j0] = data[pos] ? 1 : 8;\r\n      ++count;\r\n    } // 'sum' is the position of the current pixel configuration in the 'TYPES'\r\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\r\n\r\n\r\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\r\n\r\n    for (j = 1; j < width; j++) {\r\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\r\n\r\n      if (POINT_TYPES[sum]) {\r\n        points[j0 + j] = POINT_TYPES[sum];\r\n        ++count;\r\n      }\r\n\r\n      pos++;\r\n    }\r\n\r\n    if (data[pos - lineSize] !== data[pos]) {\r\n      points[j0 + j] = data[pos] ? 2 : 4;\r\n      ++count;\r\n    }\r\n\r\n    if (count > POINT_TO_PROCESS_LIMIT) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  pos = lineSize * (height - 1);\r\n  j0 = i * width1;\r\n\r\n  if (data[pos] !== 0) {\r\n    points[j0] = 8;\r\n    ++count;\r\n  }\r\n\r\n  for (j = 1; j < width; j++) {\r\n    if (data[pos] !== data[pos + 1]) {\r\n      points[j0 + j] = data[pos] ? 4 : 8;\r\n      ++count;\r\n    }\r\n\r\n    pos++;\r\n  }\r\n\r\n  if (data[pos] !== 0) {\r\n    points[j0 + j] = 4;\r\n    ++count;\r\n  }\r\n\r\n  if (count > POINT_TO_PROCESS_LIMIT) {\r\n    return null;\r\n  } // building outlines\r\n\r\n\r\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\r\n  const outlines = [];\r\n\r\n  for (i = 0; count && i <= height; i++) {\r\n    let p = i * width1;\r\n    const end = p + width;\r\n\r\n    while (p < end && !points[p]) {\r\n      p++;\r\n    }\r\n\r\n    if (p === end) {\r\n      continue;\r\n    }\r\n\r\n    const coords = [p % width1, i];\r\n    const p0 = p;\r\n    let type = points[p];\r\n\r\n    do {\r\n      const step = steps[type];\r\n\r\n      do {\r\n        p += step;\r\n      } while (!points[p]);\r\n\r\n      const pp = points[p];\r\n\r\n      if (pp !== 5 && pp !== 10) {\r\n        // set new direction\r\n        type = pp; // delete mark\r\n\r\n        points[p] = 0;\r\n      } else {\r\n        // type is 5 or 10, ie, a crossing\r\n        // set new direction\r\n        type = pp & 0x33 * type >> 4; // set new type for \"future hit\"\r\n\r\n        points[p] &= type >> 2 | type << 2;\r\n      }\r\n\r\n      coords.push(p % width1, p / width1 | 0);\r\n\r\n      if (!points[p]) {\r\n        --count;\r\n      }\r\n    } while (p0 !== p);\r\n\r\n    outlines.push(coords);\r\n    --i;\r\n  }\r\n\r\n  const drawOutline = function (c) {\r\n    c.save(); // the path shall be painted in [0..1]x[0..1] space\r\n\r\n    c.scale(1 / width, -1 / height);\r\n    c.translate(0, -height);\r\n    c.beginPath();\r\n\r\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\r\n      const o = outlines[k];\r\n      c.moveTo(o[0], o[1]);\r\n\r\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\r\n        c.lineTo(o[l], o[l + 1]);\r\n      }\r\n    }\r\n\r\n    c.fill();\r\n    c.beginPath();\r\n    c.restore();\r\n  };\r\n\r\n  return drawOutline;\r\n}\r\n\r\nclass CanvasExtraState {\r\n  constructor() {\r\n    // Are soft masks and alpha values shapes or opacities?\r\n    this.alphaIsShape = false;\r\n    this.fontSize = 0;\r\n    this.fontSizeScale = 1;\r\n    this.textMatrix = IDENTITY_MATRIX;\r\n    this.textMatrixScale = 1;\r\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\r\n    this.leading = 0; // Current point (in user coordinates)\r\n\r\n    this.x = 0;\r\n    this.y = 0; // Start of text line (in text coordinates)\r\n\r\n    this.lineX = 0;\r\n    this.lineY = 0; // Character and word spacing\r\n\r\n    this.charSpacing = 0;\r\n    this.wordSpacing = 0;\r\n    this.textHScale = 1;\r\n    this.textRenderingMode = TextRenderingMode.FILL;\r\n    this.textRise = 0; // Default fore and background colors\r\n\r\n    this.fillColor = \"#000000\";\r\n    this.strokeColor = \"#000000\";\r\n    this.patternFill = false; // Note: fill alpha applies to all non-stroking operations\r\n\r\n    this.fillAlpha = 1;\r\n    this.strokeAlpha = 1;\r\n    this.lineWidth = 1;\r\n    this.activeSMask = null;\r\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\r\n\r\n    this.transferMaps = null;\r\n  }\r\n\r\n  clone() {\r\n    return Object.create(this);\r\n  }\r\n\r\n  setCurrentPoint(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n/**\r\n * @type {any}\r\n */\r\n\r\n\r\nconst CanvasGraphics = function CanvasGraphicsClosure() {\r\n  // Defines the time the executeOperatorList is going to be executing\r\n  // before it stops and shedules a continue of execution.\r\n  const EXECUTION_TIME = 15; // Defines the number of steps before checking the execution time\r\n\r\n  const EXECUTION_STEPS = 10;\r\n\r\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\r\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\r\n      ctx.putImageData(imgData, 0, 0);\r\n      return;\r\n    } // Put the image data to the canvas in chunks, rather than putting the\r\n    // whole image at once.  This saves JS memory, because the ImageData object\r\n    // is smaller. It also possibly saves C++ memory within the implementation\r\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\r\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\r\n    // because too many putImageData() calls will slow things down.\r\n    //\r\n    // Note: as written, if the last chunk is partial, the putImageData() call\r\n    // will (conceptually) put pixels past the bounds of the canvas.  But\r\n    // that's ok; any such pixels are ignored.\r\n\r\n\r\n    const height = imgData.height,\r\n          width = imgData.width;\r\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\r\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\r\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\r\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\r\n    let srcPos = 0,\r\n        destPos;\r\n    const src = imgData.data;\r\n    const dest = chunkImgData.data;\r\n    let i, j, thisChunkHeight, elemsInThisChunk;\r\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\r\n\r\n    if (transferMaps) {\r\n      switch (transferMaps.length) {\r\n        case 1:\r\n          transferMapRed = transferMaps[0];\r\n          transferMapGreen = transferMaps[0];\r\n          transferMapBlue = transferMaps[0];\r\n          transferMapGray = transferMaps[0];\r\n          break;\r\n\r\n        case 4:\r\n          transferMapRed = transferMaps[0];\r\n          transferMapGreen = transferMaps[1];\r\n          transferMapBlue = transferMaps[2];\r\n          transferMapGray = transferMaps[3];\r\n          break;\r\n      }\r\n    } // There are multiple forms in which the pixel data can be passed, and\r\n    // imgData.kind tells us which one this is.\r\n\r\n\r\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\r\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\r\n      const srcLength = src.byteLength;\r\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\r\n      const dest32DataLength = dest32.length;\r\n      const fullSrcDiff = width + 7 >> 3;\r\n      let white = 0xffffffff;\r\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\r\n\r\n      if (transferMapGray) {\r\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\r\n          [white, black] = [black, white];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i < totalChunks; i++) {\r\n        thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\r\n        destPos = 0;\r\n\r\n        for (j = 0; j < thisChunkHeight; j++) {\r\n          const srcDiff = srcLength - srcPos;\r\n          let k = 0;\r\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\r\n          const kEndUnrolled = kEnd & ~7;\r\n          let mask = 0;\r\n          let srcByte = 0;\r\n\r\n          for (; k < kEndUnrolled; k += 8) {\r\n            srcByte = src[srcPos++];\r\n            dest32[destPos++] = srcByte & 128 ? white : black;\r\n            dest32[destPos++] = srcByte & 64 ? white : black;\r\n            dest32[destPos++] = srcByte & 32 ? white : black;\r\n            dest32[destPos++] = srcByte & 16 ? white : black;\r\n            dest32[destPos++] = srcByte & 8 ? white : black;\r\n            dest32[destPos++] = srcByte & 4 ? white : black;\r\n            dest32[destPos++] = srcByte & 2 ? white : black;\r\n            dest32[destPos++] = srcByte & 1 ? white : black;\r\n          }\r\n\r\n          for (; k < kEnd; k++) {\r\n            if (mask === 0) {\r\n              srcByte = src[srcPos++];\r\n              mask = 128;\r\n            }\r\n\r\n            dest32[destPos++] = srcByte & mask ? white : black;\r\n            mask >>= 1;\r\n          }\r\n        } // We ran out of input. Make all remaining pixels transparent.\r\n\r\n\r\n        while (destPos < dest32DataLength) {\r\n          dest32[destPos++] = 0;\r\n        }\r\n\r\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\r\n      }\r\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\r\n      // RGBA, 32-bits per pixel.\r\n      const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\r\n      j = 0;\r\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\r\n\r\n      for (i = 0; i < fullChunks; i++) {\r\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\r\n        srcPos += elemsInThisChunk;\r\n\r\n        if (hasTransferMaps) {\r\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\r\n            if (transferMapRed) {\r\n              dest[k + 0] = transferMapRed[dest[k + 0]];\r\n            }\r\n\r\n            if (transferMapGreen) {\r\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\r\n            }\r\n\r\n            if (transferMapBlue) {\r\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\r\n            }\r\n          }\r\n        }\r\n\r\n        ctx.putImageData(chunkImgData, 0, j);\r\n        j += FULL_CHUNK_HEIGHT;\r\n      }\r\n\r\n      if (i < totalChunks) {\r\n        elemsInThisChunk = width * partialChunkHeight * 4;\r\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\r\n\r\n        if (hasTransferMaps) {\r\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\r\n            if (transferMapRed) {\r\n              dest[k + 0] = transferMapRed[dest[k + 0]];\r\n            }\r\n\r\n            if (transferMapGreen) {\r\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\r\n            }\r\n\r\n            if (transferMapBlue) {\r\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\r\n            }\r\n          }\r\n        }\r\n\r\n        ctx.putImageData(chunkImgData, 0, j);\r\n      }\r\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\r\n      // RGB, 24-bits per pixel.\r\n      const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\r\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\r\n      elemsInThisChunk = width * thisChunkHeight;\r\n\r\n      for (i = 0; i < totalChunks; i++) {\r\n        if (i >= fullChunks) {\r\n          thisChunkHeight = partialChunkHeight;\r\n          elemsInThisChunk = width * thisChunkHeight;\r\n        }\r\n\r\n        destPos = 0;\r\n\r\n        for (j = elemsInThisChunk; j--;) {\r\n          dest[destPos++] = src[srcPos++];\r\n          dest[destPos++] = src[srcPos++];\r\n          dest[destPos++] = src[srcPos++];\r\n          dest[destPos++] = 255;\r\n        }\r\n\r\n        if (hasTransferMaps) {\r\n          for (let k = 0; k < destPos; k += 4) {\r\n            if (transferMapRed) {\r\n              dest[k + 0] = transferMapRed[dest[k + 0]];\r\n            }\r\n\r\n            if (transferMapGreen) {\r\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\r\n            }\r\n\r\n            if (transferMapBlue) {\r\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\r\n            }\r\n          }\r\n        }\r\n\r\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\r\n      }\r\n    } else {\r\n      throw new Error(`bad image kind: ${imgData.kind}`);\r\n    }\r\n  }\r\n\r\n  function putBinaryImageMask(ctx, imgData) {\r\n    const height = imgData.height,\r\n          width = imgData.width;\r\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\r\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\r\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\r\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\r\n    let srcPos = 0;\r\n    const src = imgData.data;\r\n    const dest = chunkImgData.data;\r\n\r\n    for (let i = 0; i < totalChunks; i++) {\r\n      const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight; // Expand the mask so it can be used by the canvas.  Any required\r\n      // inversion has already been handled.\r\n\r\n      let destPos = 3; // alpha component offset\r\n\r\n      for (let j = 0; j < thisChunkHeight; j++) {\r\n        let elem,\r\n            mask = 0;\r\n\r\n        for (let k = 0; k < width; k++) {\r\n          if (!mask) {\r\n            elem = src[srcPos++];\r\n            mask = 128;\r\n          }\r\n\r\n          dest[destPos] = elem & mask ? 0 : 255;\r\n          destPos += 4;\r\n          mask >>= 1;\r\n        }\r\n      }\r\n\r\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\r\n    }\r\n  }\r\n\r\n  function copyCtxState(sourceCtx, destCtx) {\r\n    const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\r\n\r\n    for (let i = 0, ii = properties.length; i < ii; i++) {\r\n      const property = properties[i];\r\n\r\n      if (sourceCtx[property] !== undefined) {\r\n        destCtx[property] = sourceCtx[property];\r\n      }\r\n    }\r\n\r\n    if (sourceCtx.setLineDash !== undefined) {\r\n      destCtx.setLineDash(sourceCtx.getLineDash());\r\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\r\n    }\r\n  }\r\n\r\n  function resetCtxToDefault(ctx) {\r\n    ctx.strokeStyle = \"#000000\";\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.fillRule = \"nonzero\";\r\n    ctx.globalAlpha = 1;\r\n    ctx.lineWidth = 1;\r\n    ctx.lineCap = \"butt\";\r\n    ctx.lineJoin = \"miter\";\r\n    ctx.miterLimit = 10;\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n    ctx.font = \"10px sans-serif\";\r\n\r\n    if (ctx.setLineDash !== undefined) {\r\n      ctx.setLineDash([]);\r\n      ctx.lineDashOffset = 0;\r\n    }\r\n  }\r\n\r\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\r\n    const length = bytes.length;\r\n\r\n    for (let i = 3; i < length; i += 4) {\r\n      const alpha = bytes[i];\r\n\r\n      if (alpha === 0) {\r\n        bytes[i - 3] = r0;\r\n        bytes[i - 2] = g0;\r\n        bytes[i - 1] = b0;\r\n      } else if (alpha < 255) {\r\n        const alpha_ = 255 - alpha;\r\n        bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\r\n        bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\r\n        bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\r\n      }\r\n    }\r\n  }\r\n\r\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\r\n    const length = maskData.length;\r\n    const scale = 1 / 255;\r\n\r\n    for (let i = 3; i < length; i += 4) {\r\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\r\n      layerData[i] = layerData[i] * alpha * scale | 0;\r\n    }\r\n  }\r\n\r\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\r\n    const length = maskData.length;\r\n\r\n    for (let i = 3; i < length; i += 4) {\r\n      const y = maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\r\n      maskData[i - 2] * 152 + // * 0.59 ....\r\n      maskData[i - 1] * 28; // * 0.11 ....\r\n\r\n      layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\r\n    }\r\n  }\r\n\r\n  function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\r\n    const hasBackdrop = !!backdrop;\r\n    const r0 = hasBackdrop ? backdrop[0] : 0;\r\n    const g0 = hasBackdrop ? backdrop[1] : 0;\r\n    const b0 = hasBackdrop ? backdrop[2] : 0;\r\n    let composeFn;\r\n\r\n    if (subtype === \"Luminosity\") {\r\n      composeFn = composeSMaskLuminosity;\r\n    } else {\r\n      composeFn = composeSMaskAlpha;\r\n    } // processing image in chunks to save memory\r\n\r\n\r\n    const PIXELS_TO_PROCESS = 1048576;\r\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\r\n\r\n    for (let row = 0; row < height; row += chunkSize) {\r\n      const chunkHeight = Math.min(chunkSize, height - row);\r\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\r\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\r\n\r\n      if (hasBackdrop) {\r\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\r\n      }\r\n\r\n      composeFn(maskData.data, layerData.data, transferMap);\r\n      maskCtx.putImageData(layerData, 0, row);\r\n    }\r\n  }\r\n\r\n  function composeSMask(ctx, smask, layerCtx) {\r\n    const mask = smask.canvas;\r\n    const maskCtx = smask.context;\r\n    ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\r\n    genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, smask.backdrop, smask.transferMap);\r\n    ctx.drawImage(mask, 0, 0);\r\n  }\r\n\r\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\r\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\r\n  const NORMAL_CLIP = {};\r\n  const EO_CLIP = {}; // eslint-disable-next-line no-shadow\r\n\r\n  class CanvasGraphics {\r\n    constructor(canvasCtx, commonObjs, objs, canvasFactory, imageLayer, optionalContentConfig) {\r\n      this.ctx = canvasCtx;\r\n      this.current = new CanvasExtraState();\r\n      this.stateStack = [];\r\n      this.pendingClip = null;\r\n      this.pendingEOFill = false;\r\n      this.res = null;\r\n      this.xobjs = null;\r\n      this.commonObjs = commonObjs;\r\n      this.objs = objs;\r\n      this.canvasFactory = canvasFactory;\r\n      this.imageLayer = imageLayer;\r\n      this.groupStack = [];\r\n      this.processingType3 = null; // Patterns are painted relative to the initial page/form transform, see\r\n      // PDF spec 8.7.2 NOTE 1.\r\n\r\n      this.baseTransform = null;\r\n      this.baseTransformStack = [];\r\n      this.groupLevel = 0;\r\n      this.smaskStack = [];\r\n      this.smaskCounter = 0;\r\n      this.tempSMask = null;\r\n      this.contentVisible = true;\r\n      this.markedContentStack = [];\r\n      this.optionalContentConfig = optionalContentConfig;\r\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\r\n      this.cachedPatterns = new Map();\r\n\r\n      if (canvasCtx) {\r\n        // NOTE: if mozCurrentTransform is polyfilled, then the current state of\r\n        // the transformation must already be set in canvasCtx._transformMatrix.\r\n        addContextCurrentTransform(canvasCtx);\r\n      }\r\n\r\n      this._cachedGetSinglePixelWidth = null;\r\n    }\r\n\r\n    beginDrawing({\r\n      transform,\r\n      viewport,\r\n      transparency = false,\r\n      background = null\r\n    }) {\r\n      // For pdfs that use blend modes we have to clear the canvas else certain\r\n      // blend modes can look wrong since we'd be blending with a white\r\n      // backdrop. The problem with a transparent backdrop though is we then\r\n      // don't get sub pixel anti aliasing on text, creating temporary\r\n      // transparent canvas when we have blend modes.\r\n      const width = this.ctx.canvas.width;\r\n      const height = this.ctx.canvas.height;\r\n      this.ctx.save();\r\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\r\n      this.ctx.fillRect(0, 0, width, height);\r\n      this.ctx.restore();\r\n\r\n      if (transparency) {\r\n        const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\r\n        this.compositeCtx = this.ctx;\r\n        this.transparentCanvas = transparentCanvas.canvas;\r\n        this.ctx = transparentCanvas.context;\r\n        this.ctx.save(); // The transform can be applied before rendering, transferring it to\r\n        // the new canvas.\r\n\r\n        this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\r\n      }\r\n\r\n      this.ctx.save();\r\n      resetCtxToDefault(this.ctx);\r\n\r\n      if (transform) {\r\n        this.ctx.transform.apply(this.ctx, transform);\r\n      }\r\n\r\n      this.ctx.transform.apply(this.ctx, viewport.transform);\r\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\r\n      this._combinedScaleFactor = Math.hypot(this.baseTransform[0], this.baseTransform[2]);\r\n\r\n      if (this.imageLayer) {\r\n        this.imageLayer.beginLayout();\r\n      }\r\n    }\r\n\r\n    executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\r\n      const argsArray = operatorList.argsArray;\r\n      const fnArray = operatorList.fnArray;\r\n      let i = executionStartIdx || 0;\r\n      const argsArrayLen = argsArray.length; // Sometimes the OperatorList to execute is empty.\r\n\r\n      if (argsArrayLen === i) {\r\n        return i;\r\n      }\r\n\r\n      const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\r\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\r\n      let steps = 0;\r\n      const commonObjs = this.commonObjs;\r\n      const objs = this.objs;\r\n      let fnId;\r\n\r\n      while (true) {\r\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\r\n          stepper.breakIt(i, continueCallback);\r\n          return i;\r\n        }\r\n\r\n        fnId = fnArray[i];\r\n\r\n        if (fnId !== OPS.dependency) {\r\n          this[fnId].apply(this, argsArray[i]);\r\n        } else {\r\n          for (const depObjId of argsArray[i]) {\r\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs; // If the promise isn't resolved yet, add the continueCallback\r\n            // to the promise and bail out.\r\n\r\n            if (!objsPool.has(depObjId)) {\r\n              objsPool.get(depObjId, continueCallback);\r\n              return i;\r\n            }\r\n          }\r\n        }\r\n\r\n        i++; // If the entire operatorList was executed, stop as were done.\r\n\r\n        if (i === argsArrayLen) {\r\n          return i;\r\n        } // If the execution took longer then a certain amount of time and\r\n        // `continueCallback` is specified, interrupt the execution.\r\n\r\n\r\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\r\n          if (Date.now() > endTime) {\r\n            continueCallback();\r\n            return i;\r\n          }\r\n\r\n          steps = 0;\r\n        } // If the operatorList isn't executed completely yet OR the execution\r\n        // time was short enough, do another execution round.\r\n\r\n      }\r\n    }\r\n\r\n    endDrawing() {\r\n      // Finishing all opened operations such as SMask group painting.\r\n      while (this.stateStack.length || this.current.activeSMask !== null) {\r\n        this.restore();\r\n      }\r\n\r\n      this.ctx.restore();\r\n\r\n      if (this.transparentCanvas) {\r\n        this.ctx = this.compositeCtx;\r\n        this.ctx.save();\r\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\r\n\r\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\r\n        this.ctx.restore();\r\n        this.transparentCanvas = null;\r\n      }\r\n\r\n      this.cachedCanvases.clear();\r\n      this.cachedPatterns.clear();\r\n\r\n      if (this.imageLayer) {\r\n        this.imageLayer.endLayout();\r\n      }\r\n    }\r\n\r\n    _scaleImage(img, inverseTransform) {\r\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\r\n      // pixels during drawImage operation, painting on the temporary canvas(es)\r\n      // that are twice smaller in size.\r\n      const width = img.width;\r\n      const height = img.height;\r\n      let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\r\n      let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\r\n      let paintWidth = width,\r\n          paintHeight = height;\r\n      let tmpCanvasId = \"prescale1\";\r\n      let tmpCanvas, tmpCtx;\r\n\r\n      while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\r\n        let newWidth = paintWidth,\r\n            newHeight = paintHeight;\r\n\r\n        if (widthScale > 2 && paintWidth > 1) {\r\n          newWidth = Math.ceil(paintWidth / 2);\r\n          widthScale /= paintWidth / newWidth;\r\n        }\r\n\r\n        if (heightScale > 2 && paintHeight > 1) {\r\n          newHeight = Math.ceil(paintHeight / 2);\r\n          heightScale /= paintHeight / newHeight;\r\n        }\r\n\r\n        tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\r\n        tmpCtx = tmpCanvas.context;\r\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\r\n        tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\r\n        img = tmpCanvas.canvas;\r\n        paintWidth = newWidth;\r\n        paintHeight = newHeight;\r\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\r\n      }\r\n\r\n      return {\r\n        img,\r\n        paintWidth,\r\n        paintHeight\r\n      };\r\n    }\r\n\r\n    _createMaskCanvas(img) {\r\n      const ctx = this.ctx;\r\n      const width = img.width,\r\n            height = img.height;\r\n      const fillColor = this.current.fillColor;\r\n      const isPatternFill = this.current.patternFill;\r\n      const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\r\n      const maskCtx = maskCanvas.context;\r\n      putBinaryImageMask(maskCtx, img); // Create the mask canvas at the size it will be drawn at and also set\r\n      // its transform to match the current transform so if there are any\r\n      // patterns applied they will be applied relative to the correct\r\n      // transform.\r\n\r\n      const objToCanvas = ctx.mozCurrentTransform;\r\n      let maskToCanvas = Util.transform(objToCanvas, [1 / width, 0, 0, -1 / height, 0, 0]);\r\n      maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\r\n      const cord1 = Util.applyTransform([0, 0], maskToCanvas);\r\n      const cord2 = Util.applyTransform([width, height], maskToCanvas);\r\n      const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\r\n      const drawnWidth = Math.ceil(rect[2] - rect[0]);\r\n      const drawnHeight = Math.ceil(rect[3] - rect[1]);\r\n      const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight, true);\r\n      const fillCtx = fillCanvas.context; // The offset will be the top-left cordinate mask.\r\n\r\n      const offsetX = Math.min(cord1[0], cord2[0]);\r\n      const offsetY = Math.min(cord1[1], cord2[1]);\r\n      fillCtx.translate(-offsetX, -offsetY);\r\n      fillCtx.transform.apply(fillCtx, maskToCanvas); // Pre-scale if needed to improve image smoothing.\r\n\r\n      const scaled = this._scaleImage(maskCanvas.canvas, fillCtx.mozCurrentTransformInverse);\r\n\r\n      fillCtx.drawImage(scaled.img, 0, 0, scaled.img.width, scaled.img.height, 0, 0, width, height);\r\n      fillCtx.globalCompositeOperation = \"source-in\";\r\n      const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [1, 0, 0, 1, -offsetX, -offsetY]);\r\n      fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, false) : fillColor;\r\n      fillCtx.fillRect(0, 0, width, height); // Round the offsets to avoid drawing fractional pixels.\r\n\r\n      return {\r\n        canvas: fillCanvas.canvas,\r\n        offsetX: Math.round(offsetX),\r\n        offsetY: Math.round(offsetY)\r\n      };\r\n    } // Graphics state\r\n\r\n\r\n    setLineWidth(width) {\r\n      this.current.lineWidth = width;\r\n      this.ctx.lineWidth = width;\r\n    }\r\n\r\n    setLineCap(style) {\r\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\r\n    }\r\n\r\n    setLineJoin(style) {\r\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\r\n    }\r\n\r\n    setMiterLimit(limit) {\r\n      this.ctx.miterLimit = limit;\r\n    }\r\n\r\n    setDash(dashArray, dashPhase) {\r\n      const ctx = this.ctx;\r\n\r\n      if (ctx.setLineDash !== undefined) {\r\n        ctx.setLineDash(dashArray);\r\n        ctx.lineDashOffset = dashPhase;\r\n      }\r\n    }\r\n\r\n    setRenderingIntent(intent) {// This operation is ignored since we haven't found a use case for it yet.\r\n    }\r\n\r\n    setFlatness(flatness) {// This operation is ignored since we haven't found a use case for it yet.\r\n    }\r\n\r\n    setGState(states) {\r\n      for (let i = 0, ii = states.length; i < ii; i++) {\r\n        const state = states[i];\r\n        const key = state[0];\r\n        const value = state[1];\r\n\r\n        switch (key) {\r\n          case \"LW\":\r\n            this.setLineWidth(value);\r\n            break;\r\n\r\n          case \"LC\":\r\n            this.setLineCap(value);\r\n            break;\r\n\r\n          case \"LJ\":\r\n            this.setLineJoin(value);\r\n            break;\r\n\r\n          case \"ML\":\r\n            this.setMiterLimit(value);\r\n            break;\r\n\r\n          case \"D\":\r\n            this.setDash(value[0], value[1]);\r\n            break;\r\n\r\n          case \"RI\":\r\n            this.setRenderingIntent(value);\r\n            break;\r\n\r\n          case \"FL\":\r\n            this.setFlatness(value);\r\n            break;\r\n\r\n          case \"Font\":\r\n            this.setFont(value[0], value[1]);\r\n            break;\r\n\r\n          case \"CA\":\r\n            this.current.strokeAlpha = state[1];\r\n            break;\r\n\r\n          case \"ca\":\r\n            this.current.fillAlpha = state[1];\r\n            this.ctx.globalAlpha = state[1];\r\n            break;\r\n\r\n          case \"BM\":\r\n            this.ctx.globalCompositeOperation = value;\r\n            break;\r\n\r\n          case \"SMask\":\r\n            if (this.current.activeSMask) {\r\n              // If SMask is currrenly used, it needs to be suspended or\r\n              // finished. Suspend only makes sense when at least one save()\r\n              // was performed and state needs to be reverted on restore().\r\n              if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\r\n                this.suspendSMaskGroup();\r\n              } else {\r\n                this.endSMaskGroup();\r\n              }\r\n            }\r\n\r\n            this.current.activeSMask = value ? this.tempSMask : null;\r\n\r\n            if (this.current.activeSMask) {\r\n              this.beginSMaskGroup();\r\n            }\r\n\r\n            this.tempSMask = null;\r\n            break;\r\n\r\n          case \"TR\":\r\n            this.current.transferMaps = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    beginSMaskGroup() {\r\n      const activeSMask = this.current.activeSMask;\r\n      const drawnWidth = activeSMask.canvas.width;\r\n      const drawnHeight = activeSMask.canvas.height;\r\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\r\n      const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\r\n      const currentCtx = this.ctx;\r\n      const currentTransform = currentCtx.mozCurrentTransform;\r\n      this.ctx.save();\r\n      const groupCtx = scratchCanvas.context;\r\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\r\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\r\n      groupCtx.transform.apply(groupCtx, currentTransform);\r\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\r\n      copyCtxState(currentCtx, groupCtx);\r\n      this.ctx = groupCtx;\r\n      this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\r\n      this.groupStack.push(currentCtx);\r\n      this.groupLevel++;\r\n    }\r\n\r\n    suspendSMaskGroup() {\r\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\r\n      // and future ctx state restored.\r\n      const groupCtx = this.ctx;\r\n      this.groupLevel--;\r\n      this.ctx = this.groupStack.pop();\r\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\r\n      this.ctx.restore();\r\n      this.ctx.save(); // save is needed since SMask will be resumed.\r\n\r\n      copyCtxState(groupCtx, this.ctx); // Saving state for resuming.\r\n\r\n      this.current.resumeSMaskCtx = groupCtx; // Transform was changed in the SMask canvas, reflecting this change on\r\n      // this.ctx.\r\n\r\n      const deltaTransform = Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\r\n      this.ctx.transform.apply(this.ctx, deltaTransform); // SMask was composed, the results at the groupCtx can be cleared.\r\n\r\n      groupCtx.save();\r\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\r\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\r\n      groupCtx.restore();\r\n    }\r\n\r\n    resumeSMaskGroup() {\r\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\r\n      // any groupCtx state since restore() command (the only caller) will do\r\n      // that for us. See also beginSMaskGroup.\r\n      const groupCtx = this.current.resumeSMaskCtx;\r\n      const currentCtx = this.ctx;\r\n      this.ctx = groupCtx;\r\n      this.groupStack.push(currentCtx);\r\n      this.groupLevel++;\r\n    }\r\n\r\n    endSMaskGroup() {\r\n      const groupCtx = this.ctx;\r\n      this.groupLevel--;\r\n      this.ctx = this.groupStack.pop();\r\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\r\n      this.ctx.restore();\r\n      copyCtxState(groupCtx, this.ctx); // Transform was changed in the SMask canvas, reflecting this change on\r\n      // this.ctx.\r\n\r\n      const deltaTransform = Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\r\n      this.ctx.transform.apply(this.ctx, deltaTransform);\r\n    }\r\n\r\n    save() {\r\n      this.ctx.save();\r\n      const old = this.current;\r\n      this.stateStack.push(old);\r\n      this.current = old.clone();\r\n      this.current.resumeSMaskCtx = null;\r\n    }\r\n\r\n    restore() {\r\n      // SMask was suspended, we just need to resume it.\r\n      if (this.current.resumeSMaskCtx) {\r\n        this.resumeSMaskGroup();\r\n      } // SMask has to be finished once there is no states that are using the\r\n      // same SMask.\r\n\r\n\r\n      if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\r\n        this.endSMaskGroup();\r\n      }\r\n\r\n      if (this.stateStack.length !== 0) {\r\n        this.current = this.stateStack.pop();\r\n        this.ctx.restore(); // Ensure that the clipping path is reset (fixes issue6413.pdf).\r\n\r\n        this.pendingClip = null;\r\n        this._cachedGetSinglePixelWidth = null;\r\n      } else {\r\n        // We've finished all the SMask groups, reflect that in our state.\r\n        this.current.activeSMask = null;\r\n      }\r\n    }\r\n\r\n    transform(a, b, c, d, e, f) {\r\n      this.ctx.transform(a, b, c, d, e, f);\r\n      this._cachedGetSinglePixelWidth = null;\r\n    } // Path\r\n\r\n\r\n    constructPath(ops, args) {\r\n      const ctx = this.ctx;\r\n      const current = this.current;\r\n      let x = current.x,\r\n          y = current.y;\r\n\r\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\r\n        switch (ops[i] | 0) {\r\n          case OPS.rectangle:\r\n            x = args[j++];\r\n            y = args[j++];\r\n            const width = args[j++];\r\n            const height = args[j++];\r\n            const xw = x + width;\r\n            const yh = y + height;\r\n            ctx.moveTo(x, y);\r\n\r\n            if (width === 0 || height === 0) {\r\n              ctx.lineTo(xw, yh);\r\n            } else {\r\n              ctx.lineTo(xw, y);\r\n              ctx.lineTo(xw, yh);\r\n              ctx.lineTo(x, yh);\r\n            }\r\n\r\n            ctx.closePath();\r\n            break;\r\n\r\n          case OPS.moveTo:\r\n            x = args[j++];\r\n            y = args[j++];\r\n            ctx.moveTo(x, y);\r\n            break;\r\n\r\n          case OPS.lineTo:\r\n            x = args[j++];\r\n            y = args[j++];\r\n            ctx.lineTo(x, y);\r\n            break;\r\n\r\n          case OPS.curveTo:\r\n            x = args[j + 4];\r\n            y = args[j + 5];\r\n            ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\r\n            j += 6;\r\n            break;\r\n\r\n          case OPS.curveTo2:\r\n            ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\r\n            x = args[j + 2];\r\n            y = args[j + 3];\r\n            j += 4;\r\n            break;\r\n\r\n          case OPS.curveTo3:\r\n            x = args[j + 2];\r\n            y = args[j + 3];\r\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\r\n            j += 4;\r\n            break;\r\n\r\n          case OPS.closePath:\r\n            ctx.closePath();\r\n            break;\r\n        }\r\n      }\r\n\r\n      current.setCurrentPoint(x, y);\r\n    }\r\n\r\n    closePath() {\r\n      this.ctx.closePath();\r\n    }\r\n\r\n    stroke(consumePath) {\r\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\r\n      const ctx = this.ctx;\r\n      const strokeColor = this.current.strokeColor; // For stroke we want to temporarily change the global alpha to the\r\n      // stroking alpha.\r\n\r\n      ctx.globalAlpha = this.current.strokeAlpha;\r\n\r\n      if (this.contentVisible) {\r\n        if (typeof strokeColor === \"object\" && strokeColor !== null && strokeColor !== void 0 && strokeColor.getPattern) {\r\n          const lineWidth = this.getSinglePixelWidth();\r\n          ctx.save();\r\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse); // Prevent drawing too thin lines by enforcing a minimum line width.\r\n\r\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        } else {\r\n          const lineWidth = this.getSinglePixelWidth();\r\n\r\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\r\n            // The current transform will transform a square pixel into a\r\n            // parallelogram where both heights are lower than 1 and not equal.\r\n            ctx.save();\r\n            ctx.resetTransform();\r\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n          } else {\r\n            // Prevent drawing too thin lines by enforcing a minimum line width.\r\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\r\n            ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n\r\n      if (consumePath) {\r\n        this.consumePath();\r\n      } // Restore the global alpha to the fill alpha\r\n\r\n\r\n      ctx.globalAlpha = this.current.fillAlpha;\r\n    }\r\n\r\n    closeStroke() {\r\n      this.closePath();\r\n      this.stroke();\r\n    }\r\n\r\n    fill(consumePath) {\r\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\r\n      const ctx = this.ctx;\r\n      const fillColor = this.current.fillColor;\r\n      const isPatternFill = this.current.patternFill;\r\n      let needRestore = false;\r\n\r\n      if (isPatternFill) {\r\n        ctx.save();\r\n        ctx.fillStyle = fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse);\r\n        needRestore = true;\r\n      }\r\n\r\n      if (this.contentVisible) {\r\n        if (this.pendingEOFill) {\r\n          ctx.fill(\"evenodd\");\r\n          this.pendingEOFill = false;\r\n        } else {\r\n          ctx.fill();\r\n        }\r\n      }\r\n\r\n      if (needRestore) {\r\n        ctx.restore();\r\n      }\r\n\r\n      if (consumePath) {\r\n        this.consumePath();\r\n      }\r\n    }\r\n\r\n    eoFill() {\r\n      this.pendingEOFill = true;\r\n      this.fill();\r\n    }\r\n\r\n    fillStroke() {\r\n      this.fill(false);\r\n      this.stroke(false);\r\n      this.consumePath();\r\n    }\r\n\r\n    eoFillStroke() {\r\n      this.pendingEOFill = true;\r\n      this.fillStroke();\r\n    }\r\n\r\n    closeFillStroke() {\r\n      this.closePath();\r\n      this.fillStroke();\r\n    }\r\n\r\n    closeEOFillStroke() {\r\n      this.pendingEOFill = true;\r\n      this.closePath();\r\n      this.fillStroke();\r\n    }\r\n\r\n    endPath() {\r\n      this.consumePath();\r\n    } // Clipping\r\n\r\n\r\n    clip() {\r\n      this.pendingClip = NORMAL_CLIP;\r\n    }\r\n\r\n    eoClip() {\r\n      this.pendingClip = EO_CLIP;\r\n    } // Text\r\n\r\n\r\n    beginText() {\r\n      this.current.textMatrix = IDENTITY_MATRIX;\r\n      this.current.textMatrixScale = 1;\r\n      this.current.x = this.current.lineX = 0;\r\n      this.current.y = this.current.lineY = 0;\r\n    }\r\n\r\n    endText() {\r\n      const paths = this.pendingTextPaths;\r\n      const ctx = this.ctx;\r\n\r\n      if (paths === undefined) {\r\n        ctx.beginPath();\r\n        return;\r\n      }\r\n\r\n      ctx.save();\r\n      ctx.beginPath();\r\n\r\n      for (let i = 0; i < paths.length; i++) {\r\n        const path = paths[i];\r\n        ctx.setTransform.apply(ctx, path.transform);\r\n        ctx.translate(path.x, path.y);\r\n        path.addToPath(ctx, path.fontSize);\r\n      }\r\n\r\n      ctx.restore();\r\n      ctx.clip();\r\n      ctx.beginPath();\r\n      delete this.pendingTextPaths;\r\n    }\r\n\r\n    setCharSpacing(spacing) {\r\n      this.current.charSpacing = spacing;\r\n    }\r\n\r\n    setWordSpacing(spacing) {\r\n      this.current.wordSpacing = spacing;\r\n    }\r\n\r\n    setHScale(scale) {\r\n      this.current.textHScale = scale / 100;\r\n    }\r\n\r\n    setLeading(leading) {\r\n      this.current.leading = -leading;\r\n    }\r\n\r\n    setFont(fontRefName, size) {\r\n      const fontObj = this.commonObjs.get(fontRefName);\r\n      const current = this.current;\r\n\r\n      if (!fontObj) {\r\n        throw new Error(`Can't find font for ${fontRefName}`);\r\n      }\r\n\r\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX; // A valid matrix needs all main diagonal elements to be non-zero\r\n      // This also ensures we bypass FF bugzilla bug #719844.\r\n\r\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\r\n        warn(\"Invalid font matrix for font \" + fontRefName);\r\n      } // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\r\n      // and in some docs this can be negative (inverted x-y axes).\r\n\r\n\r\n      if (size < 0) {\r\n        size = -size;\r\n        current.fontDirection = -1;\r\n      } else {\r\n        current.fontDirection = 1;\r\n      }\r\n\r\n      this.current.font = fontObj;\r\n      this.current.fontSize = size;\r\n\r\n      if (fontObj.isType3Font) {\r\n        return; // we don't need ctx.font for Type3 fonts\r\n      }\r\n\r\n      const name = fontObj.loadedName || \"sans-serif\";\r\n      let bold = \"normal\";\r\n\r\n      if (fontObj.black) {\r\n        bold = \"900\";\r\n      } else if (fontObj.bold) {\r\n        bold = \"bold\";\r\n      }\r\n\r\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\r\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`; // Some font backends cannot handle fonts below certain size.\r\n      // Keeping the font at minimal size and using the fontSizeScale to change\r\n      // the current transformation matrix before the fillText/strokeText.\r\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\r\n\r\n      let browserFontSize = size;\r\n\r\n      if (size < MIN_FONT_SIZE) {\r\n        browserFontSize = MIN_FONT_SIZE;\r\n      } else if (size > MAX_FONT_SIZE) {\r\n        browserFontSize = MAX_FONT_SIZE;\r\n      }\r\n\r\n      this.current.fontSizeScale = size / browserFontSize;\r\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\r\n    }\r\n\r\n    setTextRenderingMode(mode) {\r\n      this.current.textRenderingMode = mode;\r\n    }\r\n\r\n    setTextRise(rise) {\r\n      this.current.textRise = rise;\r\n    }\r\n\r\n    moveText(x, y) {\r\n      this.current.x = this.current.lineX += x;\r\n      this.current.y = this.current.lineY += y;\r\n    }\r\n\r\n    setLeadingMoveText(x, y) {\r\n      this.setLeading(-y);\r\n      this.moveText(x, y);\r\n    }\r\n\r\n    setTextMatrix(a, b, c, d, e, f) {\r\n      this.current.textMatrix = [a, b, c, d, e, f];\r\n      this.current.textMatrixScale = Math.hypot(a, b);\r\n      this.current.x = this.current.lineX = 0;\r\n      this.current.y = this.current.lineY = 0;\r\n    }\r\n\r\n    nextLine() {\r\n      this.moveText(0, this.current.leading);\r\n    }\r\n\r\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\r\n      const ctx = this.ctx;\r\n      const current = this.current;\r\n      const font = current.font;\r\n      const textRenderingMode = current.textRenderingMode;\r\n      const fontSize = current.fontSize / current.fontSizeScale;\r\n      const fillStrokeMode = textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\r\n      const isAddToPathSet = !!(textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\r\n      const patternFill = current.patternFill && !font.missingFile;\r\n      let addToPath;\r\n\r\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\r\n        addToPath = font.getPathGenerator(this.commonObjs, character);\r\n      }\r\n\r\n      if (font.disableFontFace || patternFill) {\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.beginPath();\r\n        addToPath(ctx, fontSize);\r\n\r\n        if (patternTransform) {\r\n          ctx.setTransform.apply(ctx, patternTransform);\r\n        }\r\n\r\n        if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\r\n          ctx.fill();\r\n        }\r\n\r\n        if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\r\n          if (resetLineWidthToOne) {\r\n            ctx.resetTransform();\r\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\r\n          }\r\n\r\n          ctx.stroke();\r\n        }\r\n\r\n        ctx.restore();\r\n      } else {\r\n        if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\r\n          ctx.fillText(character, x, y);\r\n        }\r\n\r\n        if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\r\n          if (resetLineWidthToOne) {\r\n            ctx.save();\r\n            ctx.moveTo(x, y);\r\n            ctx.resetTransform();\r\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\r\n            ctx.strokeText(character, 0, 0);\r\n            ctx.restore();\r\n          } else {\r\n            ctx.strokeText(character, x, y);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (isAddToPathSet) {\r\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\r\n        paths.push({\r\n          transform: ctx.mozCurrentTransform,\r\n          x,\r\n          y,\r\n          fontSize,\r\n          addToPath\r\n        });\r\n      }\r\n    }\r\n\r\n    get isFontSubpixelAAEnabled() {\r\n      // Checks if anti-aliasing is enabled when scaled text is painted.\r\n      // On Windows GDI scaled fonts looks bad.\r\n      const {\r\n        context: ctx\r\n      } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\r\n      ctx.scale(1.5, 1);\r\n      ctx.fillText(\"I\", 0, 10);\r\n      const data = ctx.getImageData(0, 0, 10, 10).data;\r\n      let enabled = false;\r\n\r\n      for (let i = 3; i < data.length; i += 4) {\r\n        if (data[i] > 0 && data[i] < 255) {\r\n          enabled = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\r\n    }\r\n\r\n    showText(glyphs) {\r\n      const current = this.current;\r\n      const font = current.font;\r\n\r\n      if (font.isType3Font) {\r\n        return this.showType3Text(glyphs);\r\n      }\r\n\r\n      const fontSize = current.fontSize;\r\n\r\n      if (fontSize === 0) {\r\n        return undefined;\r\n      }\r\n\r\n      const ctx = this.ctx;\r\n      const fontSizeScale = current.fontSizeScale;\r\n      const charSpacing = current.charSpacing;\r\n      const wordSpacing = current.wordSpacing;\r\n      const fontDirection = current.fontDirection;\r\n      const textHScale = current.textHScale * fontDirection;\r\n      const glyphsLength = glyphs.length;\r\n      const vertical = font.vertical;\r\n      const spacingDir = vertical ? 1 : -1;\r\n      const defaultVMetrics = font.defaultVMetrics;\r\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\r\n      const simpleFillText = current.textRenderingMode === TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\r\n      ctx.save();\r\n      let patternTransform;\r\n\r\n      if (current.patternFill) {\r\n        // TODO: Patterns are not applied correctly to text if a non-embedded\r\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\r\n        ctx.save();\r\n        const pattern = current.fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse);\r\n        patternTransform = ctx.mozCurrentTransform;\r\n        ctx.restore();\r\n        ctx.fillStyle = pattern;\r\n      }\r\n\r\n      ctx.transform.apply(ctx, current.textMatrix);\r\n      ctx.translate(current.x, current.y + current.textRise);\r\n\r\n      if (fontDirection > 0) {\r\n        ctx.scale(textHScale, -1);\r\n      } else {\r\n        ctx.scale(textHScale, 1);\r\n      }\r\n\r\n      let lineWidth = current.lineWidth;\r\n      let resetLineWidthToOne = false;\r\n      const scale = current.textMatrixScale;\r\n\r\n      if (scale === 0 || lineWidth === 0) {\r\n        const fillStrokeMode = current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\r\n\r\n        if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\r\n          this._cachedGetSinglePixelWidth = null;\r\n          lineWidth = this.getSinglePixelWidth();\r\n          resetLineWidthToOne = lineWidth < 0;\r\n        }\r\n      } else {\r\n        lineWidth /= scale;\r\n      }\r\n\r\n      if (fontSizeScale !== 1.0) {\r\n        ctx.scale(fontSizeScale, fontSizeScale);\r\n        lineWidth /= fontSizeScale;\r\n      }\r\n\r\n      ctx.lineWidth = lineWidth;\r\n      let x = 0,\r\n          i;\r\n\r\n      for (i = 0; i < glyphsLength; ++i) {\r\n        const glyph = glyphs[i];\r\n\r\n        if (isNum(glyph)) {\r\n          x += spacingDir * glyph * fontSize / 1000;\r\n          continue;\r\n        }\r\n\r\n        let restoreNeeded = false;\r\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\r\n        const character = glyph.fontChar;\r\n        const accent = glyph.accent;\r\n        let scaledX, scaledY;\r\n        let width = glyph.width;\r\n\r\n        if (vertical) {\r\n          const vmetric = glyph.vmetric || defaultVMetrics;\r\n          const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\r\n          const vy = vmetric[2] * widthAdvanceScale;\r\n          width = vmetric ? -vmetric[0] : width;\r\n          scaledX = vx / fontSizeScale;\r\n          scaledY = (x + vy) / fontSizeScale;\r\n        } else {\r\n          scaledX = x / fontSizeScale;\r\n          scaledY = 0;\r\n        }\r\n\r\n        if (font.remeasure && width > 0) {\r\n          // Some standard fonts may not have the exact width: rescale per\r\n          // character if measured width is greater than expected glyph width\r\n          // and subpixel-aa is enabled, otherwise just center the glyph.\r\n          const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\r\n\r\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\r\n            const characterScaleX = width / measuredWidth;\r\n            restoreNeeded = true;\r\n            ctx.save();\r\n            ctx.scale(characterScaleX, 1);\r\n            scaledX /= characterScaleX;\r\n          } else if (width !== measuredWidth) {\r\n            scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\r\n          }\r\n        } // Only attempt to draw the glyph if it is actually in the embedded font\r\n        // file or if there isn't a font file so the fallback font is shown.\r\n\r\n\r\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\r\n          if (simpleFillText && !accent) {\r\n            // common case\r\n            ctx.fillText(character, scaledX, scaledY);\r\n          } else {\r\n            this.paintChar(character, scaledX, scaledY, patternTransform, resetLineWidthToOne);\r\n\r\n            if (accent) {\r\n              const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\r\n              const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\r\n              this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform, resetLineWidthToOne);\r\n            }\r\n          }\r\n        }\r\n\r\n        let charWidth;\r\n\r\n        if (vertical) {\r\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\r\n        } else {\r\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\r\n        }\r\n\r\n        x += charWidth;\r\n\r\n        if (restoreNeeded) {\r\n          ctx.restore();\r\n        }\r\n      }\r\n\r\n      if (vertical) {\r\n        current.y -= x;\r\n      } else {\r\n        current.x += x * textHScale;\r\n      }\r\n\r\n      ctx.restore();\r\n      return undefined;\r\n    }\r\n\r\n    showType3Text(glyphs) {\r\n      // Type3 fonts - each glyph is a \"mini-PDF\"\r\n      const ctx = this.ctx;\r\n      const current = this.current;\r\n      const font = current.font;\r\n      const fontSize = current.fontSize;\r\n      const fontDirection = current.fontDirection;\r\n      const spacingDir = font.vertical ? 1 : -1;\r\n      const charSpacing = current.charSpacing;\r\n      const wordSpacing = current.wordSpacing;\r\n      const textHScale = current.textHScale * fontDirection;\r\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\r\n      const glyphsLength = glyphs.length;\r\n      const isTextInvisible = current.textRenderingMode === TextRenderingMode.INVISIBLE;\r\n      let i, glyph, width, spacingLength;\r\n\r\n      if (isTextInvisible || fontSize === 0) {\r\n        return;\r\n      }\r\n\r\n      this._cachedGetSinglePixelWidth = null;\r\n      ctx.save();\r\n      ctx.transform.apply(ctx, current.textMatrix);\r\n      ctx.translate(current.x, current.y);\r\n      ctx.scale(textHScale, fontDirection);\r\n\r\n      for (i = 0; i < glyphsLength; ++i) {\r\n        glyph = glyphs[i];\r\n\r\n        if (isNum(glyph)) {\r\n          spacingLength = spacingDir * glyph * fontSize / 1000;\r\n          this.ctx.translate(spacingLength, 0);\r\n          current.x += spacingLength * textHScale;\r\n          continue;\r\n        }\r\n\r\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\r\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\r\n\r\n        if (!operatorList) {\r\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\r\n          continue;\r\n        }\r\n\r\n        if (this.contentVisible) {\r\n          this.processingType3 = glyph;\r\n          this.save();\r\n          ctx.scale(fontSize, fontSize);\r\n          ctx.transform.apply(ctx, fontMatrix);\r\n          this.executeOperatorList(operatorList);\r\n          this.restore();\r\n        }\r\n\r\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\r\n        width = transformed[0] * fontSize + spacing;\r\n        ctx.translate(width, 0);\r\n        current.x += width * textHScale;\r\n      }\r\n\r\n      ctx.restore();\r\n      this.processingType3 = null;\r\n    } // Type3 fonts\r\n\r\n\r\n    setCharWidth(xWidth, yWidth) {// We can safely ignore this since the width should be the same\r\n      // as the width in the Widths array.\r\n    }\r\n\r\n    setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\r\n      // TODO According to the spec we're also suppose to ignore any operators\r\n      // that set color or include images while processing this type3 font.\r\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\r\n      this.clip();\r\n      this.endPath();\r\n    } // Color\r\n\r\n\r\n    getColorN_Pattern(IR) {\r\n      let pattern;\r\n\r\n      if (IR[0] === \"TilingPattern\") {\r\n        const color = IR[1];\r\n        const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\r\n        const canvasGraphicsFactory = {\r\n          createCanvasGraphics: ctx => {\r\n            return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory);\r\n          }\r\n        };\r\n        pattern = new TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\r\n      } else {\r\n        pattern = this._getPattern(IR[1]);\r\n      }\r\n\r\n      return pattern;\r\n    }\r\n\r\n    setStrokeColorN() {\r\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\r\n    }\r\n\r\n    setFillColorN() {\r\n      this.current.fillColor = this.getColorN_Pattern(arguments);\r\n      this.current.patternFill = true;\r\n    }\r\n\r\n    setStrokeRGBColor(r, g, b) {\r\n      const color = Util.makeHexColor(r, g, b);\r\n      this.ctx.strokeStyle = color;\r\n      this.current.strokeColor = color;\r\n    }\r\n\r\n    setFillRGBColor(r, g, b) {\r\n      const color = Util.makeHexColor(r, g, b);\r\n      this.ctx.fillStyle = color;\r\n      this.current.fillColor = color;\r\n      this.current.patternFill = false;\r\n    }\r\n\r\n    _getPattern(objId) {\r\n      if (this.cachedPatterns.has(objId)) {\r\n        return this.cachedPatterns.get(objId);\r\n      }\r\n\r\n      const pattern = getShadingPattern(this.objs.get(objId));\r\n      this.cachedPatterns.set(objId, pattern);\r\n      return pattern;\r\n    }\r\n\r\n    shadingFill(objId) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const ctx = this.ctx;\r\n      this.save();\r\n\r\n      const pattern = this._getPattern(objId);\r\n\r\n      ctx.fillStyle = pattern.getPattern(ctx, this, ctx.mozCurrentTransformInverse, true);\r\n      const inv = ctx.mozCurrentTransformInverse;\r\n\r\n      if (inv) {\r\n        const canvas = ctx.canvas;\r\n        const width = canvas.width;\r\n        const height = canvas.height;\r\n        const bl = Util.applyTransform([0, 0], inv);\r\n        const br = Util.applyTransform([0, height], inv);\r\n        const ul = Util.applyTransform([width, 0], inv);\r\n        const ur = Util.applyTransform([width, height], inv);\r\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\r\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\r\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\r\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\r\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\r\n      } else {\r\n        // HACK to draw the gradient onto an infinite rectangle.\r\n        // PDF gradients are drawn across the entire image while\r\n        // Canvas only allows gradients to be drawn in a rectangle\r\n        // The following bug should allow us to remove this.\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\r\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\r\n      }\r\n\r\n      this.restore();\r\n    } // Images\r\n\r\n\r\n    beginInlineImage() {\r\n      unreachable(\"Should not call beginInlineImage\");\r\n    }\r\n\r\n    beginImageData() {\r\n      unreachable(\"Should not call beginImageData\");\r\n    }\r\n\r\n    paintFormXObjectBegin(matrix, bbox) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      this.save();\r\n      this.baseTransformStack.push(this.baseTransform);\r\n\r\n      if (Array.isArray(matrix) && matrix.length === 6) {\r\n        this.transform.apply(this, matrix);\r\n      }\r\n\r\n      this.baseTransform = this.ctx.mozCurrentTransform;\r\n\r\n      if (bbox) {\r\n        const width = bbox[2] - bbox[0];\r\n        const height = bbox[3] - bbox[1];\r\n        this.ctx.rect(bbox[0], bbox[1], width, height);\r\n        this.clip();\r\n        this.endPath();\r\n      }\r\n    }\r\n\r\n    paintFormXObjectEnd() {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      this.restore();\r\n      this.baseTransform = this.baseTransformStack.pop();\r\n    }\r\n\r\n    beginGroup(group) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      this.save();\r\n      const currentCtx = this.ctx; // TODO non-isolated groups - according to Rik at adobe non-isolated\r\n      // group results aren't usually that different and they even have tools\r\n      // that ignore this setting. Notes from Rik on implementing:\r\n      // - When you encounter an transparency group, create a new canvas with\r\n      // the dimensions of the bbox\r\n      // - copy the content from the previous canvas to the new canvas\r\n      // - draw as usual\r\n      // - remove the backdrop alpha:\r\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\r\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\r\n      // backdrop\r\n      // - remove background color:\r\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\r\n\r\n      if (!group.isolated) {\r\n        info(\"TODO: Support non-isolated groups.\");\r\n      } // TODO knockout - supposedly possible with the clever use of compositing\r\n      // modes.\r\n\r\n\r\n      if (group.knockout) {\r\n        warn(\"Knockout groups not supported.\");\r\n      }\r\n\r\n      const currentTransform = currentCtx.mozCurrentTransform;\r\n\r\n      if (group.matrix) {\r\n        currentCtx.transform.apply(currentCtx, group.matrix);\r\n      }\r\n\r\n      if (!group.bbox) {\r\n        throw new Error(\"Bounding box is required.\");\r\n      } // Based on the current transform figure out how big the bounding box\r\n      // will actually be.\r\n\r\n\r\n      let bounds = Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform); // Clip the bounding box to the current canvas.\r\n\r\n      const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\r\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0]; // Use ceil in case we're between sizes so we don't create canvas that is\r\n      // too small and make the canvas at least 1x1 pixels.\r\n\r\n      const offsetX = Math.floor(bounds[0]);\r\n      const offsetY = Math.floor(bounds[1]);\r\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\r\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\r\n      let scaleX = 1,\r\n          scaleY = 1;\r\n\r\n      if (drawnWidth > MAX_GROUP_SIZE) {\r\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\r\n        drawnWidth = MAX_GROUP_SIZE;\r\n      }\r\n\r\n      if (drawnHeight > MAX_GROUP_SIZE) {\r\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\r\n        drawnHeight = MAX_GROUP_SIZE;\r\n      }\r\n\r\n      let cacheId = \"groupAt\" + this.groupLevel;\r\n\r\n      if (group.smask) {\r\n        // Using two cache entries is case if masks are used one after another.\r\n        cacheId += \"_smask_\" + this.smaskCounter++ % 2;\r\n      }\r\n\r\n      const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\r\n      const groupCtx = scratchCanvas.context; // Since we created a new canvas that is just the size of the bounding box\r\n      // we have to translate the group ctx.\r\n\r\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\r\n      groupCtx.translate(-offsetX, -offsetY);\r\n      groupCtx.transform.apply(groupCtx, currentTransform);\r\n\r\n      if (group.smask) {\r\n        // Saving state and cached mask to be used in setGState.\r\n        this.smaskStack.push({\r\n          canvas: scratchCanvas.canvas,\r\n          context: groupCtx,\r\n          offsetX,\r\n          offsetY,\r\n          scaleX,\r\n          scaleY,\r\n          subtype: group.smask.subtype,\r\n          backdrop: group.smask.backdrop,\r\n          transferMap: group.smask.transferMap || null,\r\n          startTransformInverse: null // used during suspend operation\r\n\r\n        });\r\n      } else {\r\n        // Setup the current ctx so when the group is popped we draw it at the\r\n        // right location.\r\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\r\n        currentCtx.translate(offsetX, offsetY);\r\n        currentCtx.scale(scaleX, scaleY);\r\n      } // The transparency group inherits all off the current graphics state\r\n      // except the blend mode, soft mask, and alpha constants.\r\n\r\n\r\n      copyCtxState(currentCtx, groupCtx);\r\n      this.ctx = groupCtx;\r\n      this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\r\n      this.groupStack.push(currentCtx);\r\n      this.groupLevel++; // Resetting mask state, masks will be applied on restore of the group.\r\n\r\n      this.current.activeSMask = null;\r\n    }\r\n\r\n    endGroup(group) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      this.groupLevel--;\r\n      const groupCtx = this.ctx;\r\n      this.ctx = this.groupStack.pop(); // Turn off image smoothing to avoid sub pixel interpolation which can\r\n      // look kind of blurry for some pdfs.\r\n\r\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\r\n        this.ctx.imageSmoothingEnabled = false;\r\n      } else {\r\n        this.ctx.mozImageSmoothingEnabled = false;\r\n      }\r\n\r\n      if (group.smask) {\r\n        this.tempSMask = this.smaskStack.pop();\r\n      } else {\r\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\r\n      }\r\n\r\n      this.restore();\r\n    }\r\n\r\n    beginAnnotations() {\r\n      this.save();\r\n\r\n      if (this.baseTransform) {\r\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\r\n      }\r\n    }\r\n\r\n    endAnnotations() {\r\n      this.restore();\r\n    }\r\n\r\n    beginAnnotation(id, rect, transform, matrix) {\r\n      this.save();\r\n      resetCtxToDefault(this.ctx);\r\n      this.current = new CanvasExtraState();\r\n\r\n      if (Array.isArray(rect) && rect.length === 4) {\r\n        const width = rect[2] - rect[0];\r\n        const height = rect[3] - rect[1];\r\n        this.ctx.rect(rect[0], rect[1], width, height);\r\n        this.clip();\r\n        this.endPath();\r\n      }\r\n\r\n      this.transform.apply(this, transform);\r\n      this.transform.apply(this, matrix);\r\n    }\r\n\r\n    endAnnotation() {\r\n      this.restore();\r\n    }\r\n\r\n    paintImageMaskXObject(img) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const ctx = this.ctx;\r\n      const width = img.width,\r\n            height = img.height;\r\n      const glyph = this.processingType3;\r\n\r\n      if (glyph && glyph.compiled === undefined) {\r\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\r\n          glyph.compiled = compileType3Glyph({\r\n            data: img.data,\r\n            width,\r\n            height\r\n          });\r\n        } else {\r\n          glyph.compiled = null;\r\n        }\r\n      }\r\n\r\n      if (glyph !== null && glyph !== void 0 && glyph.compiled) {\r\n        glyph.compiled(ctx);\r\n        return;\r\n      }\r\n\r\n      const mask = this._createMaskCanvas(img);\r\n\r\n      const maskCanvas = mask.canvas;\r\n      ctx.save(); // The mask is drawn with the transform applied. Reset the current\r\n      // transform to draw to the identity.\r\n\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\r\n      ctx.restore();\r\n    }\r\n\r\n    paintImageMaskXObjectRepeat(imgData, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      const currentTransform = ctx.mozCurrentTransform;\r\n      ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\r\n\r\n      const mask = this._createMaskCanvas(imgData);\r\n\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\r\n        const trans = Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\r\n        const [x, y] = Util.applyTransform([0, 0], trans);\r\n        ctx.drawImage(mask.canvas, x, y);\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    paintImageMaskXObjectGroup(images) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const ctx = this.ctx;\r\n      const fillColor = this.current.fillColor;\r\n      const isPatternFill = this.current.patternFill;\r\n\r\n      for (let i = 0, ii = images.length; i < ii; i++) {\r\n        const image = images[i];\r\n        const width = image.width,\r\n              height = image.height;\r\n        const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\r\n        const maskCtx = maskCanvas.context;\r\n        maskCtx.save();\r\n        putBinaryImageMask(maskCtx, image);\r\n        maskCtx.globalCompositeOperation = \"source-in\";\r\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, ctx.mozCurrentTransformInverse, false) : fillColor;\r\n        maskCtx.fillRect(0, 0, width, height);\r\n        maskCtx.restore();\r\n        ctx.save();\r\n        ctx.transform.apply(ctx, image.transform);\r\n        ctx.scale(1, -1);\r\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    paintImageXObject(objId) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\r\n\r\n      if (!imgData) {\r\n        warn(\"Dependent image isn't ready yet\");\r\n        return;\r\n      }\r\n\r\n      this.paintInlineImageXObject(imgData);\r\n    }\r\n\r\n    paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\r\n\r\n      if (!imgData) {\r\n        warn(\"Dependent image isn't ready yet\");\r\n        return;\r\n      }\r\n\r\n      const width = imgData.width;\r\n      const height = imgData.height;\r\n      const map = [];\r\n\r\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\r\n        map.push({\r\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\r\n          x: 0,\r\n          y: 0,\r\n          w: width,\r\n          h: height\r\n        });\r\n      }\r\n\r\n      this.paintInlineImageXObjectGroup(imgData, map);\r\n    }\r\n\r\n    paintInlineImageXObject(imgData) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const width = imgData.width;\r\n      const height = imgData.height;\r\n      const ctx = this.ctx;\r\n      this.save(); // scale the image to the unit square\r\n\r\n      ctx.scale(1 / width, -1 / height);\r\n      let imgToPaint; // typeof check is needed due to node.js support, see issue #8489\r\n\r\n      if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\r\n        imgToPaint = imgData;\r\n      } else {\r\n        const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\r\n        const tmpCtx = tmpCanvas.context;\r\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\r\n        imgToPaint = tmpCanvas.canvas;\r\n      }\r\n\r\n      const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\r\n\r\n      ctx.drawImage(scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\r\n\r\n      if (this.imageLayer) {\r\n        const position = this.getCanvasPosition(0, -height);\r\n        this.imageLayer.appendImage({\r\n          imgData,\r\n          left: position[0],\r\n          top: position[1],\r\n          width: width / ctx.mozCurrentTransformInverse[0],\r\n          height: height / ctx.mozCurrentTransformInverse[3]\r\n        });\r\n      }\r\n\r\n      this.restore();\r\n    }\r\n\r\n    paintInlineImageXObjectGroup(imgData, map) {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      const ctx = this.ctx;\r\n      const w = imgData.width;\r\n      const h = imgData.height;\r\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\r\n      const tmpCtx = tmpCanvas.context;\r\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\r\n\r\n      for (let i = 0, ii = map.length; i < ii; i++) {\r\n        const entry = map[i];\r\n        ctx.save();\r\n        ctx.transform.apply(ctx, entry.transform);\r\n        ctx.scale(1, -1);\r\n        ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\r\n\r\n        if (this.imageLayer) {\r\n          const position = this.getCanvasPosition(entry.x, entry.y);\r\n          this.imageLayer.appendImage({\r\n            imgData,\r\n            left: position[0],\r\n            top: position[1],\r\n            width: w,\r\n            height: h\r\n          });\r\n        }\r\n\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    paintSolidColorImageMask() {\r\n      if (!this.contentVisible) {\r\n        return;\r\n      }\r\n\r\n      this.ctx.fillRect(0, 0, 1, 1);\r\n    } // Marked content\r\n\r\n\r\n    markPoint(tag) {// TODO Marked content.\r\n    }\r\n\r\n    markPointProps(tag, properties) {// TODO Marked content.\r\n    }\r\n\r\n    beginMarkedContent(tag) {\r\n      this.markedContentStack.push({\r\n        visible: true\r\n      });\r\n    }\r\n\r\n    beginMarkedContentProps(tag, properties) {\r\n      if (tag === \"OC\") {\r\n        this.markedContentStack.push({\r\n          visible: this.optionalContentConfig.isVisible(properties)\r\n        });\r\n      } else {\r\n        this.markedContentStack.push({\r\n          visible: true\r\n        });\r\n      }\r\n\r\n      this.contentVisible = this.isContentVisible();\r\n    }\r\n\r\n    endMarkedContent() {\r\n      this.markedContentStack.pop();\r\n      this.contentVisible = this.isContentVisible();\r\n    } // Compatibility\r\n\r\n\r\n    beginCompat() {// TODO ignore undefined operators (should we do that anyway?)\r\n    }\r\n\r\n    endCompat() {// TODO stop ignoring undefined operators\r\n    } // Helper functions\r\n\r\n\r\n    consumePath() {\r\n      const ctx = this.ctx;\r\n\r\n      if (this.pendingClip) {\r\n        if (this.pendingClip === EO_CLIP) {\r\n          ctx.clip(\"evenodd\");\r\n        } else {\r\n          ctx.clip();\r\n        }\r\n\r\n        this.pendingClip = null;\r\n      }\r\n\r\n      ctx.beginPath();\r\n    }\r\n\r\n    getSinglePixelWidth() {\r\n      if (this._cachedGetSinglePixelWidth === null) {\r\n        // If transform is [a b] then a pixel (square) is transformed\r\n        //                 [c d]\r\n        // into a parallelogram: its area is the abs value of the determinant.\r\n        // This parallelogram has 2 heights:\r\n        //  - Area / |col_1|;\r\n        //  - Area / |col_2|.\r\n        // so in order to get a height of at least 1, pixel height\r\n        // must be computed as followed:\r\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\r\n        // This is equivalent to:\r\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\r\n        const m = this.ctx.mozCurrentTransform;\r\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\r\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\r\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\r\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\r\n\r\n        if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\r\n          // The parallelogram isn't a square and at least one height\r\n          // is lower than 1 so the resulting line width must be 1\r\n          // but it cannot be achieved with one scale: when scaling a pixel\r\n          // we'll get a rectangle (see issue #12295).\r\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\r\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\r\n          // then we'll get a rectangle 1x1e5 which is wrong.\r\n          // In this case, we must reset the transform, set linewidth to 1\r\n          // and then stroke.\r\n          this._cachedGetSinglePixelWidth = -(this._combinedScaleFactor * pixelHeight);\r\n        } else if (absDet > Number.EPSILON) {\r\n          this._cachedGetSinglePixelWidth = pixelHeight;\r\n        } else {\r\n          // Matrix is non-invertible.\r\n          this._cachedGetSinglePixelWidth = 1;\r\n        }\r\n      }\r\n\r\n      return this._cachedGetSinglePixelWidth;\r\n    }\r\n\r\n    getCanvasPosition(x, y) {\r\n      const transform = this.ctx.mozCurrentTransform;\r\n      return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\r\n    }\r\n\r\n    isContentVisible() {\r\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\r\n        if (!this.markedContentStack[i].visible) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n  }\r\n\r\n  for (const op in OPS) {\r\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\r\n  }\r\n\r\n  return CanvasGraphics;\r\n}();\r\n\r\n/* Copyright 2018 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @typedef {Object} GlobalWorkerOptionsType\r\n * @property {Worker | null} workerPort - Defines global port for worker\r\n *   process. Overrides the `workerSrc` option.\r\n * @property {string} workerSrc - A string containing the path and filename\r\n *   of the worker file.\r\n *\r\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\r\n *         issues when using the PDF.js library.\r\n */\r\n\r\n/** @type {GlobalWorkerOptionsType} */\r\nconst GlobalWorkerOptions = Object.create(null);\r\nGlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\r\nGlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass Metadata {\r\n  constructor({\r\n    parsedData,\r\n    rawData\r\n  }) {\r\n    this._metadataMap = parsedData;\r\n    this._data = rawData;\r\n  }\r\n\r\n  getRaw() {\r\n    return this._data;\r\n  }\r\n\r\n  get(name) {\r\n    var _this$_metadataMap$ge;\r\n\r\n    return (_this$_metadataMap$ge = this._metadataMap.get(name)) !== null && _this$_metadataMap$ge !== void 0 ? _this$_metadataMap$ge : null;\r\n  }\r\n\r\n  getAll() {\r\n    return objectFromMap(this._metadataMap);\r\n  }\r\n\r\n  has(name) {\r\n    return this._metadataMap.has(name);\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2020 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass OptionalContentGroup {\r\n  constructor(name, intent) {\r\n    this.visible = true;\r\n    this.name = name;\r\n    this.intent = intent;\r\n  }\r\n\r\n}\r\n\r\nclass OptionalContentConfig {\r\n  constructor(data) {\r\n    this.name = null;\r\n    this.creator = null;\r\n    this._order = null;\r\n    this._groups = new Map();\r\n\r\n    if (data === null) {\r\n      return;\r\n    }\r\n\r\n    this.name = data.name;\r\n    this.creator = data.creator;\r\n    this._order = data.order;\r\n\r\n    for (const group of data.groups) {\r\n      this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\r\n    }\r\n\r\n    if (data.baseState === \"OFF\") {\r\n      for (const group of this._groups) {\r\n        group.visible = false;\r\n      }\r\n    }\r\n\r\n    for (const on of data.on) {\r\n      this._groups.get(on).visible = true;\r\n    }\r\n\r\n    for (const off of data.off) {\r\n      this._groups.get(off).visible = false;\r\n    }\r\n  }\r\n\r\n  _evaluateVisibilityExpression(array) {\r\n    const length = array.length;\r\n\r\n    if (length < 2) {\r\n      return true;\r\n    }\r\n\r\n    const operator = array[0];\r\n\r\n    for (let i = 1; i < length; i++) {\r\n      const element = array[i];\r\n      let state;\r\n\r\n      if (Array.isArray(element)) {\r\n        state = this._evaluateVisibilityExpression(element);\r\n      } else if (this._groups.has(element)) {\r\n        state = this._groups.get(element).visible;\r\n      } else {\r\n        warn(`Optional content group not found: ${element}`);\r\n        return true;\r\n      }\r\n\r\n      switch (operator) {\r\n        case \"And\":\r\n          if (!state) {\r\n            return false;\r\n          }\r\n\r\n          break;\r\n\r\n        case \"Or\":\r\n          if (state) {\r\n            return true;\r\n          }\r\n\r\n          break;\r\n\r\n        case \"Not\":\r\n          return !state;\r\n\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n\r\n    return operator === \"And\";\r\n  }\r\n\r\n  isVisible(group) {\r\n    if (group.type === \"OCG\") {\r\n      if (!this._groups.has(group.id)) {\r\n        warn(`Optional content group not found: ${group.id}`);\r\n        return true;\r\n      }\r\n\r\n      return this._groups.get(group.id).visible;\r\n    } else if (group.type === \"OCMD\") {\r\n      // Per the spec, the expression should be preferred if available.\r\n      if (group.expression) {\r\n        return this._evaluateVisibilityExpression(group.expression);\r\n      }\r\n\r\n      if (!group.policy || group.policy === \"AnyOn\") {\r\n        // Default\r\n        for (const id of group.ids) {\r\n          if (!this._groups.has(id)) {\r\n            warn(`Optional content group not found: ${id}`);\r\n            return true;\r\n          }\r\n\r\n          if (this._groups.get(id).visible) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else if (group.policy === \"AllOn\") {\r\n        for (const id of group.ids) {\r\n          if (!this._groups.has(id)) {\r\n            warn(`Optional content group not found: ${id}`);\r\n            return true;\r\n          }\r\n\r\n          if (!this._groups.get(id).visible) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      } else if (group.policy === \"AnyOff\") {\r\n        for (const id of group.ids) {\r\n          if (!this._groups.has(id)) {\r\n            warn(`Optional content group not found: ${id}`);\r\n            return true;\r\n          }\r\n\r\n          if (!this._groups.get(id).visible) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else if (group.policy === \"AllOff\") {\r\n        for (const id of group.ids) {\r\n          if (!this._groups.has(id)) {\r\n            warn(`Optional content group not found: ${id}`);\r\n            return true;\r\n          }\r\n\r\n          if (this._groups.get(id).visible) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      warn(`Unknown optional content policy ${group.policy}.`);\r\n      return true;\r\n    }\r\n\r\n    warn(`Unknown group type ${group.type}.`);\r\n    return true;\r\n  }\r\n\r\n  setVisibility(id, visible = true) {\r\n    if (!this._groups.has(id)) {\r\n      warn(`Optional content group not found: ${id}`);\r\n      return;\r\n    }\r\n\r\n    this._groups.get(id).visible = !!visible;\r\n  }\r\n\r\n  getOrder() {\r\n    if (!this._groups.size) {\r\n      return null;\r\n    }\r\n\r\n    if (this._order) {\r\n      return this._order.slice();\r\n    }\r\n\r\n    return Array.from(this._groups.keys());\r\n  }\r\n\r\n  getGroups() {\r\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\r\n  }\r\n\r\n  getGroup(id) {\r\n    return this._groups.get(id) || null;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @implements {IPDFStream} */\r\n\r\nclass PDFDataTransportStream {\r\n  constructor(params, pdfDataRangeTransport) {\r\n    assert(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\r\n    this._queuedChunks = [];\r\n    this._progressiveDone = params.progressiveDone || false;\r\n    this._contentDispositionFilename = params.contentDispositionFilename || null;\r\n    const initialData = params.initialData;\r\n\r\n    if ((initialData === null || initialData === void 0 ? void 0 : initialData.length) > 0) {\r\n      const buffer = new Uint8Array(initialData).buffer;\r\n\r\n      this._queuedChunks.push(buffer);\r\n    }\r\n\r\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\r\n    this._isStreamingSupported = !params.disableStream;\r\n    this._isRangeSupported = !params.disableRange;\r\n    this._contentLength = params.length;\r\n    this._fullRequestReader = null;\r\n    this._rangeReaders = [];\r\n\r\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\r\n      this._onReceiveData({\r\n        begin,\r\n        chunk\r\n      });\r\n    });\r\n\r\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\r\n      this._onProgress({\r\n        loaded,\r\n        total\r\n      });\r\n    });\r\n\r\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\r\n      this._onReceiveData({\r\n        chunk\r\n      });\r\n    });\r\n\r\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\r\n      this._onProgressiveDone();\r\n    });\r\n\r\n    this._pdfDataRangeTransport.transportReady();\r\n  }\r\n\r\n  _onReceiveData(args) {\r\n    const buffer = new Uint8Array(args.chunk).buffer;\r\n\r\n    if (args.begin === undefined) {\r\n      if (this._fullRequestReader) {\r\n        this._fullRequestReader._enqueue(buffer);\r\n      } else {\r\n        this._queuedChunks.push(buffer);\r\n      }\r\n    } else {\r\n      const found = this._rangeReaders.some(function (rangeReader) {\r\n        if (rangeReader._begin !== args.begin) {\r\n          return false;\r\n        }\r\n\r\n        rangeReader._enqueue(buffer);\r\n\r\n        return true;\r\n      });\r\n\r\n      assert(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\r\n    }\r\n  }\r\n\r\n  get _progressiveDataLength() {\r\n    var _this$_fullRequestRea, _this$_fullRequestRea2;\r\n\r\n    return (_this$_fullRequestRea = (_this$_fullRequestRea2 = this._fullRequestReader) === null || _this$_fullRequestRea2 === void 0 ? void 0 : _this$_fullRequestRea2._loaded) !== null && _this$_fullRequestRea !== void 0 ? _this$_fullRequestRea : 0;\r\n  }\r\n\r\n  _onProgress(evt) {\r\n    if (evt.total === undefined) {\r\n      // Reporting to first range reader, if it exists.\r\n      const firstReader = this._rangeReaders[0];\r\n\r\n      if (firstReader !== null && firstReader !== void 0 && firstReader.onProgress) {\r\n        firstReader.onProgress({\r\n          loaded: evt.loaded\r\n        });\r\n      }\r\n    } else {\r\n      const fullReader = this._fullRequestReader;\r\n\r\n      if (fullReader !== null && fullReader !== void 0 && fullReader.onProgress) {\r\n        fullReader.onProgress({\r\n          loaded: evt.loaded,\r\n          total: evt.total\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  _onProgressiveDone() {\r\n    if (this._fullRequestReader) {\r\n      this._fullRequestReader.progressiveDone();\r\n    }\r\n\r\n    this._progressiveDone = true;\r\n  }\r\n\r\n  _removeRangeReader(reader) {\r\n    const i = this._rangeReaders.indexOf(reader);\r\n\r\n    if (i >= 0) {\r\n      this._rangeReaders.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  getFullReader() {\r\n    assert(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\r\n    const queuedChunks = this._queuedChunks;\r\n    this._queuedChunks = null;\r\n    return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\r\n  }\r\n\r\n  getRangeReader(begin, end) {\r\n    if (end <= this._progressiveDataLength) {\r\n      return null;\r\n    }\r\n\r\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\r\n\r\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\r\n\r\n    this._rangeReaders.push(reader);\r\n\r\n    return reader;\r\n  }\r\n\r\n  cancelAllRequests(reason) {\r\n    if (this._fullRequestReader) {\r\n      this._fullRequestReader.cancel(reason);\r\n    }\r\n\r\n    for (const reader of this._rangeReaders.slice(0)) {\r\n      reader.cancel(reason);\r\n    }\r\n\r\n    this._pdfDataRangeTransport.abort();\r\n  }\r\n\r\n}\r\n/** @implements {IPDFStreamReader} */\r\n\r\n\r\nclass PDFDataTransportStreamReader {\r\n  constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null) {\r\n    this._stream = stream;\r\n    this._done = progressiveDone || false;\r\n    this._filename = isPdfFile(contentDispositionFilename) ? contentDispositionFilename : null;\r\n    this._queuedChunks = queuedChunks || [];\r\n    this._loaded = 0;\r\n\r\n    for (const chunk of this._queuedChunks) {\r\n      this._loaded += chunk.byteLength;\r\n    }\r\n\r\n    this._requests = [];\r\n    this._headersReady = Promise.resolve();\r\n    stream._fullRequestReader = this;\r\n    this.onProgress = null;\r\n  }\r\n\r\n  _enqueue(chunk) {\r\n    if (this._done) {\r\n      return; // Ignore new data.\r\n    }\r\n\r\n    if (this._requests.length > 0) {\r\n      const requestCapability = this._requests.shift();\r\n\r\n      requestCapability.resolve({\r\n        value: chunk,\r\n        done: false\r\n      });\r\n    } else {\r\n      this._queuedChunks.push(chunk);\r\n    }\r\n\r\n    this._loaded += chunk.byteLength;\r\n  }\r\n\r\n  get headersReady() {\r\n    return this._headersReady;\r\n  }\r\n\r\n  get filename() {\r\n    return this._filename;\r\n  }\r\n\r\n  get isRangeSupported() {\r\n    return this._stream._isRangeSupported;\r\n  }\r\n\r\n  get isStreamingSupported() {\r\n    return this._stream._isStreamingSupported;\r\n  }\r\n\r\n  get contentLength() {\r\n    return this._stream._contentLength;\r\n  }\r\n\r\n  async read() {\r\n    if (this._queuedChunks.length > 0) {\r\n      const chunk = this._queuedChunks.shift();\r\n\r\n      return {\r\n        value: chunk,\r\n        done: false\r\n      };\r\n    }\r\n\r\n    if (this._done) {\r\n      return {\r\n        value: undefined,\r\n        done: true\r\n      };\r\n    }\r\n\r\n    const requestCapability = createPromiseCapability();\r\n\r\n    this._requests.push(requestCapability);\r\n\r\n    return requestCapability.promise;\r\n  }\r\n\r\n  cancel(reason) {\r\n    this._done = true;\r\n\r\n    for (const requestCapability of this._requests) {\r\n      requestCapability.resolve({\r\n        value: undefined,\r\n        done: true\r\n      });\r\n    }\r\n\r\n    this._requests.length = 0;\r\n  }\r\n\r\n  progressiveDone() {\r\n    if (this._done) {\r\n      return;\r\n    }\r\n\r\n    this._done = true;\r\n  }\r\n\r\n}\r\n/** @implements {IPDFStreamRangeReader} */\r\n\r\n\r\nclass PDFDataTransportStreamRangeReader {\r\n  constructor(stream, begin, end) {\r\n    this._stream = stream;\r\n    this._begin = begin;\r\n    this._end = end;\r\n    this._queuedChunk = null;\r\n    this._requests = [];\r\n    this._done = false;\r\n    this.onProgress = null;\r\n  }\r\n\r\n  _enqueue(chunk) {\r\n    if (this._done) {\r\n      return; // ignore new data\r\n    }\r\n\r\n    if (this._requests.length === 0) {\r\n      this._queuedChunk = chunk;\r\n    } else {\r\n      const requestsCapability = this._requests.shift();\r\n\r\n      requestsCapability.resolve({\r\n        value: chunk,\r\n        done: false\r\n      });\r\n\r\n      for (const requestCapability of this._requests) {\r\n        requestCapability.resolve({\r\n          value: undefined,\r\n          done: true\r\n        });\r\n      }\r\n\r\n      this._requests.length = 0;\r\n    }\r\n\r\n    this._done = true;\r\n\r\n    this._stream._removeRangeReader(this);\r\n  }\r\n\r\n  get isStreamingSupported() {\r\n    return false;\r\n  }\r\n\r\n  async read() {\r\n    if (this._queuedChunk) {\r\n      const chunk = this._queuedChunk;\r\n      this._queuedChunk = null;\r\n      return {\r\n        value: chunk,\r\n        done: false\r\n      };\r\n    }\r\n\r\n    if (this._done) {\r\n      return {\r\n        value: undefined,\r\n        done: true\r\n      };\r\n    }\r\n\r\n    const requestCapability = createPromiseCapability();\r\n\r\n    this._requests.push(requestCapability);\r\n\r\n    return requestCapability.promise;\r\n  }\r\n\r\n  cancel(reason) {\r\n    this._done = true;\r\n\r\n    for (const requestCapability of this._requests) {\r\n      requestCapability.resolve({\r\n        value: undefined,\r\n        done: true\r\n      });\r\n    }\r\n\r\n    this._requests.length = 0;\r\n\r\n    this._stream._removeRangeReader(this);\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\r\n\r\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\r\n\r\nconst DefaultCanvasFactory = (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS ? NodeCanvasFactory : DOMCanvasFactory;\r\nconst DefaultCMapReaderFactory = (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS ? NodeCMapReaderFactory : DOMCMapReaderFactory;\r\nconst DefaultStandardFontDataFactory = (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS ? NodeStandardFontDataFactory : DOMStandardFontDataFactory;\r\n/**\r\n * @typedef {function} IPDFStreamFactory\r\n * @param {DocumentInitParameters} params - The document initialization\r\n *   parameters. The \"url\" key is always present.\r\n * @returns {Promise} A promise, which is resolved with an instance of\r\n *   {IPDFStream}.\r\n * @ignore\r\n */\r\n\r\n/**\r\n * @type IPDFStreamFactory\r\n * @private\r\n */\r\n\r\nlet createPDFNetworkStream;\r\n/**\r\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\r\n * data transport.\r\n *\r\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\r\n *   that takes document initialization parameters (including a \"url\") and\r\n *   returns a promise which is resolved with an instance of {IPDFStream}.\r\n * @ignore\r\n */\r\n\r\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\r\n  createPDFNetworkStream = pdfNetworkStreamFactory;\r\n}\r\n/**\r\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\r\n *            Int16Array | Uint16Array |\r\n *            Int32Array | Uint32Array | Float32Array |\r\n *            Float64Array\r\n * } TypedArray\r\n */\r\n\r\n/**\r\n * @typedef {Object} RefProxy\r\n * @property {number} num\r\n * @property {number} gen\r\n */\r\n\r\n/**\r\n * Document initialization / loading parameters object.\r\n *\r\n * @typedef {Object} DocumentInitParameters\r\n * @property {string|URL} [url] - The URL of the PDF.\r\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\r\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\r\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\r\n * @property {Object} [httpHeaders] - Basic authentication headers.\r\n * @property {boolean} [withCredentials] - Indicates whether or not\r\n *   cross-site Access-Control requests should be made using credentials such\r\n *   as cookies or authorization headers. The default is `false`.\r\n * @property {string} [password] - For decrypting password-protected PDFs.\r\n * @property {TypedArray} [initialData] - A typed array with the first portion\r\n *   or all of the pdf data. Used by the extension since some data is already\r\n *   loaded before the switch to range requests.\r\n * @property {number} [length] - The PDF file length. It's used for progress\r\n *   reports and range requests operations.\r\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\r\n *   transport implementation.\r\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\r\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\r\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\r\n *   parsing the PDF data.\r\n * @property {number} [verbosity] - Controls the logging level; the constants\r\n *   from {@link VerbosityLevel} should be used.\r\n * @property {string} [docBaseUrl] - The base URL of the document, used when\r\n *   attempting to recover valid absolute URLs for annotations, and outline\r\n *   items, that (incorrectly) only specify relative URLs.\r\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\r\n *   located. Include the trailing slash.\r\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\r\n *   packed or not.\r\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\r\n *   reading built-in CMap files. Providing a custom factory is useful for\r\n *   environments without Fetch API or `XMLHttpRequest` support, such as\r\n *   Node.js. The default value is {DOMCMapReaderFactory}.\r\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\r\n *   embedded in the PDF document will fallback to a system font.\r\n *   The default value is `true` in web environments and `false` in Node.js;\r\n *   unless `disableFontFace === true` in which case this defaults to `false`\r\n *   regardless of the environment (to prevent completely broken fonts).\r\n * @property {string} [standardFontDataUrl] - The URL where the standard font\r\n *   files are located. Include the trailing slash.\r\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\r\n *   when reading the standard font files. Providing a custom factory is useful\r\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\r\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\r\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\r\n *   worker-thread when reading CMap and standard font files. When `true`,\r\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\r\n *   The default value is `true` in web environments and `false` in Node.js.\r\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\r\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\r\n *   PDF data cannot be successfully parsed, instead of attempting to recover\r\n *   whatever possible of the data. The default value is `false`.\r\n * @property {number} [maxImageSize] - The maximum allowed image size in total\r\n *   pixels, i.e. width * height. Images above this value will not be rendered.\r\n *   Use -1 for no limit, which is also the default value.\r\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\r\n *   as JavaScript. Primarily used to improve performance of font rendering, and\r\n *   when parsing PDF functions. The default value is `true`.\r\n * @property {boolean} [disableFontFace] - By default fonts are converted to\r\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\r\n *   If disabled, fonts will be rendered using a built-in font renderer that\r\n *   constructs the glyphs with primitive path commands.\r\n *   The default value is `false` in web environments and `true` in Node.js.\r\n * @property {boolean} [fontExtraProperties] - Include additional properties,\r\n *   which are unused during rendering of PDF documents, when exporting the\r\n *   parsed font data from the worker-thread. This may be useful for debugging\r\n *   purposes (and backwards compatibility), but note that it will lead to\r\n *   increased memory usage. The default value is `false`.\r\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\r\n *   The default value is `false`.\r\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\r\n *   context to create elements with and to load resources, such as fonts,\r\n *   into. Defaults to the current document.\r\n * @property {boolean} [disableRange] - Disable range request loading of PDF\r\n *   files. When enabled, and if the server supports partial content requests,\r\n *   then the PDF will be fetched in chunks. The default value is `false`.\r\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\r\n *   By default PDF.js attempts to load PDF files in chunks. The default value\r\n *   is `false`.\r\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\r\n *   data. When range requests are enabled PDF.js will automatically keep\r\n *   fetching more data even if it isn't needed to display the current page.\r\n *   The default value is `false`.\r\n *\r\n *   NOTE: It is also necessary to disable streaming, see above, in order for\r\n *   disabling of pre-fetching to work correctly.\r\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\r\n *   (see `web/debugger.js`). The default value is `false`.\r\n */\r\n\r\n/**\r\n * This is the main entry point for loading a PDF and interacting with it.\r\n *\r\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\r\n * XHR as fallback) is used, which means it must follow same origin rules,\r\n * e.g. no cross-domain requests without CORS.\r\n *\r\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\r\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\r\n *         already populated with data, or a parameter object.\r\n * @returns {PDFDocumentLoadingTask}\r\n */\r\n\r\n\r\nfunction getDocument(src) {\r\n  const task = new PDFDocumentLoadingTask();\r\n  let source;\r\n\r\n  if (typeof src === \"string\" || src instanceof URL) {\r\n    source = {\r\n      url: src\r\n    };\r\n  } else if (isArrayBuffer(src)) {\r\n    source = {\r\n      data: src\r\n    };\r\n  } else if (src instanceof PDFDataRangeTransport) {\r\n    source = {\r\n      range: src\r\n    };\r\n  } else {\r\n    if (typeof src !== \"object\") {\r\n      throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, Uint8Array, or parameter object.\");\r\n    }\r\n\r\n    if (!src.url && !src.data && !src.range) {\r\n      throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\r\n    }\r\n\r\n    source = src;\r\n  }\r\n\r\n  const params = Object.create(null);\r\n  let rangeTransport = null,\r\n      worker = null;\r\n\r\n  for (const key in source) {\r\n    const value = source[key];\r\n\r\n    switch (key) {\r\n      case \"url\":\r\n        if (typeof window !== \"undefined\") {\r\n          try {\r\n            // The full path is required in the 'url' field.\r\n            params[key] = new URL(value, window.location).href;\r\n            continue;\r\n          } catch (ex) {\r\n            warn(`Cannot create valid URL: \"${ex}\".`);\r\n          }\r\n        } else if (typeof value === \"string\" || value instanceof URL) {\r\n          params[key] = value.toString(); // Support Node.js environments.\r\n\r\n          continue;\r\n        }\r\n\r\n        throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\r\n\r\n      case \"range\":\r\n        rangeTransport = value;\r\n        continue;\r\n\r\n      case \"worker\":\r\n        worker = value;\r\n        continue;\r\n\r\n      case \"data\":\r\n        // Converting string or array-like data to Uint8Array.\r\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS && typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\r\n        value instanceof Buffer // eslint-disable-line no-undef\r\n        ) {\r\n          params[key] = new Uint8Array(value);\r\n        } else if (value instanceof Uint8Array) {\r\n          break; // Use the data as-is when it's already a Uint8Array.\r\n        } else if (typeof value === \"string\") {\r\n          params[key] = stringToBytes(value);\r\n        } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) {\r\n          params[key] = new Uint8Array(value);\r\n        } else if (isArrayBuffer(value)) {\r\n          params[key] = new Uint8Array(value);\r\n        } else {\r\n          throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string, or array-like object is expected in the data property.\");\r\n        }\r\n\r\n        continue;\r\n    }\r\n\r\n    params[key] = value;\r\n  }\r\n\r\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\r\n  params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\r\n  params.StandardFontDataFactory = params.StandardFontDataFactory || DefaultStandardFontDataFactory;\r\n  params.ignoreErrors = params.stopAtErrors !== true;\r\n  params.fontExtraProperties = params.fontExtraProperties === true;\r\n  params.pdfBug = params.pdfBug === true;\r\n  params.enableXfa = params.enableXfa === true;\r\n\r\n  if (typeof params.docBaseUrl !== \"string\" || isDataScheme(params.docBaseUrl)) {\r\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\r\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\r\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\r\n    params.docBaseUrl = null;\r\n  }\r\n\r\n  if (!Number.isInteger(params.maxImageSize)) {\r\n    params.maxImageSize = -1;\r\n  }\r\n\r\n  if (typeof params.useWorkerFetch !== \"boolean\") {\r\n    params.useWorkerFetch = params.CMapReaderFactory === DOMCMapReaderFactory && params.StandardFontDataFactory === DOMStandardFontDataFactory;\r\n  }\r\n\r\n  if (typeof params.isEvalSupported !== \"boolean\") {\r\n    params.isEvalSupported = true;\r\n  }\r\n\r\n  if (typeof params.disableFontFace !== \"boolean\") {\r\n    params.disableFontFace = (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\r\n  }\r\n\r\n  if (typeof params.useSystemFonts !== \"boolean\") {\r\n    params.useSystemFonts = !((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) && !params.disableFontFace;\r\n  }\r\n\r\n  if (typeof params.ownerDocument === \"undefined\") {\r\n    params.ownerDocument = globalThis.document;\r\n  }\r\n\r\n  if (typeof params.disableRange !== \"boolean\") {\r\n    params.disableRange = false;\r\n  }\r\n\r\n  if (typeof params.disableStream !== \"boolean\") {\r\n    params.disableStream = false;\r\n  }\r\n\r\n  if (typeof params.disableAutoFetch !== \"boolean\") {\r\n    params.disableAutoFetch = false;\r\n  } // Set the main-thread verbosity level.\r\n\r\n\r\n  setVerbosityLevel(params.verbosity);\r\n\r\n  if (!worker) {\r\n    const workerParams = {\r\n      verbosity: params.verbosity,\r\n      port: GlobalWorkerOptions.workerPort\r\n    }; // Worker was not provided -- creating and owning our own. If message port\r\n    // is specified in global worker options, using it.\r\n\r\n    worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\r\n    task._worker = worker;\r\n  }\r\n\r\n  const docId = task.docId;\r\n  worker.promise.then(function () {\r\n    if (task.destroyed) {\r\n      throw new Error(\"Loading aborted\");\r\n    }\r\n\r\n    const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\r\n\r\n    const networkStreamPromise = new Promise(function (resolve) {\r\n      let networkStream;\r\n\r\n      if (rangeTransport) {\r\n        networkStream = new PDFDataTransportStream({\r\n          length: params.length,\r\n          initialData: params.initialData,\r\n          progressiveDone: params.progressiveDone,\r\n          contentDispositionFilename: params.contentDispositionFilename,\r\n          disableRange: params.disableRange,\r\n          disableStream: params.disableStream\r\n        }, rangeTransport);\r\n      } else if (!params.data) {\r\n        networkStream = createPDFNetworkStream({\r\n          url: params.url,\r\n          length: params.length,\r\n          httpHeaders: params.httpHeaders,\r\n          withCredentials: params.withCredentials,\r\n          rangeChunkSize: params.rangeChunkSize,\r\n          disableRange: params.disableRange,\r\n          disableStream: params.disableStream\r\n        });\r\n      }\r\n\r\n      resolve(networkStream);\r\n    });\r\n    return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\r\n      if (task.destroyed) {\r\n        throw new Error(\"Loading aborted\");\r\n      }\r\n\r\n      const messageHandler = new MessageHandler(docId, workerId, worker.port);\r\n      messageHandler.postMessageTransfers = worker.postMessageTransfers;\r\n      const transport = new WorkerTransport(messageHandler, task, networkStream, params);\r\n      task._transport = transport;\r\n      messageHandler.send(\"Ready\", null);\r\n    });\r\n  }).catch(task._capability.reject);\r\n  return task;\r\n}\r\n/**\r\n * Starts fetching of specified PDF document/data.\r\n *\r\n * @param {PDFWorker} worker\r\n * @param {Object} source\r\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\r\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\r\n * @returns {Promise} A promise that is resolved when the worker ID of the\r\n *   `MessageHandler` is known.\r\n * @private\r\n */\r\n\r\n\r\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\r\n  if (worker.destroyed) {\r\n    return Promise.reject(new Error(\"Worker was destroyed\"));\r\n  }\r\n\r\n  if (pdfDataRangeTransport) {\r\n    source.length = pdfDataRangeTransport.length;\r\n    source.initialData = pdfDataRangeTransport.initialData;\r\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\r\n    source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename;\r\n  }\r\n\r\n  return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\r\n    docId,\r\n    apiVersion: typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\") ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null,\r\n    // Only send the required properties, and *not* the entire object.\r\n    source: {\r\n      data: source.data,\r\n      url: source.url,\r\n      password: source.password,\r\n      disableAutoFetch: source.disableAutoFetch,\r\n      rangeChunkSize: source.rangeChunkSize,\r\n      length: source.length\r\n    },\r\n    maxImageSize: source.maxImageSize,\r\n    disableFontFace: source.disableFontFace,\r\n    postMessageTransfers: worker.postMessageTransfers,\r\n    docBaseUrl: source.docBaseUrl,\r\n    ignoreErrors: source.ignoreErrors,\r\n    isEvalSupported: source.isEvalSupported,\r\n    fontExtraProperties: source.fontExtraProperties,\r\n    enableXfa: source.enableXfa,\r\n    useSystemFonts: source.useSystemFonts,\r\n    cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\r\n    standardFontDataUrl: source.useWorkerFetch ? source.standardFontDataUrl : null\r\n  }).then(function (workerId) {\r\n    if (worker.destroyed) {\r\n      throw new Error(\"Worker was destroyed\");\r\n    }\r\n\r\n    return workerId;\r\n  });\r\n}\r\n/**\r\n * @typedef {Object} OnProgressParameters\r\n * @property {number} loaded - Currently loaded number of bytes.\r\n * @property {number} total - Total number of bytes in the PDF file.\r\n */\r\n\r\n/**\r\n * The loading task controls the operations required to load a PDF document\r\n * (such as network requests) and provides a way to listen for completion,\r\n * after which individual pages can be rendered.\r\n *\r\n * @typedef {Object} PDFDocumentLoadingTask\r\n * @property {string} docId - Unique identifier for the document loading task.\r\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\r\n * @property {function} [onPassword] - Callback to request a password if a wrong\r\n *   or no password was provided. The callback receives two parameters: a\r\n *   function that should be called with the new password, and a reason (see\r\n *   {@link PasswordResponses}).\r\n * @property {function} [onProgress] - Callback to be able to monitor the\r\n *   loading progress of the PDF file (necessary to implement e.g. a loading\r\n *   bar). The callback receives an {@link OnProgressParameters} argument.\r\n * @property {function} [onUnsupportedFeature] - Callback for when an\r\n *   unsupported feature is used in the PDF document. The callback receives an\r\n *   {@link UNSUPPORTED_FEATURES} argument.\r\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\r\n *   task completion.\r\n * @property {function} destroy - Abort all network requests and destroy\r\n *   the worker. Returns a promise that is resolved when destruction is\r\n *   completed.\r\n */\r\n\r\n/**\r\n * @type {any}\r\n * @ignore\r\n */\r\n\r\n\r\nconst PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\r\n  let nextDocumentId = 0;\r\n  /**\r\n   * The loading task controls the operations required to load a PDF document\r\n   * (such as network requests) and provides a way to listen for completion,\r\n   * after which individual pages can be rendered.\r\n   */\r\n  // eslint-disable-next-line no-shadow\r\n\r\n  class PDFDocumentLoadingTask {\r\n    constructor() {\r\n      this._capability = createPromiseCapability();\r\n      this._transport = null;\r\n      this._worker = null;\r\n      /**\r\n       * Unique identifier for the document loading task.\r\n       * @type {string}\r\n       */\r\n\r\n      this.docId = \"d\" + nextDocumentId++;\r\n      /**\r\n       * Whether the loading task is destroyed or not.\r\n       * @type {boolean}\r\n       */\r\n\r\n      this.destroyed = false;\r\n      /**\r\n       * Callback to request a password if a wrong or no password was provided.\r\n       * The callback receives two parameters: a function that should be called\r\n       * with the new password, and a reason (see {@link PasswordResponses}).\r\n       * @type {function}\r\n       */\r\n\r\n      this.onPassword = null;\r\n      /**\r\n       * Callback to be able to monitor the loading progress of the PDF file\r\n       * (necessary to implement e.g. a loading bar).\r\n       * The callback receives an {@link OnProgressParameters} argument.\r\n       * @type {function}\r\n       */\r\n\r\n      this.onProgress = null;\r\n      /**\r\n       * Callback for when an unsupported feature is used in the PDF document.\r\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\r\n       * @type {function}\r\n       */\r\n\r\n      this.onUnsupportedFeature = null;\r\n    }\r\n    /**\r\n     * Promise for document loading task completion.\r\n     * @type {Promise<PDFDocumentProxy>}\r\n     */\r\n\r\n\r\n    get promise() {\r\n      return this._capability.promise;\r\n    }\r\n    /**\r\n     * @returns {Promise<void>} A promise that is resolved when destruction is\r\n     *   completed.\r\n     */\r\n\r\n\r\n    destroy() {\r\n      this.destroyed = true;\r\n      const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\r\n      return transportDestroyed.then(() => {\r\n        this._transport = null;\r\n\r\n        if (this._worker) {\r\n          this._worker.destroy();\r\n\r\n          this._worker = null;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return PDFDocumentLoadingTask;\r\n}();\r\n/**\r\n * Abstract class to support range requests file loading.\r\n */\r\n\r\n\r\nclass PDFDataRangeTransport {\r\n  /**\r\n   * @param {number} length\r\n   * @param {Uint8Array} initialData\r\n   * @param {boolean} [progressiveDone]\r\n   * @param {string} [contentDispositionFilename]\r\n   */\r\n  constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null) {\r\n    this.length = length;\r\n    this.initialData = initialData;\r\n    this.progressiveDone = progressiveDone;\r\n    this.contentDispositionFilename = contentDispositionFilename;\r\n    this._rangeListeners = [];\r\n    this._progressListeners = [];\r\n    this._progressiveReadListeners = [];\r\n    this._progressiveDoneListeners = [];\r\n    this._readyCapability = createPromiseCapability();\r\n  }\r\n\r\n  addRangeListener(listener) {\r\n    this._rangeListeners.push(listener);\r\n  }\r\n\r\n  addProgressListener(listener) {\r\n    this._progressListeners.push(listener);\r\n  }\r\n\r\n  addProgressiveReadListener(listener) {\r\n    this._progressiveReadListeners.push(listener);\r\n  }\r\n\r\n  addProgressiveDoneListener(listener) {\r\n    this._progressiveDoneListeners.push(listener);\r\n  }\r\n\r\n  onDataRange(begin, chunk) {\r\n    for (const listener of this._rangeListeners) {\r\n      listener(begin, chunk);\r\n    }\r\n  }\r\n\r\n  onDataProgress(loaded, total) {\r\n    this._readyCapability.promise.then(() => {\r\n      for (const listener of this._progressListeners) {\r\n        listener(loaded, total);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDataProgressiveRead(chunk) {\r\n    this._readyCapability.promise.then(() => {\r\n      for (const listener of this._progressiveReadListeners) {\r\n        listener(chunk);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDataProgressiveDone() {\r\n    this._readyCapability.promise.then(() => {\r\n      for (const listener of this._progressiveDoneListeners) {\r\n        listener();\r\n      }\r\n    });\r\n  }\r\n\r\n  transportReady() {\r\n    this._readyCapability.resolve();\r\n  }\r\n\r\n  requestDataRange(begin, end) {\r\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\r\n  }\r\n\r\n  abort() {}\r\n\r\n}\r\n/**\r\n * Proxy to a `PDFDocument` in the worker thread.\r\n */\r\n\r\n\r\nclass PDFDocumentProxy {\r\n  constructor(pdfInfo, transport) {\r\n    this._pdfInfo = pdfInfo;\r\n    this._transport = transport;\r\n\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\r\n      Object.defineProperty(this, \"fingerprint\", {\r\n        get() {\r\n          deprecated(\"`PDFDocumentProxy.fingerprint`, \" + \"please use `PDFDocumentProxy.fingerprints` instead.\");\r\n          return this.fingerprints[0];\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * @type {AnnotationStorage} Storage for annotation data in forms.\r\n   */\r\n\r\n\r\n  get annotationStorage() {\r\n    return this._transport.annotationStorage;\r\n  }\r\n  /**\r\n   * @type {number} Total number of pages in the PDF file.\r\n   */\r\n\r\n\r\n  get numPages() {\r\n    return this._pdfInfo.numPages;\r\n  }\r\n  /**\r\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\r\n   *   identify the PDF document.\r\n   *   NOTE: The first element will always be defined for all PDF documents,\r\n   *   whereas the second element is only defined for *modified* PDF documents.\r\n   */\r\n\r\n\r\n  get fingerprints() {\r\n    return this._pdfInfo.fingerprints;\r\n  }\r\n  /**\r\n   * @type {boolean} True if only XFA form.\r\n   */\r\n\r\n\r\n  get isPureXfa() {\r\n    return !!this._transport._htmlForXfa;\r\n  }\r\n  /**\r\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\r\n   *\r\n   * @type {Object | null} An object representing a HTML tree structure\r\n   *   to render the XFA, or `null` when no XFA form exists.\r\n   */\r\n\r\n\r\n  get allXfaHtml() {\r\n    return this._transport._htmlForXfa;\r\n  }\r\n  /**\r\n   * @param {number} pageNumber - The page number to get. The first page is 1.\r\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\r\n   *   a {@link PDFPageProxy} object.\r\n   */\r\n\r\n\r\n  getPage(pageNumber) {\r\n    return this._transport.getPage(pageNumber);\r\n  }\r\n  /**\r\n   * @param {RefProxy} ref - The page reference.\r\n   * @returns {Promise<number>} A promise that is resolved with the page index,\r\n   *   starting from zero, that is associated with the reference.\r\n   */\r\n\r\n\r\n  getPageIndex(ref) {\r\n    return this._transport.getPageIndex(ref);\r\n  }\r\n  /**\r\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\r\n   *   with a mapping from named destinations to references.\r\n   *\r\n   * This can be slow for large documents. Use `getDestination` instead.\r\n   */\r\n\r\n\r\n  getDestinations() {\r\n    return this._transport.getDestinations();\r\n  }\r\n  /**\r\n   * @param {string} id - The named destination to get.\r\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\r\n   *   information of the given named destination, or `null` when the named\r\n   *   destination is not present in the PDF file.\r\n   */\r\n\r\n\r\n  getDestination(id) {\r\n    return this._transport.getDestination(id);\r\n  }\r\n  /**\r\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\r\n   *   an {Array} containing the page labels that correspond to the page\r\n   *   indexes, or `null` when no page labels are present in the PDF file.\r\n   */\r\n\r\n\r\n  getPageLabels() {\r\n    return this._transport.getPageLabels();\r\n  }\r\n  /**\r\n   * @returns {Promise<string>} A promise that is resolved with a {string}\r\n   *   containing the page layout name.\r\n   */\r\n\r\n\r\n  getPageLayout() {\r\n    return this._transport.getPageLayout();\r\n  }\r\n  /**\r\n   * @returns {Promise<string>} A promise that is resolved with a {string}\r\n   *   containing the page mode name.\r\n   */\r\n\r\n\r\n  getPageMode() {\r\n    return this._transport.getPageMode();\r\n  }\r\n  /**\r\n   * @returns {Promise<Object | null>} A promise that is resolved with an\r\n   *   {Object} containing the viewer preferences, or `null` when no viewer\r\n   *   preferences are present in the PDF file.\r\n   */\r\n\r\n\r\n  getViewerPreferences() {\r\n    return this._transport.getViewerPreferences();\r\n  }\r\n  /**\r\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\r\n   *   containing the destination, or `null` when no open action is present\r\n   *   in the PDF.\r\n   */\r\n\r\n\r\n  getOpenAction() {\r\n    return this._transport.getOpenAction();\r\n  }\r\n  /**\r\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\r\n   *   for mapping named attachments to their content.\r\n   */\r\n\r\n\r\n  getAttachments() {\r\n    return this._transport.getAttachments();\r\n  }\r\n  /**\r\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\r\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\r\n   *   if no JavaScript exists.\r\n   */\r\n\r\n\r\n  getJavaScript() {\r\n    return this._transport.getJavaScript();\r\n  }\r\n  /**\r\n   * @returns {Promise<Object | null>} A promise that is resolved with\r\n   *   an {Object} with the JavaScript actions:\r\n   *     - from the name tree (like getJavaScript);\r\n   *     - from A or AA entries in the catalog dictionary.\r\n   *   , or `null` if no JavaScript exists.\r\n   */\r\n\r\n\r\n  getJSActions() {\r\n    return this._transport.getDocJSActions();\r\n  }\r\n  /**\r\n   * @typedef {Object} OutlineNode\r\n   * @property {string} title\r\n   * @property {boolean} bold\r\n   * @property {boolean} italic\r\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\r\n   *   display purposes.\r\n   * @property {string | Array<any> | null} dest\r\n   * @property {string | null} url\r\n   * @property {string | undefined} unsafeUrl\r\n   * @property {boolean | undefined} newWindow\r\n   * @property {number | undefined} count\r\n   * @property {Array<OutlineNode>} items\r\n   */\r\n\r\n  /**\r\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\r\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\r\n   */\r\n\r\n\r\n  getOutline() {\r\n    return this._transport.getOutline();\r\n  }\r\n  /**\r\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\r\n   *   an {@link OptionalContentConfig} that contains all the optional content\r\n   *   groups (assuming that the document has any).\r\n   */\r\n\r\n\r\n  getOptionalContentConfig() {\r\n    return this._transport.getOptionalContentConfig();\r\n  }\r\n  /**\r\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\r\n   *   an {Array} that contains the permission flags for the PDF document, or\r\n   *   `null` when no permissions are present in the PDF file.\r\n   */\r\n\r\n\r\n  getPermissions() {\r\n    return this._transport.getPermissions();\r\n  }\r\n  /**\r\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\r\n   *   resolved with an {Object} that has `info` and `metadata` properties.\r\n   *   `info` is an {Object} filled with anything available in the information\r\n   *   dictionary and similarly `metadata` is a {Metadata} object with\r\n   *   information from the metadata section of the PDF.\r\n   */\r\n\r\n\r\n  getMetadata() {\r\n    return this._transport.getMetadata();\r\n  }\r\n  /**\r\n   * @typedef {Object} MarkInfo\r\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\r\n   * @property {boolean} Marked\r\n   * @property {boolean} UserProperties\r\n   * @property {boolean} Suspects\r\n   */\r\n\r\n  /**\r\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\r\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\r\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\r\n   */\r\n\r\n\r\n  getMarkInfo() {\r\n    return this._transport.getMarkInfo();\r\n  }\r\n  /**\r\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\r\n   *   {TypedArray} that has the raw data from the PDF.\r\n   */\r\n\r\n\r\n  getData() {\r\n    return this._transport.getData();\r\n  }\r\n  /**\r\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\r\n   *   document's data is loaded. It is resolved with an {Object} that contains\r\n   *   the `length` property that indicates size of the PDF data in bytes.\r\n   */\r\n\r\n\r\n  getDownloadInfo() {\r\n    return this._transport.downloadInfoCapability.promise;\r\n  }\r\n  /**\r\n   * @typedef {Object} PDFDocumentStats\r\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\r\n   *   document (an item is set to true if specific stream ID was used in the\r\n   *   document).\r\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\r\n   *   document (an item is set to true if specific font ID was used in the\r\n   *   document).\r\n   */\r\n\r\n  /**\r\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\r\n   *   current statistics about document structures (see\r\n   *   {@link PDFDocumentStats}).\r\n   */\r\n\r\n\r\n  getStats() {\r\n    return this._transport.getStats();\r\n  }\r\n  /**\r\n   * Cleans up resources allocated by the document on both the main and worker\r\n   * threads.\r\n   *\r\n   * NOTE: Do not, under any circumstances, call this method when rendering is\r\n   * currently ongoing since that may lead to rendering errors.\r\n   *\r\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\r\n   *   NOTE: This will increase persistent memory usage, hence don't use this\r\n   *   option unless absolutely necessary. The default value is `false`.\r\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\r\n   */\r\n\r\n\r\n  cleanup(keepLoadedFonts = false) {\r\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\r\n  }\r\n  /**\r\n   * Destroys the current document instance and terminates the worker.\r\n   */\r\n\r\n\r\n  destroy() {\r\n    return this.loadingTask.destroy();\r\n  }\r\n  /**\r\n   * @type {DocumentInitParameters} A subset of the current\r\n   *   {DocumentInitParameters}, which are needed in the viewer.\r\n   */\r\n\r\n\r\n  get loadingParams() {\r\n    return this._transport.loadingParams;\r\n  }\r\n  /**\r\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\r\n   */\r\n\r\n\r\n  get loadingTask() {\r\n    return this._transport.loadingTask;\r\n  }\r\n  /**\r\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\r\n   *   {Uint8Array} containing the full data of the saved document.\r\n   */\r\n\r\n\r\n  saveDocument() {\r\n    if ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && this._transport.annotationStorage.size <= 0) {\r\n      deprecated(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\r\n    }\r\n\r\n    return this._transport.saveDocument();\r\n  }\r\n  /**\r\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\r\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\r\n   *   or `null` when no field data is present in the PDF file.\r\n   */\r\n\r\n\r\n  getFieldObjects() {\r\n    return this._transport.getFieldObjects();\r\n  }\r\n  /**\r\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\r\n   *   if some /AcroForm fields have JavaScript actions.\r\n   */\r\n\r\n\r\n  hasJSActions() {\r\n    return this._transport.hasJSActions();\r\n  }\r\n  /**\r\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\r\n   *   {Array<string>} containing IDs of annotations that have a calculation\r\n   *   action, or `null` when no such annotations are present in the PDF file.\r\n   */\r\n\r\n\r\n  getCalculationOrderIds() {\r\n    return this._transport.getCalculationOrderIds();\r\n  }\r\n\r\n}\r\n/**\r\n * Page getViewport parameters.\r\n *\r\n * @typedef {Object} GetViewportParameters\r\n * @property {number} scale - The desired scale of the viewport.\r\n * @property {number} [rotation] - The desired rotation, in degrees, of\r\n *   the viewport. If omitted it defaults to the page rotation.\r\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\r\n *   The default value is `0`.\r\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\r\n *   The default value is `0`.\r\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\r\n *   flipped. The default value is `false`.\r\n */\r\n\r\n/**\r\n * Page getTextContent parameters.\r\n *\r\n * @typedef {Object} getTextContentParameters\r\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\r\n *   whitespace with standard spaces (0x20). The default value is `false`.\r\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\r\n *   same line {@link TextItem}'s. The default value is `false`.\r\n * @property {boolean} [includeMarkedContent] - When true include marked\r\n *   content items in the items array of TextContent. The default is `false`.\r\n */\r\n\r\n/**\r\n * Page text content.\r\n *\r\n * @typedef {Object} TextContent\r\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\r\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\r\n *   items are included when includeMarkedContent is true.\r\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\r\n *   indexed by font name.\r\n */\r\n\r\n/**\r\n * Page text content part.\r\n *\r\n * @typedef {Object} TextItem\r\n * @property {string} str - Text content.\r\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\r\n * @property {Array<any>} transform - Transformation matrix.\r\n * @property {number} width - Width in device space.\r\n * @property {number} height - Height in device space.\r\n * @property {string} fontName - Font name used by PDF.js for converted font.\r\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\r\n *   line-break.\r\n */\r\n\r\n/**\r\n * Page text marked content part.\r\n *\r\n * @typedef {Object} TextMarkedContent\r\n * @property {string} type - Either 'beginMarkedContent',\r\n *   'beginMarkedContentProps', or 'endMarkedContent'.\r\n * @property {string} id - The marked content identifier. Only used for type\r\n *   'beginMarkedContentProps'.\r\n */\r\n\r\n/**\r\n * Text style.\r\n *\r\n * @typedef {Object} TextStyle\r\n * @property {number} ascent - Font ascent.\r\n * @property {number} descent - Font descent.\r\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\r\n * @property {string} fontFamily - The possible font family.\r\n */\r\n\r\n/**\r\n * Page annotation parameters.\r\n *\r\n * @typedef {Object} GetAnnotationsParameters\r\n * @property {string} [intent] - Determines the annotations that are fetched,\r\n *   can be either 'display' (viewable annotations) or 'print' (printable\r\n *   annotations). If the parameter is omitted, all annotations are fetched.\r\n */\r\n\r\n/**\r\n * Page render parameters.\r\n *\r\n * @typedef {Object} RenderParameters\r\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\r\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\r\n *   the `PDFPageProxy.getViewport` method.\r\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\r\n *   The default value is 'display'.\r\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\r\n *   form elements are rendered in the display layer. If so, we do not render\r\n *   them on the canvas as well. The default value is `false`.\r\n * @property {Array<any>} [transform] - Additional transform, applied just\r\n *   before viewport transform.\r\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\r\n *   `endLayout` and `appendImage` functions.\r\n * @property {Object} [canvasFactory] - The factory instance that will be used\r\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\r\n * @property {Object | string} [background] - Background to use for the canvas.\r\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\r\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\r\n *   a `CanvasPattern` object (a repetitive image). The default value is\r\n *   'rgb(255,255,255)'.\r\n * @property {boolean} [includeAnnotationStorage] - Render stored interactive\r\n *   form element data, from the {@link AnnotationStorage}-instance, onto the\r\n *   canvas itself; useful e.g. for printing. The default value is `false`.\r\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\r\n *   A promise that should resolve with an {@link OptionalContentConfig}\r\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\r\n *   the configuration will be fetched automatically with the default visibility\r\n *   states set.\r\n */\r\n\r\n/**\r\n * Page getOperatorList parameters.\r\n *\r\n * @typedef {Object} GetOperatorListParameters\r\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\r\n *   The default value is 'display'.\r\n */\r\n\r\n/**\r\n * Structure tree node. The root node will have a role \"Root\".\r\n *\r\n * @typedef {Object} StructTreeNode\r\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\r\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\r\n * @property {string} role - element's role, already mapped if a role map exists\r\n * in the PDF.\r\n */\r\n\r\n/**\r\n * Structure tree content.\r\n *\r\n * @typedef {Object} StructTreeContent\r\n * @property {string} type - either \"content\" for page and stream structure\r\n *   elements or \"object\" for object references.\r\n * @property {string} id - unique id that will map to the text layer.\r\n */\r\n\r\n/**\r\n * PDF page operator list.\r\n *\r\n * @typedef {Object} PDFOperatorList\r\n * @property {Array<number>} fnArray - Array containing the operator functions.\r\n * @property {Array<any>} argsArray - Array containing the arguments of the\r\n *   functions.\r\n */\r\n\r\n/**\r\n * Proxy to a `PDFPage` in the worker thread.\r\n */\r\n\r\n\r\nclass PDFPageProxy {\r\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\r\n    this._pageIndex = pageIndex;\r\n    this._pageInfo = pageInfo;\r\n    this._ownerDocument = ownerDocument;\r\n    this._transport = transport;\r\n    this._stats = pdfBug ? new StatTimer() : null;\r\n    this._pdfBug = pdfBug;\r\n    this.commonObjs = transport.commonObjs;\r\n    this.objs = new PDFObjects();\r\n    this.cleanupAfterRender = false;\r\n    this.pendingCleanup = false;\r\n    this._intentStates = new Map();\r\n    this.destroyed = false;\r\n  }\r\n  /**\r\n   * @type {number} Page number of the page. First page is 1.\r\n   */\r\n\r\n\r\n  get pageNumber() {\r\n    return this._pageIndex + 1;\r\n  }\r\n  /**\r\n   * @type {number} The number of degrees the page is rotated clockwise.\r\n   */\r\n\r\n\r\n  get rotate() {\r\n    return this._pageInfo.rotate;\r\n  }\r\n  /**\r\n   * @type {RefProxy | null} The reference that points to this page.\r\n   */\r\n\r\n\r\n  get ref() {\r\n    return this._pageInfo.ref;\r\n  }\r\n  /**\r\n   * @type {number} The default size of units in 1/72nds of an inch.\r\n   */\r\n\r\n\r\n  get userUnit() {\r\n    return this._pageInfo.userUnit;\r\n  }\r\n  /**\r\n   * @type {Array<number>} An array of the visible portion of the PDF page in\r\n   *   user space units [x1, y1, x2, y2].\r\n   */\r\n\r\n\r\n  get view() {\r\n    return this._pageInfo.view;\r\n  }\r\n  /**\r\n   * @param {GetViewportParameters} params - Viewport parameters.\r\n   * @returns {PageViewport} Contains 'width' and 'height' properties\r\n   *   along with transforms required for rendering.\r\n   */\r\n\r\n\r\n  getViewport({\r\n    scale,\r\n    rotation = this.rotate,\r\n    offsetX = 0,\r\n    offsetY = 0,\r\n    dontFlip = false\r\n  } = {}) {\r\n    return new PageViewport({\r\n      viewBox: this.view,\r\n      scale,\r\n      rotation,\r\n      offsetX,\r\n      offsetY,\r\n      dontFlip\r\n    });\r\n  }\r\n  /**\r\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\r\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\r\n   *   {Array} of the annotation objects.\r\n   */\r\n\r\n\r\n  getAnnotations({\r\n    intent = null\r\n  } = {}) {\r\n    const renderingIntent = intent === \"display\" || intent === \"print\" ? intent : null;\r\n\r\n    if (!this._annotationsPromise || this._annotationsIntent !== renderingIntent) {\r\n      this._annotationsPromise = this._transport.getAnnotations(this._pageIndex, renderingIntent);\r\n      this._annotationsIntent = renderingIntent;\r\n    }\r\n\r\n    return this._annotationsPromise;\r\n  }\r\n  /**\r\n   * @returns {Promise<Object>} A promise that is resolved with an\r\n   *   {Object} with JS actions.\r\n   */\r\n\r\n\r\n  getJSActions() {\r\n    return this._jsActionsPromise || (this._jsActionsPromise = this._transport.getPageJSActions(this._pageIndex));\r\n  }\r\n  /**\r\n   * @returns {Promise<Object | null>} A promise that is resolved with\r\n   *   an {Object} with a fake DOM object (a tree structure where elements\r\n   *   are {Object} with a name, attributes (class, style, ...), value and\r\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\r\n   */\r\n\r\n\r\n  async getXfa() {\r\n    var _this$_transport$_htm;\r\n\r\n    return ((_this$_transport$_htm = this._transport._htmlForXfa) === null || _this$_transport$_htm === void 0 ? void 0 : _this$_transport$_htm.children[this._pageIndex]) || null;\r\n  }\r\n  /**\r\n   * Begins the process of rendering a page to the desired context.\r\n   *\r\n   * @param {RenderParameters} params - Page render parameters.\r\n   * @returns {RenderTask} An object that contains a promise that is\r\n   *   resolved when the page finishes rendering.\r\n   */\r\n\r\n\r\n  render({\r\n    canvasContext,\r\n    viewport,\r\n    intent = \"display\",\r\n    renderInteractiveForms = false,\r\n    transform = null,\r\n    imageLayer = null,\r\n    canvasFactory = null,\r\n    background = null,\r\n    includeAnnotationStorage = false,\r\n    optionalContentConfigPromise = null\r\n  }) {\r\n    var _intentState;\r\n\r\n    if (this._stats) {\r\n      this._stats.time(\"Overall\");\r\n    }\r\n\r\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\"; // If there was a pending destroy, cancel it so no cleanup happens during\r\n    // this call to render.\r\n\r\n    this.pendingCleanup = false;\r\n\r\n    if (!optionalContentConfigPromise) {\r\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\r\n    }\r\n\r\n    let intentState = this._intentStates.get(renderingIntent);\r\n\r\n    if (!intentState) {\r\n      intentState = Object.create(null);\r\n\r\n      this._intentStates.set(renderingIntent, intentState);\r\n    } // Ensure that a pending `streamReader` cancel timeout is always aborted.\r\n\r\n\r\n    if (intentState.streamReaderCancelTimeout) {\r\n      clearTimeout(intentState.streamReaderCancelTimeout);\r\n      intentState.streamReaderCancelTimeout = null;\r\n    }\r\n\r\n    const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\r\n      ownerDocument: this._ownerDocument\r\n    });\r\n    const annotationStorage = includeAnnotationStorage ? this._transport.annotationStorage.serializable : null; // If there's no displayReadyCapability yet, then the operatorList\r\n    // was never requested before. Make the request and create the promise.\r\n\r\n    if (!intentState.displayReadyCapability) {\r\n      intentState.displayReadyCapability = createPromiseCapability();\r\n      intentState.operatorList = {\r\n        fnArray: [],\r\n        argsArray: [],\r\n        lastChunk: false\r\n      };\r\n\r\n      if (this._stats) {\r\n        this._stats.time(\"Page Request\");\r\n      }\r\n\r\n      this._pumpOperatorList({\r\n        pageIndex: this._pageIndex,\r\n        intent: renderingIntent,\r\n        renderInteractiveForms: renderInteractiveForms === true,\r\n        annotationStorage\r\n      });\r\n    }\r\n\r\n    const complete = error => {\r\n      intentState.renderTasks.delete(internalRenderTask); // Attempt to reduce memory usage during *printing*, by always running\r\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\r\n\r\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\r\n        this.pendingCleanup = true;\r\n      }\r\n\r\n      this._tryCleanup();\r\n\r\n      if (error) {\r\n        internalRenderTask.capability.reject(error);\r\n\r\n        this._abortOperatorList({\r\n          intentState,\r\n          reason: error\r\n        });\r\n      } else {\r\n        internalRenderTask.capability.resolve();\r\n      }\r\n\r\n      if (this._stats) {\r\n        this._stats.timeEnd(\"Rendering\");\r\n\r\n        this._stats.timeEnd(\"Overall\");\r\n      }\r\n    };\r\n\r\n    const internalRenderTask = new InternalRenderTask({\r\n      callback: complete,\r\n      // Only include the required properties, and *not* the entire object.\r\n      params: {\r\n        canvasContext,\r\n        viewport,\r\n        transform,\r\n        imageLayer,\r\n        background\r\n      },\r\n      objs: this.objs,\r\n      commonObjs: this.commonObjs,\r\n      operatorList: intentState.operatorList,\r\n      pageIndex: this._pageIndex,\r\n      canvasFactory: canvasFactoryInstance,\r\n      useRequestAnimationFrame: renderingIntent !== \"print\",\r\n      pdfBug: this._pdfBug\r\n    });\r\n    ((_intentState = intentState).renderTasks || (_intentState.renderTasks = new Set())).add(internalRenderTask);\r\n    const renderTask = internalRenderTask.task;\r\n    Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\r\n      if (this.pendingCleanup) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      if (this._stats) {\r\n        this._stats.time(\"Rendering\");\r\n      }\r\n\r\n      internalRenderTask.initializeGraphics({\r\n        transparency,\r\n        optionalContentConfig\r\n      });\r\n      internalRenderTask.operatorListChanged();\r\n    }).catch(complete);\r\n    return renderTask;\r\n  }\r\n  /**\r\n   * @param {GetOperatorListParameters} params - Page getOperatorList\r\n   *   parameters.\r\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\r\n   *   {@link PDFOperatorList} object that represents the page's operator list.\r\n   */\r\n\r\n\r\n  getOperatorList({\r\n    intent = \"display\"\r\n  } = {}) {\r\n    function operatorListChanged() {\r\n      if (intentState.operatorList.lastChunk) {\r\n        intentState.opListReadCapability.resolve(intentState.operatorList);\r\n        intentState.renderTasks.delete(opListTask);\r\n      }\r\n    }\r\n\r\n    const renderingIntent = `oplist-${intent === \"print\" ? \"print\" : \"display\"}`;\r\n\r\n    let intentState = this._intentStates.get(renderingIntent);\r\n\r\n    if (!intentState) {\r\n      intentState = Object.create(null);\r\n\r\n      this._intentStates.set(renderingIntent, intentState);\r\n    }\r\n\r\n    let opListTask;\r\n\r\n    if (!intentState.opListReadCapability) {\r\n      var _intentState2;\r\n\r\n      opListTask = Object.create(null);\r\n      opListTask.operatorListChanged = operatorListChanged;\r\n      intentState.opListReadCapability = createPromiseCapability();\r\n      ((_intentState2 = intentState).renderTasks || (_intentState2.renderTasks = new Set())).add(opListTask);\r\n      intentState.operatorList = {\r\n        fnArray: [],\r\n        argsArray: [],\r\n        lastChunk: false\r\n      };\r\n\r\n      if (this._stats) {\r\n        this._stats.time(\"Page Request\");\r\n      }\r\n\r\n      this._pumpOperatorList({\r\n        pageIndex: this._pageIndex,\r\n        intent: renderingIntent\r\n      });\r\n    }\r\n\r\n    return intentState.opListReadCapability.promise;\r\n  }\r\n  /**\r\n   * @param {getTextContentParameters} params - getTextContent parameters.\r\n   * @returns {ReadableStream} Stream for reading text content chunks.\r\n   */\r\n\r\n\r\n  streamTextContent({\r\n    normalizeWhitespace = false,\r\n    disableCombineTextItems = false,\r\n    includeMarkedContent = false\r\n  } = {}) {\r\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\r\n    return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\r\n      pageIndex: this._pageIndex,\r\n      normalizeWhitespace: normalizeWhitespace === true,\r\n      combineTextItems: disableCombineTextItems !== true,\r\n      includeMarkedContent: includeMarkedContent === true\r\n    }, {\r\n      highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\r\n\r\n      size(textContent) {\r\n        return textContent.items.length;\r\n      }\r\n\r\n    });\r\n  }\r\n  /**\r\n   * @param {getTextContentParameters} params - getTextContent parameters.\r\n   * @returns {Promise<TextContent>} A promise that is resolved with a\r\n   *   {@link TextContent} object that represents the page's text content.\r\n   */\r\n\r\n\r\n  getTextContent(params = {}) {\r\n    const readableStream = this.streamTextContent(params);\r\n    return new Promise(function (resolve, reject) {\r\n      function pump() {\r\n        reader.read().then(function ({\r\n          value,\r\n          done\r\n        }) {\r\n          if (done) {\r\n            resolve(textContent);\r\n            return;\r\n          }\r\n\r\n          Object.assign(textContent.styles, value.styles);\r\n          textContent.items.push(...value.items);\r\n          pump();\r\n        }, reject);\r\n      }\r\n\r\n      const reader = readableStream.getReader();\r\n      const textContent = {\r\n        items: [],\r\n        styles: Object.create(null)\r\n      };\r\n      pump();\r\n    });\r\n  }\r\n  /**\r\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\r\n   *   {@link StructTreeNode} object that represents the page's structure tree,\r\n   *   or `null` when no structure tree is present for the current page.\r\n   */\r\n\r\n\r\n  getStructTree() {\r\n    return this._structTreePromise || (this._structTreePromise = this._transport.getStructTree(this._pageIndex));\r\n  }\r\n  /**\r\n   * Destroys the page object.\r\n   * @private\r\n   */\r\n\r\n\r\n  _destroy() {\r\n    this.destroyed = true;\r\n    this._transport.pageCache[this._pageIndex] = null;\r\n    const waitOn = [];\r\n\r\n    for (const [intent, intentState] of this._intentStates) {\r\n      this._abortOperatorList({\r\n        intentState,\r\n        reason: new Error(\"Page was destroyed.\"),\r\n        force: true\r\n      });\r\n\r\n      if (intent.startsWith(\"oplist-\")) {\r\n        // Avoid errors below, since the renderTasks are just stubs.\r\n        continue;\r\n      }\r\n\r\n      for (const internalRenderTask of intentState.renderTasks) {\r\n        waitOn.push(internalRenderTask.completed);\r\n        internalRenderTask.cancel();\r\n      }\r\n    }\r\n\r\n    this.objs.clear();\r\n    this._annotationsPromise = null;\r\n    this._jsActionsPromise = null;\r\n    this._structTreePromise = null;\r\n    this.pendingCleanup = false;\r\n    return Promise.all(waitOn);\r\n  }\r\n  /**\r\n   * Cleans up resources allocated by the page.\r\n   *\r\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\r\n   *   The default value is `false`.\r\n   * @returns {boolean} Indicates if clean-up was successfully run.\r\n   */\r\n\r\n\r\n  cleanup(resetStats = false) {\r\n    this.pendingCleanup = true;\r\n    return this._tryCleanup(resetStats);\r\n  }\r\n  /**\r\n   * Attempts to clean up if rendering is in a state where that's possible.\r\n   * @private\r\n   */\r\n\r\n\r\n  _tryCleanup(resetStats = false) {\r\n    if (!this.pendingCleanup) {\r\n      return false;\r\n    }\r\n\r\n    for (const {\r\n      renderTasks,\r\n      operatorList\r\n    } of this._intentStates.values()) {\r\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this._intentStates.clear();\r\n\r\n    this.objs.clear();\r\n    this._annotationsPromise = null;\r\n    this._jsActionsPromise = null;\r\n    this._structTreePromise = null;\r\n\r\n    if (resetStats && this._stats) {\r\n      this._stats = new StatTimer();\r\n    }\r\n\r\n    this.pendingCleanup = false;\r\n    return true;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _startRenderPage(transparency, intent) {\r\n    const intentState = this._intentStates.get(intent);\r\n\r\n    if (!intentState) {\r\n      return; // Rendering was cancelled.\r\n    }\r\n\r\n    if (this._stats) {\r\n      this._stats.timeEnd(\"Page Request\");\r\n    } // TODO Refactor RenderPageRequest to separate rendering\r\n    // and operator list logic\r\n\r\n\r\n    if (intentState.displayReadyCapability) {\r\n      intentState.displayReadyCapability.resolve(transparency);\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _renderPageChunk(operatorListChunk, intentState) {\r\n    // Add the new chunk to the current operator list.\r\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\r\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\r\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\r\n    }\r\n\r\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk; // Notify all the rendering tasks there are more operators to be consumed.\r\n\r\n    for (const internalRenderTask of intentState.renderTasks) {\r\n      internalRenderTask.operatorListChanged();\r\n    }\r\n\r\n    if (operatorListChunk.lastChunk) {\r\n      this._tryCleanup();\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _pumpOperatorList(args) {\r\n    assert(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\r\n\r\n    const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\r\n\r\n    const reader = readableStream.getReader();\r\n\r\n    const intentState = this._intentStates.get(args.intent);\r\n\r\n    intentState.streamReader = reader;\r\n\r\n    const pump = () => {\r\n      reader.read().then(({\r\n        value,\r\n        done\r\n      }) => {\r\n        if (done) {\r\n          intentState.streamReader = null;\r\n          return;\r\n        }\r\n\r\n        if (this._transport.destroyed) {\r\n          return; // Ignore any pending requests if the worker was terminated.\r\n        }\r\n\r\n        this._renderPageChunk(value, intentState);\r\n\r\n        pump();\r\n      }, reason => {\r\n        intentState.streamReader = null;\r\n\r\n        if (this._transport.destroyed) {\r\n          return; // Ignore any pending requests if the worker was terminated.\r\n        }\r\n\r\n        if (intentState.operatorList) {\r\n          // Mark operator list as complete.\r\n          intentState.operatorList.lastChunk = true;\r\n\r\n          for (const internalRenderTask of intentState.renderTasks) {\r\n            internalRenderTask.operatorListChanged();\r\n          }\r\n\r\n          this._tryCleanup();\r\n        }\r\n\r\n        if (intentState.displayReadyCapability) {\r\n          intentState.displayReadyCapability.reject(reason);\r\n        } else if (intentState.opListReadCapability) {\r\n          intentState.opListReadCapability.reject(reason);\r\n        } else {\r\n          throw reason;\r\n        }\r\n      });\r\n    };\r\n\r\n    pump();\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _abortOperatorList({\r\n    intentState,\r\n    reason,\r\n    force = false\r\n  }) {\r\n    assert(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\r\n\r\n    if (!intentState.streamReader) {\r\n      return;\r\n    }\r\n\r\n    if (!force) {\r\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\r\n      // multiple render() calls on the same canvas, won't break all rendering.\r\n      if (intentState.renderTasks.size > 0) {\r\n        return;\r\n      } // Don't immediately abort parsing on the worker-thread when rendering is\r\n      // cancelled, since that will unnecessarily delay re-rendering when (for\r\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\r\n\r\n\r\n      if (reason instanceof RenderingCancelledException) {\r\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\r\n          this._abortOperatorList({\r\n            intentState,\r\n            reason,\r\n            force: true\r\n          });\r\n\r\n          intentState.streamReaderCancelTimeout = null;\r\n        }, RENDERING_CANCELLED_TIMEOUT);\r\n        return;\r\n      }\r\n    }\r\n\r\n    intentState.streamReader.cancel(new AbortException(reason === null || reason === void 0 ? void 0 : reason.message));\r\n    intentState.streamReader = null;\r\n\r\n    if (this._transport.destroyed) {\r\n      return; // Ignore any pending requests if the worker was terminated.\r\n    } // Remove the current `intentState`, since a cancelled `getOperatorList`\r\n    // call on the worker-thread cannot be re-started...\r\n\r\n\r\n    for (const [intent, curIntentState] of this._intentStates) {\r\n      if (curIntentState === intentState) {\r\n        this._intentStates.delete(intent);\r\n\r\n        break;\r\n      }\r\n    } // ... and force clean-up to ensure that any old state is always removed.\r\n\r\n\r\n    this.cleanup();\r\n  }\r\n  /**\r\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\r\n   */\r\n\r\n\r\n  get stats() {\r\n    return this._stats;\r\n  }\r\n\r\n}\r\n\r\nclass LoopbackPort {\r\n  constructor() {\r\n    this._listeners = [];\r\n    this._deferred = Promise.resolve(undefined);\r\n  }\r\n\r\n  postMessage(obj, transfers) {\r\n    function cloneValue(value) {\r\n      // Trying to perform a structured clone close to the spec, including\r\n      // transfers.\r\n      if (typeof value === \"function\" || typeof value === \"symbol\" || value instanceof URL) {\r\n        throw new Error(`LoopbackPort.postMessage - cannot clone: ${value === null || value === void 0 ? void 0 : value.toString()}`);\r\n      }\r\n\r\n      if (typeof value !== \"object\" || value === null) {\r\n        return value;\r\n      }\r\n\r\n      if (cloned.has(value)) {\r\n        // already cloned the object\r\n        return cloned.get(value);\r\n      }\r\n\r\n      let buffer, result;\r\n\r\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\r\n        // We found object with ArrayBuffer (typed array).\r\n        if (transfers !== null && transfers !== void 0 && transfers.includes(buffer)) {\r\n          result = new value.constructor(buffer, value.byteOffset, value.byteLength);\r\n        } else {\r\n          result = new value.constructor(value);\r\n        }\r\n\r\n        cloned.set(value, result);\r\n        return result;\r\n      }\r\n\r\n      if (value instanceof Map) {\r\n        result = new Map();\r\n        cloned.set(value, result); // Adding to cache now for cyclic references.\r\n\r\n        for (const [key, val] of value) {\r\n          result.set(key, cloneValue(val));\r\n        }\r\n\r\n        return result;\r\n      }\r\n\r\n      if (value instanceof Set) {\r\n        result = new Set();\r\n        cloned.set(value, result); // Adding to cache now for cyclic references.\r\n\r\n        for (const val of value) {\r\n          result.add(cloneValue(val));\r\n        }\r\n\r\n        return result;\r\n      }\r\n\r\n      result = Array.isArray(value) ? [] : Object.create(null);\r\n      cloned.set(value, result); // Adding to cache now for cyclic references.\r\n      // Cloning all value and object properties, however ignoring properties\r\n      // defined via getter.\r\n\r\n      for (const i in value) {\r\n        var _value$hasOwnProperty;\r\n\r\n        let desc,\r\n            p = value;\r\n\r\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\r\n          p = Object.getPrototypeOf(p);\r\n        }\r\n\r\n        if (typeof desc.value === \"undefined\") {\r\n          continue;\r\n        }\r\n\r\n        if (typeof desc.value === \"function\" && !((_value$hasOwnProperty = value.hasOwnProperty) !== null && _value$hasOwnProperty !== void 0 && _value$hasOwnProperty.call(value, i))) {\r\n          continue;\r\n        }\r\n\r\n        result[i] = cloneValue(desc.value);\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    const cloned = new WeakMap();\r\n    const event = {\r\n      data: cloneValue(obj)\r\n    };\r\n\r\n    this._deferred.then(() => {\r\n      for (const listener of this._listeners) {\r\n        listener.call(this, event);\r\n      }\r\n    });\r\n  }\r\n\r\n  addEventListener(name, listener) {\r\n    this._listeners.push(listener);\r\n  }\r\n\r\n  removeEventListener(name, listener) {\r\n    const i = this._listeners.indexOf(listener);\r\n\r\n    this._listeners.splice(i, 1);\r\n  }\r\n\r\n  terminate() {\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n}\r\n/**\r\n * @typedef {Object} PDFWorkerParameters\r\n * @property {string} [name] - The name of the worker.\r\n * @property {Object} [port] - The `workerPort` object.\r\n * @property {number} [verbosity] - Controls the logging level; the\r\n *   constants from {@link VerbosityLevel} should be used.\r\n */\r\n\r\n/** @type {any} */\r\n\r\n\r\nconst PDFWorker = function PDFWorkerClosure() {\r\n  const pdfWorkerPorts = new WeakMap();\r\n  let isWorkerDisabled = false;\r\n  let fallbackWorkerSrc;\r\n  let nextFakeWorkerId = 0;\r\n  let fakeWorkerCapability;\r\n\r\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\r\n    // eslint-disable-next-line no-undef\r\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\r\n      // Workers aren't supported in Node.js, force-disabling them there.\r\n      isWorkerDisabled = true;\r\n\r\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\r\n        fallbackWorkerSrc = \"../pdf.worker.js\";\r\n      } else {\r\n        fallbackWorkerSrc = \"./pdf.worker.js\";\r\n      }\r\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\r\n      var _document$currentScri;\r\n\r\n      const pdfjsFilePath = (_document$currentScri = document.currentScript) === null || _document$currentScri === void 0 ? void 0 : _document$currentScri.src;\r\n\r\n      if (pdfjsFilePath) {\r\n        fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function getWorkerSrc() {\r\n    if (GlobalWorkerOptions.workerSrc) {\r\n      return GlobalWorkerOptions.workerSrc;\r\n    }\r\n\r\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\r\n      if (!isNodeJS) {\r\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\r\n      }\r\n\r\n      return fallbackWorkerSrc;\r\n    }\r\n\r\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\r\n  }\r\n\r\n  function getMainThreadWorkerMessageHandler() {\r\n    let mainWorkerMessageHandler;\r\n\r\n    try {\r\n      var _globalThis$pdfjsWork;\r\n\r\n      mainWorkerMessageHandler = (_globalThis$pdfjsWork = globalThis.pdfjsWorker) === null || _globalThis$pdfjsWork === void 0 ? void 0 : _globalThis$pdfjsWork.WorkerMessageHandler;\r\n    } catch (ex) {\r\n      /* Ignore errors. */\r\n    }\r\n\r\n    return mainWorkerMessageHandler || null;\r\n  } // Loads worker code into main thread.\r\n\r\n\r\n  function setupFakeWorkerGlobal() {\r\n    if (fakeWorkerCapability) {\r\n      return fakeWorkerCapability.promise;\r\n    }\r\n\r\n    fakeWorkerCapability = createPromiseCapability();\r\n\r\n    const loader = async function () {\r\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\r\n\r\n      if (mainWorkerMessageHandler) {\r\n        // The worker was already loaded using e.g. a `<script>` tag.\r\n        return mainWorkerMessageHandler;\r\n      }\r\n\r\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\r\n        const worker = await import('./worker.js');\r\n        return worker.WorkerMessageHandler;\r\n      }\r\n\r\n      if (PDFJSDev.test(\"GENERIC\") && isNodeJS && // eslint-disable-next-line no-undef\r\n      typeof __non_webpack_require__ === \"function\") {\r\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\r\n        // statements alone we are thus forced to jump through hoops in order\r\n        // to prevent `Critical dependency: ...` warnings in third-party\r\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\r\n        // https://github.com/webpack/webpack/issues/8826\r\n        //\r\n        // The following hack is based on the assumption that code running in\r\n        // Node.js won't ever be affected by e.g. Content Security Policies that\r\n        // prevent the use of `eval`. If that ever occurs, we should revert this\r\n        // to a normal `__non_webpack_require__` statement and simply document\r\n        // the Webpack warnings instead (telling users to ignore them).\r\n        //\r\n        // eslint-disable-next-line no-eval\r\n        const worker = eval(\"require\")(getWorkerSrc());\r\n        return worker.WorkerMessageHandler;\r\n      }\r\n\r\n      await loadScript(getWorkerSrc());\r\n      return window.pdfjsWorker.WorkerMessageHandler;\r\n    };\r\n\r\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\r\n    return fakeWorkerCapability.promise;\r\n  }\r\n\r\n  function createCDNWrapper(url) {\r\n    // We will rely on blob URL's property to specify origin.\r\n    // We want this function to fail in case if createObjectURL or Blob do not\r\n    // exist or fail for some reason -- our Worker creation will fail anyway.\r\n    const wrapper = \"importScripts('\" + url + \"');\";\r\n    return URL.createObjectURL(new Blob([wrapper]));\r\n  }\r\n  /**\r\n   * PDF.js web worker abstraction that controls the instantiation of PDF\r\n   * documents. Message handlers are used to pass information from the main\r\n   * thread to the worker thread and vice versa. If the creation of a web\r\n   * worker is not possible, a \"fake\" worker will be used instead.\r\n   */\r\n  // eslint-disable-next-line no-shadow\r\n\r\n\r\n  class PDFWorker {\r\n    /**\r\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\r\n     */\r\n    constructor({\r\n      name = null,\r\n      port = null,\r\n      verbosity = getVerbosityLevel()\r\n    } = {}) {\r\n      if (port && pdfWorkerPorts.has(port)) {\r\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\r\n      }\r\n\r\n      this.name = name;\r\n      this.destroyed = false;\r\n      this.postMessageTransfers = true;\r\n      this.verbosity = verbosity;\r\n      this._readyCapability = createPromiseCapability();\r\n      this._port = null;\r\n      this._webWorker = null;\r\n      this._messageHandler = null;\r\n\r\n      if (port) {\r\n        pdfWorkerPorts.set(port, this);\r\n\r\n        this._initializeFromPort(port);\r\n\r\n        return;\r\n      }\r\n\r\n      this._initialize();\r\n    }\r\n\r\n    get promise() {\r\n      return this._readyCapability.promise;\r\n    }\r\n\r\n    get port() {\r\n      return this._port;\r\n    }\r\n\r\n    get messageHandler() {\r\n      return this._messageHandler;\r\n    }\r\n\r\n    _initializeFromPort(port) {\r\n      this._port = port;\r\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\r\n\r\n      this._messageHandler.on(\"ready\", function () {// Ignoring 'ready' event -- MessageHandler shall be already initialized\r\n        // and ready to accept the messages.\r\n      });\r\n\r\n      this._readyCapability.resolve();\r\n    }\r\n\r\n    _initialize() {\r\n      // If worker support isn't disabled explicit and the browser has worker\r\n      // support, create a new web worker and test if it/the browser fulfills\r\n      // all requirements to run parts of pdf.js in a web worker.\r\n      // Right now, the requirement is, that an Uint8Array is still an\r\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\r\n      if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\r\n        let workerSrc = getWorkerSrc();\r\n\r\n        try {\r\n          // Wraps workerSrc path into blob URL, if the former does not belong\r\n          // to the same origin.\r\n          if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && !isSameOrigin(window.location.href, workerSrc)) {\r\n            workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\r\n          } // Some versions of FF can't create a worker on localhost, see:\r\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\r\n\r\n\r\n          const worker = new Worker(workerSrc);\r\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\r\n\r\n          const terminateEarly = () => {\r\n            worker.removeEventListener(\"error\", onWorkerError);\r\n            messageHandler.destroy();\r\n            worker.terminate();\r\n\r\n            if (this.destroyed) {\r\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\r\n            } else {\r\n              // Fall back to fake worker if the termination is caused by an\r\n              // error (e.g. NetworkError / SecurityError).\r\n              this._setupFakeWorker();\r\n            }\r\n          };\r\n\r\n          const onWorkerError = () => {\r\n            if (!this._webWorker) {\r\n              // Worker failed to initialize due to an error. Clean up and fall\r\n              // back to the fake worker.\r\n              terminateEarly();\r\n            }\r\n          };\r\n\r\n          worker.addEventListener(\"error\", onWorkerError);\r\n          messageHandler.on(\"test\", data => {\r\n            worker.removeEventListener(\"error\", onWorkerError);\r\n\r\n            if (this.destroyed) {\r\n              terminateEarly();\r\n              return; // worker was destroyed\r\n            }\r\n\r\n            if (data) {\r\n              // supportTypedArray\r\n              this._messageHandler = messageHandler;\r\n              this._port = worker;\r\n              this._webWorker = worker;\r\n\r\n              if (!data.supportTransfers) {\r\n                this.postMessageTransfers = false;\r\n              }\r\n\r\n              this._readyCapability.resolve(); // Send global setting, e.g. verbosity level.\r\n\r\n\r\n              messageHandler.send(\"configure\", {\r\n                verbosity: this.verbosity\r\n              });\r\n            } else {\r\n              this._setupFakeWorker();\r\n\r\n              messageHandler.destroy();\r\n              worker.terminate();\r\n            }\r\n          });\r\n          messageHandler.on(\"ready\", data => {\r\n            worker.removeEventListener(\"error\", onWorkerError);\r\n\r\n            if (this.destroyed) {\r\n              terminateEarly();\r\n              return; // worker was destroyed\r\n            }\r\n\r\n            try {\r\n              sendTest();\r\n            } catch (e) {\r\n              // We need fallback to a faked worker.\r\n              this._setupFakeWorker();\r\n            }\r\n          });\r\n\r\n          const sendTest = () => {\r\n            const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]); // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\r\n            // typed array. Also, checking if we can use transfers.\r\n\r\n            try {\r\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\r\n            } catch (ex) {\r\n              warn(\"Cannot use postMessage transfers.\");\r\n              testObj[0] = 0;\r\n              messageHandler.send(\"test\", testObj);\r\n            }\r\n          }; // It might take time for worker to initialize (especially when AMD\r\n          // loader is used). We will try to send test immediately, and then\r\n          // when 'ready' message will arrive. The worker shall process only\r\n          // first received 'test'.\r\n\r\n\r\n          sendTest();\r\n          return;\r\n        } catch (e) {\r\n          info(\"The worker has been disabled.\");\r\n        }\r\n      } // Either workers are disabled, not supported or have thrown an exception.\r\n      // Thus, we fallback to a faked worker.\r\n\r\n\r\n      this._setupFakeWorker();\r\n    }\r\n\r\n    _setupFakeWorker() {\r\n      if (!isWorkerDisabled) {\r\n        warn(\"Setting up fake worker.\");\r\n        isWorkerDisabled = true;\r\n      }\r\n\r\n      setupFakeWorkerGlobal().then(WorkerMessageHandler => {\r\n        if (this.destroyed) {\r\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\r\n\r\n          return;\r\n        }\r\n\r\n        const port = new LoopbackPort();\r\n        this._port = port; // All fake workers use the same port, making id unique.\r\n\r\n        const id = \"fake\" + nextFakeWorkerId++; // If the main thread is our worker, setup the handling for the\r\n        // messages -- the main thread sends to it self.\r\n\r\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\r\n        WorkerMessageHandler.setup(workerHandler, port);\r\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\r\n        this._messageHandler = messageHandler;\r\n\r\n        this._readyCapability.resolve(); // Send global setting, e.g. verbosity level.\r\n\r\n\r\n        messageHandler.send(\"configure\", {\r\n          verbosity: this.verbosity\r\n        });\r\n      }).catch(reason => {\r\n        this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\r\n      });\r\n    }\r\n    /**\r\n     * Destroys the worker instance.\r\n     */\r\n\r\n\r\n    destroy() {\r\n      this.destroyed = true;\r\n\r\n      if (this._webWorker) {\r\n        // We need to terminate only web worker created resource.\r\n        this._webWorker.terminate();\r\n\r\n        this._webWorker = null;\r\n      }\r\n\r\n      pdfWorkerPorts.delete(this._port);\r\n      this._port = null;\r\n\r\n      if (this._messageHandler) {\r\n        this._messageHandler.destroy();\r\n\r\n        this._messageHandler = null;\r\n      }\r\n    }\r\n    /**\r\n     * @param {PDFWorkerParameters} params - The worker initialization\r\n     *   parameters.\r\n     */\r\n\r\n\r\n    static fromPort(params) {\r\n      if (!params || !params.port) {\r\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\r\n      }\r\n\r\n      if (pdfWorkerPorts.has(params.port)) {\r\n        return pdfWorkerPorts.get(params.port);\r\n      }\r\n\r\n      return new PDFWorker(params);\r\n    }\r\n\r\n    static getWorkerSrc() {\r\n      return getWorkerSrc();\r\n    }\r\n\r\n  }\r\n\r\n  return PDFWorker;\r\n}();\r\n/**\r\n * For internal use only.\r\n * @ignore\r\n */\r\n\r\n\r\nclass WorkerTransport {\r\n  constructor(messageHandler, loadingTask, networkStream, params) {\r\n    this.messageHandler = messageHandler;\r\n    this.loadingTask = loadingTask;\r\n    this.commonObjs = new PDFObjects();\r\n    this.fontLoader = new FontLoader({\r\n      docId: loadingTask.docId,\r\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\r\n      ownerDocument: params.ownerDocument,\r\n      styleElement: params.styleElement\r\n    });\r\n    this._params = params;\r\n\r\n    if (!params.useWorkerFetch) {\r\n      this.CMapReaderFactory = new params.CMapReaderFactory({\r\n        baseUrl: params.cMapUrl,\r\n        isCompressed: params.cMapPacked\r\n      });\r\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\r\n        baseUrl: params.standardFontDataUrl\r\n      });\r\n    }\r\n\r\n    this.destroyed = false;\r\n    this.destroyCapability = null;\r\n    this._passwordCapability = null;\r\n    this._networkStream = networkStream;\r\n    this._fullReader = null;\r\n    this._lastProgress = null;\r\n    this.pageCache = [];\r\n    this.pagePromises = [];\r\n    this.downloadInfoCapability = createPromiseCapability();\r\n    this.setupMessageHandler();\r\n  }\r\n\r\n  get annotationStorage() {\r\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\r\n  }\r\n\r\n  destroy() {\r\n    if (this.destroyCapability) {\r\n      return this.destroyCapability.promise;\r\n    }\r\n\r\n    this.destroyed = true;\r\n    this.destroyCapability = createPromiseCapability();\r\n\r\n    if (this._passwordCapability) {\r\n      this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\r\n    }\r\n\r\n    const waitOn = []; // We need to wait for all renderings to be completed, e.g.\r\n    // timeout/rAF can take a long time.\r\n\r\n    for (const page of this.pageCache) {\r\n      if (page) {\r\n        waitOn.push(page._destroy());\r\n      }\r\n    }\r\n\r\n    this.pageCache.length = 0;\r\n    this.pagePromises.length = 0; // Allow `AnnotationStorage`-related clean-up when destroying the document.\r\n\r\n    if (this.hasOwnProperty(\"annotationStorage\")) {\r\n      this.annotationStorage.resetModified();\r\n    } // We also need to wait for the worker to finish its long running tasks.\r\n\r\n\r\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\r\n    waitOn.push(terminated);\r\n    Promise.all(waitOn).then(() => {\r\n      this.commonObjs.clear();\r\n      this.fontLoader.clear();\r\n      this._hasJSActionsPromise = null;\r\n\r\n      if (this._networkStream) {\r\n        this._networkStream.cancelAllRequests(new AbortException(\"Worker was terminated.\"));\r\n      }\r\n\r\n      if (this.messageHandler) {\r\n        this.messageHandler.destroy();\r\n        this.messageHandler = null;\r\n      }\r\n\r\n      this.destroyCapability.resolve();\r\n    }, this.destroyCapability.reject);\r\n    return this.destroyCapability.promise;\r\n  }\r\n\r\n  setupMessageHandler() {\r\n    const {\r\n      messageHandler,\r\n      loadingTask\r\n    } = this;\r\n    messageHandler.on(\"GetReader\", (data, sink) => {\r\n      assert(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\r\n      this._fullReader = this._networkStream.getFullReader();\r\n\r\n      this._fullReader.onProgress = evt => {\r\n        this._lastProgress = {\r\n          loaded: evt.loaded,\r\n          total: evt.total\r\n        };\r\n      };\r\n\r\n      sink.onPull = () => {\r\n        this._fullReader.read().then(function ({\r\n          value,\r\n          done\r\n        }) {\r\n          if (done) {\r\n            sink.close();\r\n            return;\r\n          }\r\n\r\n          assert(isArrayBuffer(value), \"GetReader - expected an ArrayBuffer.\"); // Enqueue data chunk into sink, and transfer it\r\n          // to other side as `Transferable` object.\r\n\r\n          sink.enqueue(new Uint8Array(value), 1, [value]);\r\n        }).catch(reason => {\r\n          sink.error(reason);\r\n        });\r\n      };\r\n\r\n      sink.onCancel = reason => {\r\n        this._fullReader.cancel(reason);\r\n\r\n        sink.ready.catch(readyReason => {\r\n          if (this.destroyed) {\r\n            return; // Ignore any pending requests if the worker was terminated.\r\n          }\r\n\r\n          throw readyReason;\r\n        });\r\n      };\r\n    });\r\n    messageHandler.on(\"ReaderHeadersReady\", data => {\r\n      const headersCapability = createPromiseCapability();\r\n      const fullReader = this._fullReader;\r\n      fullReader.headersReady.then(() => {\r\n        // If stream or range are disabled, it's our only way to report\r\n        // loading progress.\r\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\r\n          if (this._lastProgress && loadingTask.onProgress) {\r\n            loadingTask.onProgress(this._lastProgress);\r\n          }\r\n\r\n          fullReader.onProgress = evt => {\r\n            if (loadingTask.onProgress) {\r\n              loadingTask.onProgress({\r\n                loaded: evt.loaded,\r\n                total: evt.total\r\n              });\r\n            }\r\n          };\r\n        }\r\n\r\n        headersCapability.resolve({\r\n          isStreamingSupported: fullReader.isStreamingSupported,\r\n          isRangeSupported: fullReader.isRangeSupported,\r\n          contentLength: fullReader.contentLength\r\n        });\r\n      }, headersCapability.reject);\r\n      return headersCapability.promise;\r\n    });\r\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\r\n      assert(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\r\n\r\n      const rangeReader = this._networkStream.getRangeReader(data.begin, data.end); // When streaming is enabled, it's possible that the data requested here\r\n      // has already been fetched via the `_fullRequestReader` implementation.\r\n      // However, given that the PDF data is loaded asynchronously on the\r\n      // main-thread and then sent via `postMessage` to the worker-thread,\r\n      // it may not have been available during parsing (hence the attempt to\r\n      // use range requests here).\r\n      //\r\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\r\n      // range requests if the data was already loaded but has not been sent to\r\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\r\n\r\n\r\n      if (!rangeReader) {\r\n        sink.close();\r\n        return;\r\n      }\r\n\r\n      sink.onPull = () => {\r\n        rangeReader.read().then(function ({\r\n          value,\r\n          done\r\n        }) {\r\n          if (done) {\r\n            sink.close();\r\n            return;\r\n          }\r\n\r\n          assert(isArrayBuffer(value), \"GetRangeReader - expected an ArrayBuffer.\");\r\n          sink.enqueue(new Uint8Array(value), 1, [value]);\r\n        }).catch(reason => {\r\n          sink.error(reason);\r\n        });\r\n      };\r\n\r\n      sink.onCancel = reason => {\r\n        rangeReader.cancel(reason);\r\n        sink.ready.catch(readyReason => {\r\n          if (this.destroyed) {\r\n            return; // Ignore any pending requests if the worker was terminated.\r\n          }\r\n\r\n          throw readyReason;\r\n        });\r\n      };\r\n    });\r\n    messageHandler.on(\"GetDoc\", ({\r\n      pdfInfo\r\n    }) => {\r\n      this._numPages = pdfInfo.numPages;\r\n      this._htmlForXfa = pdfInfo.htmlForXfa;\r\n      delete pdfInfo.htmlForXfa;\r\n\r\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\r\n    });\r\n    messageHandler.on(\"DocException\", function (ex) {\r\n      let reason;\r\n\r\n      switch (ex.name) {\r\n        case \"PasswordException\":\r\n          reason = new PasswordException(ex.message, ex.code);\r\n          break;\r\n\r\n        case \"InvalidPDFException\":\r\n          reason = new InvalidPDFException(ex.message);\r\n          break;\r\n\r\n        case \"MissingPDFException\":\r\n          reason = new MissingPDFException(ex.message);\r\n          break;\r\n\r\n        case \"UnexpectedResponseException\":\r\n          reason = new UnexpectedResponseException(ex.message, ex.status);\r\n          break;\r\n\r\n        case \"UnknownErrorException\":\r\n          reason = new UnknownErrorException(ex.message, ex.details);\r\n          break;\r\n      }\r\n\r\n      if (!(reason instanceof Error)) {\r\n        const msg = \"DocException - expected a valid Error.\";\r\n\r\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")) {\r\n          unreachable(msg);\r\n        } else {\r\n          warn(msg);\r\n        }\r\n      }\r\n\r\n      loadingTask._capability.reject(reason);\r\n    });\r\n    messageHandler.on(\"PasswordRequest\", exception => {\r\n      this._passwordCapability = createPromiseCapability();\r\n\r\n      if (loadingTask.onPassword) {\r\n        const updatePassword = password => {\r\n          this._passwordCapability.resolve({\r\n            password\r\n          });\r\n        };\r\n\r\n        try {\r\n          loadingTask.onPassword(updatePassword, exception.code);\r\n        } catch (ex) {\r\n          this._passwordCapability.reject(ex);\r\n        }\r\n      } else {\r\n        this._passwordCapability.reject(new PasswordException(exception.message, exception.code));\r\n      }\r\n\r\n      return this._passwordCapability.promise;\r\n    });\r\n    messageHandler.on(\"DataLoaded\", data => {\r\n      // For consistency: Ensure that progress is always reported when the\r\n      // entire PDF file has been loaded, regardless of how it was fetched.\r\n      if (loadingTask.onProgress) {\r\n        loadingTask.onProgress({\r\n          loaded: data.length,\r\n          total: data.length\r\n        });\r\n      }\r\n\r\n      this.downloadInfoCapability.resolve(data);\r\n    });\r\n    messageHandler.on(\"StartRenderPage\", data => {\r\n      if (this.destroyed) {\r\n        return; // Ignore any pending requests if the worker was terminated.\r\n      }\r\n\r\n      const page = this.pageCache[data.pageIndex];\r\n\r\n      page._startRenderPage(data.transparency, data.intent);\r\n    });\r\n    messageHandler.on(\"commonobj\", data => {\r\n      var _globalThis$FontInspe;\r\n\r\n      if (this.destroyed) {\r\n        return; // Ignore any pending requests if the worker was terminated.\r\n      }\r\n\r\n      const [id, type, exportedData] = data;\r\n\r\n      if (this.commonObjs.has(id)) {\r\n        return;\r\n      }\r\n\r\n      switch (type) {\r\n        case \"Font\":\r\n          const params = this._params;\r\n\r\n          if (\"error\" in exportedData) {\r\n            const exportedError = exportedData.error;\r\n            warn(`Error during font loading: ${exportedError}`);\r\n            this.commonObjs.resolve(id, exportedError);\r\n            break;\r\n          }\r\n\r\n          let fontRegistry = null;\r\n\r\n          if (params.pdfBug && (_globalThis$FontInspe = globalThis.FontInspector) !== null && _globalThis$FontInspe !== void 0 && _globalThis$FontInspe.enabled) {\r\n            fontRegistry = {\r\n              registerFont(font, url) {\r\n                globalThis.FontInspector.fontAdded(font, url);\r\n              }\r\n\r\n            };\r\n          }\r\n\r\n          const font = new FontFaceObject(exportedData, {\r\n            isEvalSupported: params.isEvalSupported,\r\n            disableFontFace: params.disableFontFace,\r\n            ignoreErrors: params.ignoreErrors,\r\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\r\n            fontRegistry\r\n          });\r\n          this.fontLoader.bind(font).catch(reason => {\r\n            return messageHandler.sendWithPromise(\"FontFallback\", {\r\n              id\r\n            });\r\n          }).finally(() => {\r\n            if (!params.fontExtraProperties && font.data) {\r\n              // Immediately release the `font.data` property once the font\r\n              // has been attached to the DOM, since it's no longer needed,\r\n              // rather than waiting for a `PDFDocumentProxy.cleanup` call.\r\n              // Since `font.data` could be very large, e.g. in some cases\r\n              // multiple megabytes, this will help reduce memory usage.\r\n              font.data = null;\r\n            }\r\n\r\n            this.commonObjs.resolve(id, font);\r\n          });\r\n          break;\r\n\r\n        case \"FontPath\":\r\n        case \"Image\":\r\n          this.commonObjs.resolve(id, exportedData);\r\n          break;\r\n\r\n        default:\r\n          throw new Error(`Got unknown common object type ${type}`);\r\n      }\r\n    });\r\n    messageHandler.on(\"obj\", data => {\r\n      var _imageData$data;\r\n\r\n      if (this.destroyed) {\r\n        // Ignore any pending requests if the worker was terminated.\r\n        return undefined;\r\n      }\r\n\r\n      const [id, pageIndex, type, imageData] = data;\r\n      const pageProxy = this.pageCache[pageIndex];\r\n\r\n      if (pageProxy.objs.has(id)) {\r\n        return undefined;\r\n      }\r\n\r\n      switch (type) {\r\n        case \"Image\":\r\n          pageProxy.objs.resolve(id, imageData); // Heuristic that will allow us not to store large data.\r\n\r\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\r\n\r\n          if ((imageData === null || imageData === void 0 ? void 0 : (_imageData$data = imageData.data) === null || _imageData$data === void 0 ? void 0 : _imageData$data.length) > MAX_IMAGE_SIZE_TO_STORE) {\r\n            pageProxy.cleanupAfterRender = true;\r\n          }\r\n\r\n          break;\r\n\r\n        case \"Pattern\":\r\n          pageProxy.objs.resolve(id, imageData);\r\n          break;\r\n\r\n        default:\r\n          throw new Error(`Got unknown object type ${type}`);\r\n      }\r\n\r\n      return undefined;\r\n    });\r\n    messageHandler.on(\"DocProgress\", data => {\r\n      if (this.destroyed) {\r\n        return; // Ignore any pending requests if the worker was terminated.\r\n      }\r\n\r\n      if (loadingTask.onProgress) {\r\n        loadingTask.onProgress({\r\n          loaded: data.loaded,\r\n          total: data.total\r\n        });\r\n      }\r\n    });\r\n    messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\r\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\r\n      if (this.destroyed) {\r\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\r\n      }\r\n\r\n      if (!this.CMapReaderFactory) {\r\n        return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\r\n      }\r\n\r\n      return this.CMapReaderFactory.fetch(data);\r\n    });\r\n    messageHandler.on(\"FetchStandardFontData\", data => {\r\n      if (this.destroyed) {\r\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\r\n      }\r\n\r\n      if (!this.StandardFontDataFactory) {\r\n        return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\r\n      }\r\n\r\n      return this.StandardFontDataFactory.fetch(data);\r\n    });\r\n  }\r\n\r\n  _onUnsupportedFeature({\r\n    featureId\r\n  }) {\r\n    if (this.destroyed) {\r\n      return; // Ignore any pending requests if the worker was terminated.\r\n    }\r\n\r\n    if (this.loadingTask.onUnsupportedFeature) {\r\n      this.loadingTask.onUnsupportedFeature(featureId);\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\r\n  }\r\n\r\n  getPage(pageNumber) {\r\n    if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\r\n      return Promise.reject(new Error(\"Invalid page request\"));\r\n    }\r\n\r\n    const pageIndex = pageNumber - 1;\r\n\r\n    if (pageIndex in this.pagePromises) {\r\n      return this.pagePromises[pageIndex];\r\n    }\r\n\r\n    const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\r\n      pageIndex\r\n    }).then(pageInfo => {\r\n      if (this.destroyed) {\r\n        throw new Error(\"Transport destroyed\");\r\n      }\r\n\r\n      const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\r\n      this.pageCache[pageIndex] = page;\r\n      return page;\r\n    });\r\n    this.pagePromises[pageIndex] = promise;\r\n    return promise;\r\n  }\r\n\r\n  getPageIndex(ref) {\r\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\r\n      ref\r\n    }).catch(function (reason) {\r\n      return Promise.reject(new Error(reason));\r\n    });\r\n  }\r\n\r\n  getAnnotations(pageIndex, intent) {\r\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\r\n      pageIndex,\r\n      intent\r\n    });\r\n  }\r\n\r\n  saveDocument() {\r\n    var _this$_fullReader$fil, _this$_fullReader;\r\n\r\n    return this.messageHandler.sendWithPromise(\"SaveDocument\", {\r\n      isPureXfa: !!this._htmlForXfa,\r\n      numPages: this._numPages,\r\n      annotationStorage: this.annotationStorage.serializable,\r\n      filename: (_this$_fullReader$fil = (_this$_fullReader = this._fullReader) === null || _this$_fullReader === void 0 ? void 0 : _this$_fullReader.filename) !== null && _this$_fullReader$fil !== void 0 ? _this$_fullReader$fil : null\r\n    }).finally(() => {\r\n      this.annotationStorage.resetModified();\r\n    });\r\n  }\r\n\r\n  getFieldObjects() {\r\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\r\n  }\r\n\r\n  hasJSActions() {\r\n    return this._hasJSActionsPromise || (this._hasJSActionsPromise = this.messageHandler.sendWithPromise(\"HasJSActions\", null));\r\n  }\r\n\r\n  getCalculationOrderIds() {\r\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\r\n  }\r\n\r\n  getDestinations() {\r\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\r\n  }\r\n\r\n  getDestination(id) {\r\n    if (typeof id !== \"string\") {\r\n      return Promise.reject(new Error(\"Invalid destination request.\"));\r\n    }\r\n\r\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\r\n      id\r\n    });\r\n  }\r\n\r\n  getPageLabels() {\r\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\r\n  }\r\n\r\n  getPageLayout() {\r\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\r\n  }\r\n\r\n  getPageMode() {\r\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\r\n  }\r\n\r\n  getViewerPreferences() {\r\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\r\n  }\r\n\r\n  getOpenAction() {\r\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\r\n  }\r\n\r\n  getAttachments() {\r\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\r\n  }\r\n\r\n  getJavaScript() {\r\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\r\n  }\r\n\r\n  getDocJSActions() {\r\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\r\n  }\r\n\r\n  getPageJSActions(pageIndex) {\r\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\r\n      pageIndex\r\n    });\r\n  }\r\n\r\n  getStructTree(pageIndex) {\r\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\r\n      pageIndex\r\n    });\r\n  }\r\n\r\n  getOutline() {\r\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\r\n  }\r\n\r\n  getOptionalContentConfig() {\r\n    return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\r\n      return new OptionalContentConfig(results);\r\n    });\r\n  }\r\n\r\n  getPermissions() {\r\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\r\n  }\r\n\r\n  getMetadata() {\r\n    return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\r\n      var _this$_fullReader$fil2, _this$_fullReader2, _this$_fullReader$con, _this$_fullReader3;\r\n\r\n      return {\r\n        info: results[0],\r\n        metadata: results[1] ? new Metadata(results[1]) : null,\r\n        contentDispositionFilename: (_this$_fullReader$fil2 = (_this$_fullReader2 = this._fullReader) === null || _this$_fullReader2 === void 0 ? void 0 : _this$_fullReader2.filename) !== null && _this$_fullReader$fil2 !== void 0 ? _this$_fullReader$fil2 : null,\r\n        contentLength: (_this$_fullReader$con = (_this$_fullReader3 = this._fullReader) === null || _this$_fullReader3 === void 0 ? void 0 : _this$_fullReader3.contentLength) !== null && _this$_fullReader$con !== void 0 ? _this$_fullReader$con : null\r\n      };\r\n    });\r\n  }\r\n\r\n  getMarkInfo() {\r\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\r\n  }\r\n\r\n  getStats() {\r\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\r\n  }\r\n\r\n  async startCleanup(keepLoadedFonts = false) {\r\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\r\n\r\n    if (this.destroyed) {\r\n      return; // No need to manually clean-up when destruction has started.\r\n    }\r\n\r\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\r\n      const page = this.pageCache[i];\r\n\r\n      if (!page) {\r\n        continue;\r\n      }\r\n\r\n      const cleanupSuccessful = page.cleanup();\r\n\r\n      if (!cleanupSuccessful) {\r\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\r\n      }\r\n    }\r\n\r\n    this.commonObjs.clear();\r\n\r\n    if (!keepLoadedFonts) {\r\n      this.fontLoader.clear();\r\n    }\r\n\r\n    this._hasJSActionsPromise = null;\r\n  }\r\n\r\n  get loadingParams() {\r\n    const params = this._params;\r\n    return shadow(this, \"loadingParams\", {\r\n      disableAutoFetch: params.disableAutoFetch\r\n    });\r\n  }\r\n\r\n}\r\n/**\r\n * A PDF document and page is built of many objects. E.g. there are objects for\r\n * fonts, images, rendering code, etc. These objects may get processed inside of\r\n * a worker. This class implements some basic methods to manage these objects.\r\n * @ignore\r\n */\r\n\r\n\r\nclass PDFObjects {\r\n  constructor() {\r\n    this._objs = Object.create(null);\r\n  }\r\n  /**\r\n   * Ensures there is an object defined for `objId`.\r\n   * @private\r\n   */\r\n\r\n\r\n  _ensureObj(objId) {\r\n    if (this._objs[objId]) {\r\n      return this._objs[objId];\r\n    }\r\n\r\n    return this._objs[objId] = {\r\n      capability: createPromiseCapability(),\r\n      data: null,\r\n      resolved: false\r\n    };\r\n  }\r\n  /**\r\n   * If called *without* callback, this returns the data of `objId` but the\r\n   * object needs to be resolved. If it isn't, this method throws.\r\n   *\r\n   * If called *with* a callback, the callback is called with the data of the\r\n   * object once the object is resolved. That means, if you call this method\r\n   * and the object is already resolved, the callback gets called right away.\r\n   */\r\n\r\n\r\n  get(objId, callback = null) {\r\n    // If there is a callback, then the get can be async and the object is\r\n    // not required to be resolved right now.\r\n    if (callback) {\r\n      this._ensureObj(objId).capability.promise.then(callback);\r\n\r\n      return null;\r\n    } // If there isn't a callback, the user expects to get the resolved data\r\n    // directly.\r\n\r\n\r\n    const obj = this._objs[objId]; // If there isn't an object yet or the object isn't resolved, then the\r\n    // data isn't ready yet!\r\n\r\n    if (!obj || !obj.resolved) {\r\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\r\n    }\r\n\r\n    return obj.data;\r\n  }\r\n\r\n  has(objId) {\r\n    const obj = this._objs[objId];\r\n    return (obj === null || obj === void 0 ? void 0 : obj.resolved) || false;\r\n  }\r\n  /**\r\n   * Resolves the object `objId` with optional `data`.\r\n   */\r\n\r\n\r\n  resolve(objId, data) {\r\n    const obj = this._ensureObj(objId);\r\n\r\n    obj.resolved = true;\r\n    obj.data = data;\r\n    obj.capability.resolve(data);\r\n  }\r\n\r\n  clear() {\r\n    this._objs = Object.create(null);\r\n  }\r\n\r\n}\r\n/**\r\n * Allows controlling of the rendering tasks.\r\n */\r\n\r\n\r\nclass RenderTask {\r\n  constructor(internalRenderTask) {\r\n    this._internalRenderTask = internalRenderTask;\r\n    /**\r\n     * Callback for incremental rendering -- a function that will be called\r\n     * each time the rendering is paused.  To continue rendering call the\r\n     * function that is the first argument to the callback.\r\n     * @type {function}\r\n     */\r\n\r\n    this.onContinue = null;\r\n  }\r\n  /**\r\n   * Promise for rendering task completion.\r\n   * @type {Promise<void>}\r\n   */\r\n\r\n\r\n  get promise() {\r\n    return this._internalRenderTask.capability.promise;\r\n  }\r\n  /**\r\n   * Cancels the rendering task. If the task is currently rendering it will\r\n   * not be cancelled until graphics pauses with a timeout. The promise that\r\n   * this object extends will be rejected when cancelled.\r\n   */\r\n\r\n\r\n  cancel() {\r\n    this._internalRenderTask.cancel();\r\n  }\r\n\r\n}\r\n/**\r\n * For internal use only.\r\n * @ignore\r\n */\r\n\r\n\r\nconst InternalRenderTask = function InternalRenderTaskClosure() {\r\n  const canvasInRendering = new WeakSet(); // eslint-disable-next-line no-shadow\r\n\r\n  class InternalRenderTask {\r\n    constructor({\r\n      callback,\r\n      params,\r\n      objs,\r\n      commonObjs,\r\n      operatorList,\r\n      pageIndex,\r\n      canvasFactory,\r\n      useRequestAnimationFrame = false,\r\n      pdfBug = false\r\n    }) {\r\n      this.callback = callback;\r\n      this.params = params;\r\n      this.objs = objs;\r\n      this.commonObjs = commonObjs;\r\n      this.operatorListIdx = null;\r\n      this.operatorList = operatorList;\r\n      this._pageIndex = pageIndex;\r\n      this.canvasFactory = canvasFactory;\r\n      this._pdfBug = pdfBug;\r\n      this.running = false;\r\n      this.graphicsReadyCallback = null;\r\n      this.graphicsReady = false;\r\n      this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\r\n      this.cancelled = false;\r\n      this.capability = createPromiseCapability();\r\n      this.task = new RenderTask(this); // caching this-bound methods\r\n\r\n      this._cancelBound = this.cancel.bind(this);\r\n      this._continueBound = this._continue.bind(this);\r\n      this._scheduleNextBound = this._scheduleNext.bind(this);\r\n      this._nextBound = this._next.bind(this);\r\n      this._canvas = params.canvasContext.canvas;\r\n    }\r\n\r\n    get completed() {\r\n      return this.capability.promise.catch(function () {// Ignoring errors, since we only want to know when rendering is\r\n        // no longer pending.\r\n      });\r\n    }\r\n\r\n    initializeGraphics({\r\n      transparency = false,\r\n      optionalContentConfig\r\n    }) {\r\n      var _globalThis$StepperMa;\r\n\r\n      if (this.cancelled) {\r\n        return;\r\n      }\r\n\r\n      if (this._canvas) {\r\n        if (canvasInRendering.has(this._canvas)) {\r\n          throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\r\n        }\r\n\r\n        canvasInRendering.add(this._canvas);\r\n      }\r\n\r\n      if (this._pdfBug && (_globalThis$StepperMa = globalThis.StepperManager) !== null && _globalThis$StepperMa !== void 0 && _globalThis$StepperMa.enabled) {\r\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\r\n        this.stepper.init(this.operatorList);\r\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\r\n      }\r\n\r\n      const {\r\n        canvasContext,\r\n        viewport,\r\n        transform,\r\n        imageLayer,\r\n        background\r\n      } = this.params;\r\n      this.gfx = new CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig);\r\n      this.gfx.beginDrawing({\r\n        transform,\r\n        viewport,\r\n        transparency,\r\n        background\r\n      });\r\n      this.operatorListIdx = 0;\r\n      this.graphicsReady = true;\r\n\r\n      if (this.graphicsReadyCallback) {\r\n        this.graphicsReadyCallback();\r\n      }\r\n    }\r\n\r\n    cancel(error = null) {\r\n      this.running = false;\r\n      this.cancelled = true;\r\n\r\n      if (this.gfx) {\r\n        this.gfx.endDrawing();\r\n      }\r\n\r\n      if (this._canvas) {\r\n        canvasInRendering.delete(this._canvas);\r\n      }\r\n\r\n      this.callback(error || new RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\r\n    }\r\n\r\n    operatorListChanged() {\r\n      if (!this.graphicsReady) {\r\n        if (!this.graphicsReadyCallback) {\r\n          this.graphicsReadyCallback = this._continueBound;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.stepper) {\r\n        this.stepper.updateOperatorList(this.operatorList);\r\n      }\r\n\r\n      if (this.running) {\r\n        return;\r\n      }\r\n\r\n      this._continue();\r\n    }\r\n\r\n    _continue() {\r\n      this.running = true;\r\n\r\n      if (this.cancelled) {\r\n        return;\r\n      }\r\n\r\n      if (this.task.onContinue) {\r\n        this.task.onContinue(this._scheduleNextBound);\r\n      } else {\r\n        this._scheduleNext();\r\n      }\r\n    }\r\n\r\n    _scheduleNext() {\r\n      if (this._useRequestAnimationFrame) {\r\n        window.requestAnimationFrame(() => {\r\n          this._nextBound().catch(this._cancelBound);\r\n        });\r\n      } else {\r\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\r\n      }\r\n    }\r\n\r\n    async _next() {\r\n      if (this.cancelled) {\r\n        return;\r\n      }\r\n\r\n      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\r\n\r\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\r\n        this.running = false;\r\n\r\n        if (this.operatorList.lastChunk) {\r\n          this.gfx.endDrawing();\r\n\r\n          if (this._canvas) {\r\n            canvasInRendering.delete(this._canvas);\r\n          }\r\n\r\n          this.callback();\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  return InternalRenderTask;\r\n}();\r\n/** @type {string} */\r\n\r\n\r\nconst version = typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\r\n/** @type {string} */\r\n\r\nconst build = typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\r\n\r\n/* Copyright 2020 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\r\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\r\n *              introducing any dependencies here since that can lead to an\r\n *              unexpected/unnecessary size increase of the *built* files.\r\n */\r\nfunction makeColorComp(n) {\r\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\r\n} // PDF specifications section 10.3\r\n\r\n\r\nclass ColorConverters {\r\n  static CMYK_G([c, y, m, k]) {\r\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\r\n  }\r\n\r\n  static G_CMYK([g]) {\r\n    return [\"CMYK\", 0, 0, 0, 1 - g];\r\n  }\r\n\r\n  static G_RGB([g]) {\r\n    return [\"RGB\", g, g, g];\r\n  }\r\n\r\n  static G_HTML([g]) {\r\n    const G = makeColorComp(g);\r\n    return `#${G}${G}${G}`;\r\n  }\r\n\r\n  static RGB_G([r, g, b]) {\r\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\r\n  }\r\n\r\n  static RGB_HTML([r, g, b]) {\r\n    const R = makeColorComp(r);\r\n    const G = makeColorComp(g);\r\n    const B = makeColorComp(b);\r\n    return `#${R}${G}${B}`;\r\n  }\r\n\r\n  static T_HTML() {\r\n    return \"#00000000\";\r\n  }\r\n\r\n  static CMYK_RGB([c, y, m, k]) {\r\n    return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\r\n  }\r\n\r\n  static CMYK_HTML(components) {\r\n    return this.RGB_HTML(this.CMYK_RGB(components));\r\n  }\r\n\r\n  static RGB_CMYK([r, g, b]) {\r\n    const c = 1 - r;\r\n    const m = 1 - g;\r\n    const y = 1 - b;\r\n    const k = Math.min(c, m, y);\r\n    return [\"CMYK\", c, m, y, k];\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2014 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @typedef {Object} AnnotationElementParameters\r\n * @property {Object} data\r\n * @property {HTMLDivElement} layer\r\n * @property {PDFPage} page\r\n * @property {PageViewport} viewport\r\n * @property {IPDFLinkService} linkService\r\n * @property {DownloadManager} downloadManager\r\n * @property {AnnotationStorage} [annotationStorage]\r\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\r\n *   for annotation icons. Include trailing slash.\r\n * @property {boolean} renderInteractiveForms\r\n * @property {Object} svgFactory\r\n * @property {boolean} [enableScripting]\r\n * @property {boolean} [hasJSActions]\r\n * @property {Object} [mouseState]\r\n */\r\n\r\nclass AnnotationElementFactory {\r\n  /**\r\n   * @param {AnnotationElementParameters} parameters\r\n   * @returns {AnnotationElement}\r\n   */\r\n  static create(parameters) {\r\n    const subtype = parameters.data.annotationType;\r\n\r\n    switch (subtype) {\r\n      case AnnotationType.LINK:\r\n        return new LinkAnnotationElement(parameters);\r\n\r\n      case AnnotationType.TEXT:\r\n        return new TextAnnotationElement(parameters);\r\n\r\n      case AnnotationType.WIDGET:\r\n        const fieldType = parameters.data.fieldType;\r\n\r\n        switch (fieldType) {\r\n          case \"Tx\":\r\n            return new TextWidgetAnnotationElement(parameters);\r\n\r\n          case \"Btn\":\r\n            if (parameters.data.radioButton) {\r\n              return new RadioButtonWidgetAnnotationElement(parameters);\r\n            } else if (parameters.data.checkBox) {\r\n              return new CheckboxWidgetAnnotationElement(parameters);\r\n            }\r\n\r\n            return new PushButtonWidgetAnnotationElement(parameters);\r\n\r\n          case \"Ch\":\r\n            return new ChoiceWidgetAnnotationElement(parameters);\r\n        }\r\n\r\n        return new WidgetAnnotationElement(parameters);\r\n\r\n      case AnnotationType.POPUP:\r\n        return new PopupAnnotationElement(parameters);\r\n\r\n      case AnnotationType.FREETEXT:\r\n        return new FreeTextAnnotationElement(parameters);\r\n\r\n      case AnnotationType.LINE:\r\n        return new LineAnnotationElement(parameters);\r\n\r\n      case AnnotationType.SQUARE:\r\n        return new SquareAnnotationElement(parameters);\r\n\r\n      case AnnotationType.CIRCLE:\r\n        return new CircleAnnotationElement(parameters);\r\n\r\n      case AnnotationType.POLYLINE:\r\n        return new PolylineAnnotationElement(parameters);\r\n\r\n      case AnnotationType.CARET:\r\n        return new CaretAnnotationElement(parameters);\r\n\r\n      case AnnotationType.INK:\r\n        return new InkAnnotationElement(parameters);\r\n\r\n      case AnnotationType.POLYGON:\r\n        return new PolygonAnnotationElement(parameters);\r\n\r\n      case AnnotationType.HIGHLIGHT:\r\n        return new HighlightAnnotationElement(parameters);\r\n\r\n      case AnnotationType.UNDERLINE:\r\n        return new UnderlineAnnotationElement(parameters);\r\n\r\n      case AnnotationType.SQUIGGLY:\r\n        return new SquigglyAnnotationElement(parameters);\r\n\r\n      case AnnotationType.STRIKEOUT:\r\n        return new StrikeOutAnnotationElement(parameters);\r\n\r\n      case AnnotationType.STAMP:\r\n        return new StampAnnotationElement(parameters);\r\n\r\n      case AnnotationType.FILEATTACHMENT:\r\n        return new FileAttachmentAnnotationElement(parameters);\r\n\r\n      default:\r\n        return new AnnotationElement(parameters);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass AnnotationElement {\r\n  constructor(parameters, {\r\n    isRenderable = false,\r\n    ignoreBorder = false,\r\n    createQuadrilaterals = false\r\n  } = {}) {\r\n    this.isRenderable = isRenderable;\r\n    this.data = parameters.data;\r\n    this.layer = parameters.layer;\r\n    this.page = parameters.page;\r\n    this.viewport = parameters.viewport;\r\n    this.linkService = parameters.linkService;\r\n    this.downloadManager = parameters.downloadManager;\r\n    this.imageResourcesPath = parameters.imageResourcesPath;\r\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\r\n    this.svgFactory = parameters.svgFactory;\r\n    this.annotationStorage = parameters.annotationStorage;\r\n    this.enableScripting = parameters.enableScripting;\r\n    this.hasJSActions = parameters.hasJSActions;\r\n    this._mouseState = parameters.mouseState;\r\n\r\n    if (isRenderable) {\r\n      this.container = this._createContainer(ignoreBorder);\r\n    }\r\n\r\n    if (createQuadrilaterals) {\r\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\r\n    }\r\n  }\r\n  /**\r\n   * Create an empty container for the annotation's HTML element.\r\n   *\r\n   * @private\r\n   * @param {boolean} ignoreBorder\r\n   * @memberof AnnotationElement\r\n   * @returns {HTMLSectionElement}\r\n   */\r\n\r\n\r\n  _createContainer(ignoreBorder = false) {\r\n    const data = this.data,\r\n          page = this.page,\r\n          viewport = this.viewport;\r\n    const container = document.createElement(\"section\");\r\n    let width = data.rect[2] - data.rect[0];\r\n    let height = data.rect[3] - data.rect[1];\r\n    container.setAttribute(\"data-annotation-id\", data.id); // Do *not* modify `data.rect`, since that will corrupt the annotation\r\n    // position on subsequent calls to `_createContainer` (see issue 6804).\r\n\r\n    const rect = Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\r\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\r\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\r\n\r\n    if (!ignoreBorder && data.borderStyle.width > 0) {\r\n      container.style.borderWidth = `${data.borderStyle.width}px`;\r\n\r\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\r\n        // Underline styles only have a bottom border, so we do not need\r\n        // to adjust for all borders. This yields a similar result as\r\n        // Adobe Acrobat/Reader.\r\n        width -= 2 * data.borderStyle.width;\r\n        height -= 2 * data.borderStyle.width;\r\n      }\r\n\r\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\r\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\r\n\r\n      if (horizontalRadius > 0 || verticalRadius > 0) {\r\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\r\n        container.style.borderRadius = radius;\r\n      }\r\n\r\n      switch (data.borderStyle.style) {\r\n        case AnnotationBorderStyleType.SOLID:\r\n          container.style.borderStyle = \"solid\";\r\n          break;\r\n\r\n        case AnnotationBorderStyleType.DASHED:\r\n          container.style.borderStyle = \"dashed\";\r\n          break;\r\n\r\n        case AnnotationBorderStyleType.BEVELED:\r\n          warn(\"Unimplemented border style: beveled\");\r\n          break;\r\n\r\n        case AnnotationBorderStyleType.INSET:\r\n          warn(\"Unimplemented border style: inset\");\r\n          break;\r\n\r\n        case AnnotationBorderStyleType.UNDERLINE:\r\n          container.style.borderBottomStyle = \"solid\";\r\n          break;\r\n      }\r\n\r\n      if (data.color) {\r\n        container.style.borderColor = Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\r\n      } else {\r\n        // Transparent (invisible) border, so do not draw it at all.\r\n        container.style.borderWidth = 0;\r\n      }\r\n    }\r\n\r\n    container.style.left = `${rect[0]}px`;\r\n    container.style.top = `${rect[1]}px`;\r\n    container.style.width = `${width}px`;\r\n    container.style.height = `${height}px`;\r\n    return container;\r\n  }\r\n  /**\r\n   * Create quadrilaterals from the annotation's quadpoints.\r\n   *\r\n   * @private\r\n   * @param {boolean} ignoreBorder\r\n   * @memberof AnnotationElement\r\n   * @returns {Array<HTMLSectionElement>}\r\n   */\r\n\r\n\r\n  _createQuadrilaterals(ignoreBorder = false) {\r\n    if (!this.data.quadPoints) {\r\n      return null;\r\n    }\r\n\r\n    const quadrilaterals = [];\r\n    const savedRect = this.data.rect;\r\n\r\n    for (const quadPoint of this.data.quadPoints) {\r\n      this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\r\n      quadrilaterals.push(this._createContainer(ignoreBorder));\r\n    }\r\n\r\n    this.data.rect = savedRect;\r\n    return quadrilaterals;\r\n  }\r\n  /**\r\n   * Create a popup for the annotation's HTML element. This is used for\r\n   * annotations that do not have a Popup entry in the dictionary, but\r\n   * are of a type that works with popups (such as Highlight annotations).\r\n   *\r\n   * @private\r\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\r\n   * @param {Object} data\r\n   * @memberof AnnotationElement\r\n   */\r\n\r\n\r\n  _createPopup(trigger, data) {\r\n    let container = this.container;\r\n\r\n    if (this.quadrilaterals) {\r\n      trigger = trigger || this.quadrilaterals;\r\n      container = this.quadrilaterals[0];\r\n    } // If no trigger element is specified, create it.\r\n\r\n\r\n    if (!trigger) {\r\n      trigger = document.createElement(\"div\");\r\n      trigger.style.height = container.style.height;\r\n      trigger.style.width = container.style.width;\r\n      container.appendChild(trigger);\r\n    }\r\n\r\n    const popupElement = new PopupElement({\r\n      container,\r\n      trigger,\r\n      color: data.color,\r\n      title: data.title,\r\n      modificationDate: data.modificationDate,\r\n      contents: data.contents,\r\n      hideWrapper: true\r\n    });\r\n    const popup = popupElement.render(); // Position the popup next to the annotation's container.\r\n\r\n    popup.style.left = container.style.width;\r\n    container.appendChild(popup);\r\n  }\r\n  /**\r\n   * Render the quadrilaterals of the annotation.\r\n   *\r\n   * @private\r\n   * @param {string} className\r\n   * @memberof AnnotationElement\r\n   * @returns {Array<HTMLSectionElement>}\r\n   */\r\n\r\n\r\n  _renderQuadrilaterals(className) {\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")) {\r\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\r\n    }\r\n\r\n    for (const quadrilateral of this.quadrilaterals) {\r\n      quadrilateral.className = className;\r\n    }\r\n\r\n    return this.quadrilaterals;\r\n  }\r\n  /**\r\n   * Render the annotation's HTML element(s).\r\n   *\r\n   * @public\r\n   * @memberof AnnotationElement\r\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\r\n   */\r\n\r\n\r\n  render() {\r\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\r\n  }\r\n\r\n}\r\n\r\nclass LinkAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\r\n    super(parameters, {\r\n      isRenderable,\r\n      createQuadrilaterals: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      linkService\r\n    } = this;\r\n    const link = document.createElement(\"a\");\r\n\r\n    if (data.url) {\r\n      addLinkAttributes(link, {\r\n        url: data.url,\r\n        target: data.newWindow ? LinkTarget.BLANK : linkService.externalLinkTarget,\r\n        rel: linkService.externalLinkRel,\r\n        enabled: linkService.externalLinkEnabled\r\n      });\r\n    } else if (data.action) {\r\n      this._bindNamedAction(link, data.action);\r\n    } else if (data.dest) {\r\n      this._bindLink(link, data.dest);\r\n    } else if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\r\n      this._bindJSAction(link, data);\r\n    } else {\r\n      this._bindLink(link, \"\");\r\n    }\r\n\r\n    if (this.quadrilaterals) {\r\n      return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\r\n        const linkElement = index === 0 ? link : link.cloneNode();\r\n        quadrilateral.appendChild(linkElement);\r\n        return quadrilateral;\r\n      });\r\n    }\r\n\r\n    this.container.className = \"linkAnnotation\";\r\n    this.container.appendChild(link);\r\n    return this.container;\r\n  }\r\n  /**\r\n   * Bind internal links to the link element.\r\n   *\r\n   * @private\r\n   * @param {Object} link\r\n   * @param {Object} destination\r\n   * @memberof LinkAnnotationElement\r\n   */\r\n\r\n\r\n  _bindLink(link, destination) {\r\n    link.href = this.linkService.getDestinationHash(destination);\r\n\r\n    link.onclick = () => {\r\n      if (destination) {\r\n        this.linkService.goToDestination(destination);\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    if (destination || destination ===\r\n    /* isTooltipOnly = */\r\n    \"\") {\r\n      link.className = \"internalLink\";\r\n    }\r\n  }\r\n  /**\r\n   * Bind named actions to the link element.\r\n   *\r\n   * @private\r\n   * @param {Object} link\r\n   * @param {Object} action\r\n   * @memberof LinkAnnotationElement\r\n   */\r\n\r\n\r\n  _bindNamedAction(link, action) {\r\n    link.href = this.linkService.getAnchorUrl(\"\");\r\n\r\n    link.onclick = () => {\r\n      this.linkService.executeNamedAction(action);\r\n      return false;\r\n    };\r\n\r\n    link.className = \"internalLink\";\r\n  }\r\n  /**\r\n   * Bind JS actions to the link element.\r\n   *\r\n   * @private\r\n   * @param {Object} link\r\n   * @param {Object} data\r\n   * @memberof LinkAnnotationElement\r\n   */\r\n\r\n\r\n  _bindJSAction(link, data) {\r\n    link.href = this.linkService.getAnchorUrl(\"\");\r\n    const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\r\n\r\n    for (const name of Object.keys(data.actions)) {\r\n      const jsName = map.get(name);\r\n\r\n      if (!jsName) {\r\n        continue;\r\n      }\r\n\r\n      link[jsName] = () => {\r\n        var _this$linkService$eve;\r\n\r\n        (_this$linkService$eve = this.linkService.eventBus) === null || _this$linkService$eve === void 0 ? void 0 : _this$linkService$eve.dispatch(\"dispatcheventinsandbox\", {\r\n          source: this,\r\n          detail: {\r\n            id: data.id,\r\n            name\r\n          }\r\n        });\r\n        return false;\r\n      };\r\n    }\r\n\r\n    link.className = \"internalLink\";\r\n  }\r\n\r\n}\r\n\r\nclass TextAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"textAnnotation\";\r\n    const image = document.createElement(\"img\");\r\n    image.style.height = this.container.style.height;\r\n    image.style.width = this.container.style.width;\r\n    image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\r\n    image.alt = \"[{{type}} Annotation]\";\r\n    image.dataset.l10nId = \"text_annotation_type\";\r\n    image.dataset.l10nArgs = JSON.stringify({\r\n      type: this.data.name\r\n    });\r\n\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(image, this.data);\r\n    }\r\n\r\n    this.container.appendChild(image);\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass WidgetAnnotationElement extends AnnotationElement {\r\n  render() {\r\n    // Show only the container for unsupported field types.\r\n    if (this.data.alternativeText) {\r\n      this.container.title = this.data.alternativeText;\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n  _getKeyModifier(event) {\r\n    return navigator.platform.includes(\"Win\") && event.ctrlKey || navigator.platform.includes(\"Mac\") && event.metaKey;\r\n  }\r\n\r\n  _setEventListener(element, baseName, eventName, valueGetter) {\r\n    if (baseName.includes(\"mouse\")) {\r\n      // Mouse events\r\n      element.addEventListener(baseName, event => {\r\n        var _this$linkService$eve2;\r\n\r\n        (_this$linkService$eve2 = this.linkService.eventBus) === null || _this$linkService$eve2 === void 0 ? void 0 : _this$linkService$eve2.dispatch(\"dispatcheventinsandbox\", {\r\n          source: this,\r\n          detail: {\r\n            id: this.data.id,\r\n            name: eventName,\r\n            value: valueGetter(event),\r\n            shift: event.shiftKey,\r\n            modifier: this._getKeyModifier(event)\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      // Non mouse event\r\n      element.addEventListener(baseName, event => {\r\n        var _this$linkService$eve3;\r\n\r\n        (_this$linkService$eve3 = this.linkService.eventBus) === null || _this$linkService$eve3 === void 0 ? void 0 : _this$linkService$eve3.dispatch(\"dispatcheventinsandbox\", {\r\n          source: this,\r\n          detail: {\r\n            id: this.data.id,\r\n            name: eventName,\r\n            value: event.target.checked\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  _setEventListeners(element, names, getter) {\r\n    for (const [baseName, eventName] of names) {\r\n      var _this$data$actions;\r\n\r\n      if (eventName === \"Action\" || (_this$data$actions = this.data.actions) !== null && _this$data$actions !== void 0 && _this$data$actions[eventName]) {\r\n        this._setEventListener(element, baseName, eventName, getter);\r\n      }\r\n    }\r\n  }\r\n\r\n  _dispatchEventFromSandbox(actions, jsEvent) {\r\n    const setColor = (jsName, styleName, event) => {\r\n      const color = event.detail[jsName];\r\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](color.slice(1));\r\n    };\r\n\r\n    const commonActions = {\r\n      display: event => {\r\n        const hidden = event.detail.display % 2 === 1;\r\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\r\n        this.annotationStorage.setValue(this.data.id, {\r\n          hidden,\r\n          print: event.detail.display === 0 || event.detail.display === 3\r\n        });\r\n      },\r\n      print: event => {\r\n        this.annotationStorage.setValue(this.data.id, {\r\n          print: event.detail.print\r\n        });\r\n      },\r\n      hidden: event => {\r\n        event.target.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\";\r\n        this.annotationStorage.setValue(this.data.id, {\r\n          hidden: event.detail.hidden\r\n        });\r\n      },\r\n      focus: event => {\r\n        setTimeout(() => event.target.focus({\r\n          preventScroll: false\r\n        }), 0);\r\n      },\r\n      userName: event => {\r\n        // tooltip\r\n        event.target.title = event.detail.userName;\r\n      },\r\n      readonly: event => {\r\n        if (event.detail.readonly) {\r\n          event.target.setAttribute(\"readonly\", \"\");\r\n        } else {\r\n          event.target.removeAttribute(\"readonly\");\r\n        }\r\n      },\r\n      required: event => {\r\n        if (event.detail.required) {\r\n          event.target.setAttribute(\"required\", \"\");\r\n        } else {\r\n          event.target.removeAttribute(\"required\");\r\n        }\r\n      },\r\n      bgColor: event => {\r\n        setColor(\"bgColor\", \"backgroundColor\", event);\r\n      },\r\n      fillColor: event => {\r\n        setColor(\"fillColor\", \"backgroundColor\", event);\r\n      },\r\n      fgColor: event => {\r\n        setColor(\"fgColor\", \"color\", event);\r\n      },\r\n      textColor: event => {\r\n        setColor(\"textColor\", \"color\", event);\r\n      },\r\n      borderColor: event => {\r\n        setColor(\"borderColor\", \"borderColor\", event);\r\n      },\r\n      strokeColor: event => {\r\n        setColor(\"strokeColor\", \"borderColor\", event);\r\n      }\r\n    };\r\n\r\n    for (const name of Object.keys(jsEvent.detail)) {\r\n      const action = actions[name] || commonActions[name];\r\n\r\n      if (action) {\r\n        action(jsEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\r\n    super(parameters, {\r\n      isRenderable\r\n    });\r\n  }\r\n\r\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\r\n    const storage = this.annotationStorage;\r\n\r\n    for (const element of document.getElementsByName(base.name)) {\r\n      if (element !== base) {\r\n        element[key] = value;\r\n        const data = Object.create(null);\r\n        data[keyInStorage] = value;\r\n        storage.setValue(element.getAttribute(\"id\"), data);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const storage = this.annotationStorage;\r\n    const id = this.data.id;\r\n    this.container.className = \"textWidgetAnnotation\";\r\n    let element = null;\r\n\r\n    if (this.renderInteractiveForms) {\r\n      // NOTE: We cannot set the values using `element.value` below, since it\r\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\r\n      //       from parsing the elements correctly for the reference tests.\r\n      const storedData = storage.getValue(id, {\r\n        value: this.data.fieldValue,\r\n        valueAsString: this.data.fieldValue\r\n      });\r\n      const textContent = storedData.valueAsString || storedData.value || \"\";\r\n      const elementData = {\r\n        userValue: null,\r\n        formattedValue: null,\r\n        beforeInputSelectionRange: null,\r\n        beforeInputValue: null\r\n      };\r\n\r\n      if (this.data.multiLine) {\r\n        element = document.createElement(\"textarea\");\r\n        element.textContent = textContent;\r\n      } else {\r\n        element = document.createElement(\"input\");\r\n        element.type = \"text\";\r\n        element.setAttribute(\"value\", textContent);\r\n      }\r\n\r\n      elementData.userValue = textContent;\r\n      element.setAttribute(\"id\", id);\r\n      element.addEventListener(\"input\", event => {\r\n        storage.setValue(id, {\r\n          value: event.target.value\r\n        });\r\n        this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\r\n      });\r\n\r\n      let blurListener = event => {\r\n        if (elementData.formattedValue) {\r\n          event.target.value = elementData.formattedValue;\r\n        } // Reset the cursor position to the start of the field (issue 12359).\r\n\r\n\r\n        event.target.scrollLeft = 0;\r\n        elementData.beforeInputSelectionRange = null;\r\n      };\r\n\r\n      if (this.enableScripting && this.hasJSActions) {\r\n        var _this$data$actions2;\r\n\r\n        element.addEventListener(\"focus\", event => {\r\n          if (elementData.userValue) {\r\n            event.target.value = elementData.userValue;\r\n          }\r\n        });\r\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\r\n          const actions = {\r\n            value(event) {\r\n              elementData.userValue = event.detail.value || \"\";\r\n              storage.setValue(id, {\r\n                value: elementData.userValue.toString()\r\n              });\r\n\r\n              if (!elementData.formattedValue) {\r\n                event.target.value = elementData.userValue;\r\n              }\r\n            },\r\n\r\n            valueAsString(event) {\r\n              elementData.formattedValue = event.detail.valueAsString || \"\";\r\n\r\n              if (event.target !== document.activeElement) {\r\n                // Input hasn't the focus so display formatted string\r\n                event.target.value = elementData.formattedValue;\r\n              }\r\n\r\n              storage.setValue(id, {\r\n                formattedValue: elementData.formattedValue\r\n              });\r\n            },\r\n\r\n            selRange(event) {\r\n              const [selStart, selEnd] = event.detail.selRange;\r\n\r\n              if (selStart >= 0 && selEnd < event.target.value.length) {\r\n                event.target.setSelectionRange(selStart, selEnd);\r\n              }\r\n            }\r\n\r\n          };\r\n\r\n          this._dispatchEventFromSandbox(actions, jsEvent);\r\n        }); // Even if the field hasn't any actions\r\n        // leaving it can still trigger some actions with Calculate\r\n\r\n        element.addEventListener(\"keydown\", event => {\r\n          var _this$linkService$eve4;\r\n\r\n          elementData.beforeInputValue = event.target.value; // if the key is one of Escape, Enter or Tab\r\n          // then the data are committed\r\n\r\n          let commitKey = -1;\r\n\r\n          if (event.key === \"Escape\") {\r\n            commitKey = 0;\r\n          } else if (event.key === \"Enter\") {\r\n            commitKey = 2;\r\n          } else if (event.key === \"Tab\") {\r\n            commitKey = 3;\r\n          }\r\n\r\n          if (commitKey === -1) {\r\n            return;\r\n          } // Save the entered value\r\n\r\n\r\n          elementData.userValue = event.target.value;\r\n          (_this$linkService$eve4 = this.linkService.eventBus) === null || _this$linkService$eve4 === void 0 ? void 0 : _this$linkService$eve4.dispatch(\"dispatcheventinsandbox\", {\r\n            source: this,\r\n            detail: {\r\n              id,\r\n              name: \"Keystroke\",\r\n              value: event.target.value,\r\n              willCommit: true,\r\n              commitKey,\r\n              selStart: event.target.selectionStart,\r\n              selEnd: event.target.selectionEnd\r\n            }\r\n          });\r\n        });\r\n        const _blurListener = blurListener;\r\n        blurListener = null;\r\n        element.addEventListener(\"blur\", event => {\r\n          if (this._mouseState.isDown) {\r\n            var _this$linkService$eve5;\r\n\r\n            // Focus out using the mouse: data are committed\r\n            elementData.userValue = event.target.value;\r\n            (_this$linkService$eve5 = this.linkService.eventBus) === null || _this$linkService$eve5 === void 0 ? void 0 : _this$linkService$eve5.dispatch(\"dispatcheventinsandbox\", {\r\n              source: this,\r\n              detail: {\r\n                id,\r\n                name: \"Keystroke\",\r\n                value: event.target.value,\r\n                willCommit: true,\r\n                commitKey: 1,\r\n                selStart: event.target.selectionStart,\r\n                selEnd: event.target.selectionEnd\r\n              }\r\n            });\r\n          }\r\n\r\n          _blurListener(event);\r\n        });\r\n        element.addEventListener(\"mousedown\", event => {\r\n          elementData.beforeInputValue = event.target.value;\r\n          elementData.beforeInputSelectionRange = null;\r\n        });\r\n        element.addEventListener(\"keyup\", event => {\r\n          // keyup is triggered after input\r\n          if (event.target.selectionStart === event.target.selectionEnd) {\r\n            elementData.beforeInputSelectionRange = null;\r\n          }\r\n        });\r\n        element.addEventListener(\"select\", event => {\r\n          elementData.beforeInputSelectionRange = [event.target.selectionStart, event.target.selectionEnd];\r\n        });\r\n\r\n        if ((_this$data$actions2 = this.data.actions) !== null && _this$data$actions2 !== void 0 && _this$data$actions2.Keystroke) {\r\n          // We should use beforeinput but this\r\n          // event isn't available in Firefox\r\n          element.addEventListener(\"input\", event => {\r\n            var _this$linkService$eve6;\r\n\r\n            let selStart = -1;\r\n            let selEnd = -1;\r\n\r\n            if (elementData.beforeInputSelectionRange) {\r\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\r\n            }\r\n\r\n            (_this$linkService$eve6 = this.linkService.eventBus) === null || _this$linkService$eve6 === void 0 ? void 0 : _this$linkService$eve6.dispatch(\"dispatcheventinsandbox\", {\r\n              source: this,\r\n              detail: {\r\n                id,\r\n                name: \"Keystroke\",\r\n                value: elementData.beforeInputValue,\r\n                change: event.data,\r\n                willCommit: false,\r\n                selStart,\r\n                selEnd\r\n              }\r\n            });\r\n          });\r\n        }\r\n\r\n        this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\r\n      }\r\n\r\n      if (blurListener) {\r\n        element.addEventListener(\"blur\", blurListener);\r\n      }\r\n\r\n      element.disabled = this.data.readOnly;\r\n      element.name = this.data.fieldName;\r\n\r\n      if (this.data.maxLen !== null) {\r\n        element.maxLength = this.data.maxLen;\r\n      }\r\n\r\n      if (this.data.comb) {\r\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\r\n        const combWidth = fieldWidth / this.data.maxLen;\r\n        element.classList.add(\"comb\");\r\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\r\n      }\r\n    } else {\r\n      element = document.createElement(\"div\");\r\n      element.textContent = this.data.fieldValue;\r\n      element.style.verticalAlign = \"middle\";\r\n      element.style.display = \"table-cell\";\r\n    }\r\n\r\n    this._setTextStyle(element);\r\n\r\n    this.container.appendChild(element);\r\n    return this.container;\r\n  }\r\n  /**\r\n   * Apply text styles to the text in the element.\r\n   *\r\n   * @private\r\n   * @param {HTMLDivElement} element\r\n   * @memberof TextWidgetAnnotationElement\r\n   */\r\n\r\n\r\n  _setTextStyle(element) {\r\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\r\n    const {\r\n      fontSize,\r\n      fontColor\r\n    } = this.data.defaultAppearanceData;\r\n    const style = element.style; // TODO: If the font-size is zero, calculate it based on the height and\r\n    //       width of the element.\r\n    // Not setting `style.fontSize` will use the default font-size for now.\r\n\r\n    if (fontSize) {\r\n      style.fontSize = `${fontSize}px`;\r\n    }\r\n\r\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\r\n\r\n    if (this.data.textAlignment !== null) {\r\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\r\n  constructor(parameters) {\r\n    super(parameters, {\r\n      isRenderable: parameters.renderInteractiveForms\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const storage = this.annotationStorage;\r\n    const data = this.data;\r\n    const id = data.id;\r\n    let value = storage.getValue(id, {\r\n      value: data.fieldValue && (data.exportValue && data.exportValue === data.fieldValue || !data.exportValue && data.fieldValue !== \"Off\")\r\n    }).value;\r\n\r\n    if (typeof value === \"string\") {\r\n      // The value has been changed through js and set in annotationStorage.\r\n      value = value !== \"Off\";\r\n      storage.setValue(id, {\r\n        value\r\n      });\r\n    }\r\n\r\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\r\n    const element = document.createElement(\"input\");\r\n    element.disabled = data.readOnly;\r\n    element.type = \"checkbox\";\r\n    element.name = this.data.fieldName;\r\n\r\n    if (value) {\r\n      element.setAttribute(\"checked\", true);\r\n    }\r\n\r\n    element.setAttribute(\"id\", id);\r\n    element.addEventListener(\"change\", function (event) {\r\n      const name = event.target.name;\r\n\r\n      for (const checkbox of document.getElementsByName(name)) {\r\n        if (checkbox !== event.target) {\r\n          checkbox.checked = false;\r\n          storage.setValue(checkbox.parentNode.getAttribute(\"data-annotation-id\"), {\r\n            value: false\r\n          });\r\n        }\r\n      }\r\n\r\n      storage.setValue(id, {\r\n        value: event.target.checked\r\n      });\r\n    });\r\n\r\n    if (this.enableScripting && this.hasJSActions) {\r\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\r\n        const actions = {\r\n          value(event) {\r\n            event.target.checked = event.detail.value !== \"Off\";\r\n            storage.setValue(id, {\r\n              value: event.target.checked\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        this._dispatchEventFromSandbox(actions, jsEvent);\r\n      });\r\n\r\n      this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\r\n    }\r\n\r\n    this.container.appendChild(element);\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\r\n  constructor(parameters) {\r\n    super(parameters, {\r\n      isRenderable: parameters.renderInteractiveForms\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\r\n    const storage = this.annotationStorage;\r\n    const data = this.data;\r\n    const id = data.id;\r\n    let value = storage.getValue(id, {\r\n      value: data.fieldValue === data.buttonValue\r\n    }).value;\r\n\r\n    if (typeof value === \"string\") {\r\n      // The value has been changed through js and set in annotationStorage.\r\n      value = value !== data.buttonValue;\r\n      storage.setValue(id, {\r\n        value\r\n      });\r\n    }\r\n\r\n    const element = document.createElement(\"input\");\r\n    element.disabled = data.readOnly;\r\n    element.type = \"radio\";\r\n    element.name = data.fieldName;\r\n\r\n    if (value) {\r\n      element.setAttribute(\"checked\", true);\r\n    }\r\n\r\n    element.setAttribute(\"id\", id);\r\n    element.addEventListener(\"change\", function (event) {\r\n      const {\r\n        target\r\n      } = event;\r\n\r\n      for (const radio of document.getElementsByName(target.name)) {\r\n        if (radio !== target) {\r\n          storage.setValue(radio.getAttribute(\"id\"), {\r\n            value: false\r\n          });\r\n        }\r\n      }\r\n\r\n      storage.setValue(id, {\r\n        value: target.checked\r\n      });\r\n    });\r\n\r\n    if (this.enableScripting && this.hasJSActions) {\r\n      const pdfButtonValue = data.buttonValue;\r\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\r\n        const actions = {\r\n          value(event) {\r\n            const checked = pdfButtonValue === event.detail.value;\r\n\r\n            for (const radio of document.getElementsByName(event.target.name)) {\r\n              const radioId = radio.getAttribute(\"id\");\r\n              radio.checked = radioId === id && checked;\r\n              storage.setValue(radioId, {\r\n                value: radio.checked\r\n              });\r\n            }\r\n          }\r\n\r\n        };\r\n\r\n        this._dispatchEventFromSandbox(actions, jsEvent);\r\n      });\r\n\r\n      this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\r\n    }\r\n\r\n    this.container.appendChild(element);\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\r\n  render() {\r\n    // The rendering and functionality of a push button widget annotation is\r\n    // equal to that of a link annotation, but may have more functionality, such\r\n    // as performing actions on form fields (resetting, submitting, et cetera).\r\n    const container = super.render();\r\n    container.className = \"buttonWidgetAnnotation pushButton\";\r\n\r\n    if (this.data.alternativeText) {\r\n      container.title = this.data.alternativeText;\r\n    }\r\n\r\n    return container;\r\n  }\r\n\r\n}\r\n\r\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\r\n  constructor(parameters) {\r\n    super(parameters, {\r\n      isRenderable: parameters.renderInteractiveForms\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"choiceWidgetAnnotation\";\r\n    const storage = this.annotationStorage;\r\n    const id = this.data.id; // For printing/saving we currently only support choice widgets with one\r\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\r\n    // are not properly printed/saved yet, so we only store the first item in\r\n    // the field value array instead of the entire array. Once support for those\r\n    // two field types is implemented, we should use the same pattern as the\r\n    // other interactive widgets where the return value of `getValue`\r\n    // is used and the full array of field values is stored.\r\n\r\n    storage.getValue(id, {\r\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined\r\n    });\r\n    const selectElement = document.createElement(\"select\");\r\n    selectElement.disabled = this.data.readOnly;\r\n    selectElement.name = this.data.fieldName;\r\n    selectElement.setAttribute(\"id\", id);\r\n\r\n    if (!this.data.combo) {\r\n      // List boxes have a size and (optionally) multiple selection.\r\n      selectElement.size = this.data.options.length;\r\n\r\n      if (this.data.multiSelect) {\r\n        selectElement.multiple = true;\r\n      }\r\n    } // Insert the options into the choice field.\r\n\r\n\r\n    for (const option of this.data.options) {\r\n      const optionElement = document.createElement(\"option\");\r\n      optionElement.textContent = option.displayValue;\r\n      optionElement.value = option.exportValue;\r\n\r\n      if (this.data.fieldValue.includes(option.exportValue)) {\r\n        optionElement.setAttribute(\"selected\", true);\r\n      }\r\n\r\n      selectElement.appendChild(optionElement);\r\n    }\r\n\r\n    const getValue = (event, isExport) => {\r\n      const name = isExport ? \"value\" : \"textContent\";\r\n      const options = event.target.options;\r\n\r\n      if (!event.target.multiple) {\r\n        return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\r\n      }\r\n\r\n      return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\r\n    };\r\n\r\n    const getItems = event => {\r\n      const options = event.target.options;\r\n      return Array.prototype.map.call(options, option => {\r\n        return {\r\n          displayValue: option.textContent,\r\n          exportValue: option.value\r\n        };\r\n      });\r\n    };\r\n\r\n    if (this.enableScripting && this.hasJSActions) {\r\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\r\n        const actions = {\r\n          value(event) {\r\n            const options = selectElement.options;\r\n            const value = event.detail.value;\r\n            const values = new Set(Array.isArray(value) ? value : [value]);\r\n            Array.prototype.forEach.call(options, option => {\r\n              option.selected = values.has(option.value);\r\n            });\r\n            storage.setValue(id, {\r\n              value: getValue(event,\r\n              /* isExport */\r\n              true)\r\n            });\r\n          },\r\n\r\n          multipleSelection(event) {\r\n            selectElement.multiple = true;\r\n          },\r\n\r\n          remove(event) {\r\n            const options = selectElement.options;\r\n            const index = event.detail.remove;\r\n            options[index].selected = false;\r\n            selectElement.remove(index);\r\n\r\n            if (options.length > 0) {\r\n              const i = Array.prototype.findIndex.call(options, option => option.selected);\r\n\r\n              if (i === -1) {\r\n                options[0].selected = true;\r\n              }\r\n            }\r\n\r\n            storage.setValue(id, {\r\n              value: getValue(event,\r\n              /* isExport */\r\n              true),\r\n              items: getItems(event)\r\n            });\r\n          },\r\n\r\n          clear(event) {\r\n            while (selectElement.length !== 0) {\r\n              selectElement.remove(0);\r\n            }\r\n\r\n            storage.setValue(id, {\r\n              value: null,\r\n              items: []\r\n            });\r\n          },\r\n\r\n          insert(event) {\r\n            const {\r\n              index,\r\n              displayValue,\r\n              exportValue\r\n            } = event.detail.insert;\r\n            const optionElement = document.createElement(\"option\");\r\n            optionElement.textContent = displayValue;\r\n            optionElement.value = exportValue;\r\n            selectElement.insertBefore(optionElement, selectElement.children[index]);\r\n            storage.setValue(id, {\r\n              value: getValue(event,\r\n              /* isExport */\r\n              true),\r\n              items: getItems(event)\r\n            });\r\n          },\r\n\r\n          items(event) {\r\n            const {\r\n              items\r\n            } = event.detail;\r\n\r\n            while (selectElement.length !== 0) {\r\n              selectElement.remove(0);\r\n            }\r\n\r\n            for (const item of items) {\r\n              const {\r\n                displayValue,\r\n                exportValue\r\n              } = item;\r\n              const optionElement = document.createElement(\"option\");\r\n              optionElement.textContent = displayValue;\r\n              optionElement.value = exportValue;\r\n              selectElement.appendChild(optionElement);\r\n            }\r\n\r\n            if (selectElement.options.length > 0) {\r\n              selectElement.options[0].selected = true;\r\n            }\r\n\r\n            storage.setValue(id, {\r\n              value: getValue(event,\r\n              /* isExport */\r\n              true),\r\n              items: getItems(event)\r\n            });\r\n          },\r\n\r\n          indices(event) {\r\n            const indices = new Set(event.detail.indices);\r\n            const options = event.target.options;\r\n            Array.prototype.forEach.call(options, (option, i) => {\r\n              option.selected = indices.has(i);\r\n            });\r\n            storage.setValue(id, {\r\n              value: getValue(event,\r\n              /* isExport */\r\n              true)\r\n            });\r\n          },\r\n\r\n          editable(event) {\r\n            event.target.disabled = !event.detail.editable;\r\n          }\r\n\r\n        };\r\n\r\n        this._dispatchEventFromSandbox(actions, jsEvent);\r\n      });\r\n      selectElement.addEventListener(\"input\", event => {\r\n        var _this$linkService$eve7;\r\n\r\n        const exportValue = getValue(event,\r\n        /* isExport */\r\n        true);\r\n        const value = getValue(event,\r\n        /* isExport */\r\n        false);\r\n        storage.setValue(id, {\r\n          value: exportValue\r\n        });\r\n        (_this$linkService$eve7 = this.linkService.eventBus) === null || _this$linkService$eve7 === void 0 ? void 0 : _this$linkService$eve7.dispatch(\"dispatcheventinsandbox\", {\r\n          source: this,\r\n          detail: {\r\n            id,\r\n            name: \"Keystroke\",\r\n            value,\r\n            changeEx: exportValue,\r\n            willCommit: true,\r\n            commitKey: 1,\r\n            keyDown: false\r\n          }\r\n        });\r\n      });\r\n\r\n      this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], event => event.target.checked);\r\n    } else {\r\n      selectElement.addEventListener(\"input\", function (event) {\r\n        storage.setValue(id, {\r\n          value: getValue(event)\r\n        });\r\n      });\r\n    }\r\n\r\n    this.container.appendChild(selectElement);\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass PopupAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // Do not render popup annotations for parent elements with these types as\r\n    // they create the popups themselves (because of custom trigger divs).\r\n    const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\r\n    this.container.className = \"popupAnnotation\";\r\n\r\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\r\n      return this.container;\r\n    }\r\n\r\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\r\n    const parentElements = this.layer.querySelectorAll(selector);\r\n\r\n    if (parentElements.length === 0) {\r\n      return this.container;\r\n    }\r\n\r\n    const popup = new PopupElement({\r\n      container: this.container,\r\n      trigger: Array.from(parentElements),\r\n      color: this.data.color,\r\n      title: this.data.title,\r\n      modificationDate: this.data.modificationDate,\r\n      contents: this.data.contents\r\n    }); // Position the popup next to the parent annotation's container.\r\n    // PDF viewers ignore a popup annotation's rectangle.\r\n\r\n    const page = this.page;\r\n    const rect = Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\r\n    const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\r\n    const popupTop = rect[1];\r\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\r\n    this.container.style.left = `${popupLeft}px`;\r\n    this.container.style.top = `${popupTop}px`;\r\n    this.container.appendChild(popup.render());\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass PopupElement {\r\n  constructor(parameters) {\r\n    this.container = parameters.container;\r\n    this.trigger = parameters.trigger;\r\n    this.color = parameters.color;\r\n    this.title = parameters.title;\r\n    this.modificationDate = parameters.modificationDate;\r\n    this.contents = parameters.contents;\r\n    this.hideWrapper = parameters.hideWrapper || false;\r\n    this.pinned = false;\r\n  }\r\n\r\n  render() {\r\n    const BACKGROUND_ENLIGHT = 0.7;\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.className = \"popupWrapper\"; // For Popup annotations we hide the entire section because it contains\r\n    // only the popup. However, for Text annotations without a separate Popup\r\n    // annotation, we cannot hide the entire container as the image would\r\n    // disappear too. In that special case, hiding the wrapper suffices.\r\n\r\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\r\n    this.hideElement.hidden = true;\r\n    const popup = document.createElement(\"div\");\r\n    popup.className = \"popup\";\r\n    const color = this.color;\r\n\r\n    if (color) {\r\n      // Enlighten the color.\r\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\r\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\r\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\r\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\r\n    }\r\n\r\n    const title = document.createElement(\"h1\");\r\n    title.textContent = this.title;\r\n    popup.appendChild(title); // The modification date is shown in the popup instead of the creation\r\n    // date if it is available and can be parsed correctly, which is\r\n    // consistent with other viewers such as Adobe Acrobat.\r\n\r\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\r\n\r\n    if (dateObject) {\r\n      const modificationDate = document.createElement(\"span\");\r\n      modificationDate.textContent = \"{{date}}, {{time}}\";\r\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\r\n      modificationDate.dataset.l10nArgs = JSON.stringify({\r\n        date: dateObject.toLocaleDateString(),\r\n        time: dateObject.toLocaleTimeString()\r\n      });\r\n      popup.appendChild(modificationDate);\r\n    }\r\n\r\n    const contents = this._formatContents(this.contents);\r\n\r\n    popup.appendChild(contents);\r\n\r\n    if (!Array.isArray(this.trigger)) {\r\n      this.trigger = [this.trigger];\r\n    } // Attach the event listeners to the trigger element.\r\n\r\n\r\n    for (const element of this.trigger) {\r\n      element.addEventListener(\"click\", this._toggle.bind(this));\r\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\r\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\r\n    }\r\n\r\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\r\n    wrapper.appendChild(popup);\r\n    return wrapper;\r\n  }\r\n  /**\r\n   * Format the contents of the popup by adding newlines where necessary.\r\n   *\r\n   * @private\r\n   * @param {string} contents\r\n   * @memberof PopupElement\r\n   * @returns {HTMLParagraphElement}\r\n   */\r\n\r\n\r\n  _formatContents(contents) {\r\n    const p = document.createElement(\"p\");\r\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\r\n\r\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\r\n      const line = lines[i];\r\n      p.appendChild(document.createTextNode(line));\r\n\r\n      if (i < ii - 1) {\r\n        p.appendChild(document.createElement(\"br\"));\r\n      }\r\n    }\r\n\r\n    return p;\r\n  }\r\n  /**\r\n   * Toggle the visibility of the popup.\r\n   *\r\n   * @private\r\n   * @memberof PopupElement\r\n   */\r\n\r\n\r\n  _toggle() {\r\n    if (this.pinned) {\r\n      this._hide(true);\r\n    } else {\r\n      this._show(true);\r\n    }\r\n  }\r\n  /**\r\n   * Show the popup.\r\n   *\r\n   * @private\r\n   * @param {boolean} pin\r\n   * @memberof PopupElement\r\n   */\r\n\r\n\r\n  _show(pin = false) {\r\n    if (pin) {\r\n      this.pinned = true;\r\n    }\r\n\r\n    if (this.hideElement.hidden) {\r\n      this.hideElement.hidden = false;\r\n      this.container.style.zIndex += 1;\r\n    }\r\n  }\r\n  /**\r\n   * Hide the popup.\r\n   *\r\n   * @private\r\n   * @param {boolean} unpin\r\n   * @memberof PopupElement\r\n   */\r\n\r\n\r\n  _hide(unpin = true) {\r\n    if (unpin) {\r\n      this.pinned = false;\r\n    }\r\n\r\n    if (!this.hideElement.hidden && !this.pinned) {\r\n      this.hideElement.hidden = true;\r\n      this.container.style.zIndex -= 1;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass FreeTextAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"freeTextAnnotation\";\r\n\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(null, this.data);\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass LineAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"lineAnnotation\"; // Create an invisible line with the same starting and ending coordinates\r\n    // that acts as the trigger for the popup. Only the line itself should\r\n    // trigger the popup, not the entire container.\r\n\r\n    const data = this.data;\r\n    const width = data.rect[2] - data.rect[0];\r\n    const height = data.rect[3] - data.rect[1];\r\n    const svg = this.svgFactory.create(width, height); // PDF coordinates are calculated from a bottom left origin, so transform\r\n    // the line coordinates to a top left origin for the SVG element.\r\n\r\n    const line = this.svgFactory.createElement(\"svg:line\");\r\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\r\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\r\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\r\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]); // Ensure that the 'stroke-width' is always non-zero, since otherwise it\r\n    // won't be possible to open/close the popup (note e.g. issue 11122).\r\n\r\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\r\n    line.setAttribute(\"stroke\", \"transparent\");\r\n    svg.appendChild(line);\r\n    this.container.append(svg); // Create the popup ourselves so that we can bind it to the line instead\r\n    // of to the entire container (which is the default).\r\n\r\n    this._createPopup(line, data);\r\n\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass SquareAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"squareAnnotation\"; // Create an invisible square with the same rectangle that acts as the\r\n    // trigger for the popup. Only the square itself should trigger the\r\n    // popup, not the entire container.\r\n\r\n    const data = this.data;\r\n    const width = data.rect[2] - data.rect[0];\r\n    const height = data.rect[3] - data.rect[1];\r\n    const svg = this.svgFactory.create(width, height); // The browser draws half of the borders inside the square and half of\r\n    // the borders outside the square by default. This behavior cannot be\r\n    // changed programmatically, so correct for that here.\r\n\r\n    const borderWidth = data.borderStyle.width;\r\n    const square = this.svgFactory.createElement(\"svg:rect\");\r\n    square.setAttribute(\"x\", borderWidth / 2);\r\n    square.setAttribute(\"y\", borderWidth / 2);\r\n    square.setAttribute(\"width\", width - borderWidth);\r\n    square.setAttribute(\"height\", height - borderWidth); // Ensure that the 'stroke-width' is always non-zero, since otherwise it\r\n    // won't be possible to open/close the popup (note e.g. issue 11122).\r\n\r\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\r\n    square.setAttribute(\"stroke\", \"transparent\");\r\n    square.setAttribute(\"fill\", \"none\");\r\n    svg.appendChild(square);\r\n    this.container.append(svg); // Create the popup ourselves so that we can bind it to the square instead\r\n    // of to the entire container (which is the default).\r\n\r\n    this._createPopup(square, data);\r\n\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass CircleAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"circleAnnotation\"; // Create an invisible circle with the same ellipse that acts as the\r\n    // trigger for the popup. Only the circle itself should trigger the\r\n    // popup, not the entire container.\r\n\r\n    const data = this.data;\r\n    const width = data.rect[2] - data.rect[0];\r\n    const height = data.rect[3] - data.rect[1];\r\n    const svg = this.svgFactory.create(width, height); // The browser draws half of the borders inside the circle and half of\r\n    // the borders outside the circle by default. This behavior cannot be\r\n    // changed programmatically, so correct for that here.\r\n\r\n    const borderWidth = data.borderStyle.width;\r\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\r\n    circle.setAttribute(\"cx\", width / 2);\r\n    circle.setAttribute(\"cy\", height / 2);\r\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\r\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2); // Ensure that the 'stroke-width' is always non-zero, since otherwise it\r\n    // won't be possible to open/close the popup (note e.g. issue 11122).\r\n\r\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\r\n    circle.setAttribute(\"stroke\", \"transparent\");\r\n    circle.setAttribute(\"fill\", \"none\");\r\n    svg.appendChild(circle);\r\n    this.container.append(svg); // Create the popup ourselves so that we can bind it to the circle instead\r\n    // of to the entire container (which is the default).\r\n\r\n    this._createPopup(circle, data);\r\n\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass PolylineAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n    this.containerClassName = \"polylineAnnotation\";\r\n    this.svgElementName = \"svg:polyline\";\r\n  }\r\n\r\n  render() {\r\n    this.container.className = this.containerClassName; // Create an invisible polyline with the same points that acts as the\r\n    // trigger for the popup. Only the polyline itself should trigger the\r\n    // popup, not the entire container.\r\n\r\n    const data = this.data;\r\n    const width = data.rect[2] - data.rect[0];\r\n    const height = data.rect[3] - data.rect[1];\r\n    const svg = this.svgFactory.create(width, height); // Convert the vertices array to a single points string that the SVG\r\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\r\n    // calculated from a bottom left origin, so transform the polyline\r\n    // coordinates to a top left origin for the SVG element.\r\n\r\n    let points = [];\r\n\r\n    for (const coordinate of data.vertices) {\r\n      const x = coordinate.x - data.rect[0];\r\n      const y = data.rect[3] - coordinate.y;\r\n      points.push(x + \",\" + y);\r\n    }\r\n\r\n    points = points.join(\" \");\r\n    const polyline = this.svgFactory.createElement(this.svgElementName);\r\n    polyline.setAttribute(\"points\", points); // Ensure that the 'stroke-width' is always non-zero, since otherwise it\r\n    // won't be possible to open/close the popup (note e.g. issue 11122).\r\n\r\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\r\n    polyline.setAttribute(\"stroke\", \"transparent\");\r\n    polyline.setAttribute(\"fill\", \"none\");\r\n    svg.appendChild(polyline);\r\n    this.container.append(svg); // Create the popup ourselves so that we can bind it to the polyline\r\n    // instead of to the entire container (which is the default).\r\n\r\n    this._createPopup(polyline, data);\r\n\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\r\n  constructor(parameters) {\r\n    // Polygons are specific forms of polylines, so reuse their logic.\r\n    super(parameters);\r\n    this.containerClassName = \"polygonAnnotation\";\r\n    this.svgElementName = \"svg:polygon\";\r\n  }\r\n\r\n}\r\n\r\nclass CaretAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"caretAnnotation\";\r\n\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(null, this.data);\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass InkAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n    this.containerClassName = \"inkAnnotation\"; // Use the polyline SVG element since it allows us to use coordinates\r\n    // directly and to draw both straight lines and curves.\r\n\r\n    this.svgElementName = \"svg:polyline\";\r\n  }\r\n\r\n  render() {\r\n    this.container.className = this.containerClassName; // Create an invisible polyline with the same points that acts as the\r\n    // trigger for the popup.\r\n\r\n    const data = this.data;\r\n    const width = data.rect[2] - data.rect[0];\r\n    const height = data.rect[3] - data.rect[1];\r\n    const svg = this.svgFactory.create(width, height);\r\n\r\n    for (const inkList of data.inkLists) {\r\n      // Convert the ink list to a single points string that the SVG\r\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\r\n      // calculated from a bottom left origin, so transform the polyline\r\n      // coordinates to a top left origin for the SVG element.\r\n      let points = [];\r\n\r\n      for (const coordinate of inkList) {\r\n        const x = coordinate.x - data.rect[0];\r\n        const y = data.rect[3] - coordinate.y;\r\n        points.push(`${x},${y}`);\r\n      }\r\n\r\n      points = points.join(\" \");\r\n      const polyline = this.svgFactory.createElement(this.svgElementName);\r\n      polyline.setAttribute(\"points\", points); // Ensure that the 'stroke-width' is always non-zero, since otherwise it\r\n      // won't be possible to open/close the popup (note e.g. issue 11122).\r\n\r\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\r\n      polyline.setAttribute(\"stroke\", \"transparent\");\r\n      polyline.setAttribute(\"fill\", \"none\"); // Create the popup ourselves so that we can bind it to the polyline\r\n      // instead of to the entire container (which is the default).\r\n\r\n      this._createPopup(polyline, data);\r\n\r\n      svg.appendChild(polyline);\r\n    }\r\n\r\n    this.container.append(svg);\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass HighlightAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true,\r\n      createQuadrilaterals: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(null, this.data);\r\n    }\r\n\r\n    if (this.quadrilaterals) {\r\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\r\n    }\r\n\r\n    this.container.className = \"highlightAnnotation\";\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass UnderlineAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true,\r\n      createQuadrilaterals: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(null, this.data);\r\n    }\r\n\r\n    if (this.quadrilaterals) {\r\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\r\n    }\r\n\r\n    this.container.className = \"underlineAnnotation\";\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass SquigglyAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true,\r\n      createQuadrilaterals: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(null, this.data);\r\n    }\r\n\r\n    if (this.quadrilaterals) {\r\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\r\n    }\r\n\r\n    this.container.className = \"squigglyAnnotation\";\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass StrikeOutAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true,\r\n      createQuadrilaterals: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(null, this.data);\r\n    }\r\n\r\n    if (this.quadrilaterals) {\r\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\r\n    }\r\n\r\n    this.container.className = \"strikeoutAnnotation\";\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass StampAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\r\n    super(parameters, {\r\n      isRenderable,\r\n      ignoreBorder: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"stampAnnotation\";\r\n\r\n    if (!this.data.hasPopup) {\r\n      this._createPopup(null, this.data);\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n}\r\n\r\nclass FileAttachmentAnnotationElement extends AnnotationElement {\r\n  constructor(parameters) {\r\n    var _this$linkService$eve8;\r\n\r\n    super(parameters, {\r\n      isRenderable: true\r\n    });\r\n    const {\r\n      filename,\r\n      content\r\n    } = this.data.file;\r\n    this.filename = getFilenameFromUrl(filename);\r\n    this.content = content;\r\n    (_this$linkService$eve8 = this.linkService.eventBus) === null || _this$linkService$eve8 === void 0 ? void 0 : _this$linkService$eve8.dispatch(\"fileattachmentannotation\", {\r\n      source: this,\r\n      id: stringToPDFString(filename),\r\n      filename,\r\n      content\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.container.className = \"fileAttachmentAnnotation\";\r\n    const trigger = document.createElement(\"div\");\r\n    trigger.style.height = this.container.style.height;\r\n    trigger.style.width = this.container.style.width;\r\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\r\n\r\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\r\n      this._createPopup(trigger, this.data);\r\n    }\r\n\r\n    this.container.appendChild(trigger);\r\n    return this.container;\r\n  }\r\n  /**\r\n   * Download the file attachment associated with this annotation.\r\n   *\r\n   * @private\r\n   * @memberof FileAttachmentAnnotationElement\r\n   */\r\n\r\n\r\n  _download() {\r\n    var _this$downloadManager;\r\n\r\n    (_this$downloadManager = this.downloadManager) === null || _this$downloadManager === void 0 ? void 0 : _this$downloadManager.openOrDownloadData(this.container, this.content, this.filename);\r\n  }\r\n\r\n}\r\n/**\r\n * @typedef {Object} AnnotationLayerParameters\r\n * @property {PageViewport} viewport\r\n * @property {HTMLDivElement} div\r\n * @property {Array} annotations\r\n * @property {PDFPage} page\r\n * @property {IPDFLinkService} linkService\r\n * @property {DownloadManager} downloadManager\r\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\r\n *   for annotation icons. Include trailing slash.\r\n * @property {boolean} renderInteractiveForms\r\n * @property {boolean} [enableScripting] - Enable embedded script execution.\r\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\r\n *   The default value is `false`.\r\n */\r\n\r\n\r\nclass AnnotationLayer {\r\n  /**\r\n   * Render a new annotation layer with all annotation elements.\r\n   *\r\n   * @public\r\n   * @param {AnnotationLayerParameters} parameters\r\n   * @memberof AnnotationLayer\r\n   */\r\n  static render(parameters) {\r\n    const sortedAnnotations = [],\r\n          popupAnnotations = []; // Ensure that Popup annotations are handled last, since they're dependant\r\n    // upon the parent annotation having already been rendered (please refer to\r\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\r\n\r\n    for (const data of parameters.annotations) {\r\n      if (!data) {\r\n        continue;\r\n      }\r\n\r\n      if (data.annotationType === AnnotationType.POPUP) {\r\n        popupAnnotations.push(data);\r\n        continue;\r\n      }\r\n\r\n      sortedAnnotations.push(data);\r\n    }\r\n\r\n    if (popupAnnotations.length) {\r\n      sortedAnnotations.push(...popupAnnotations);\r\n    }\r\n\r\n    for (const data of sortedAnnotations) {\r\n      const element = AnnotationElementFactory.create({\r\n        data,\r\n        layer: parameters.div,\r\n        page: parameters.page,\r\n        viewport: parameters.viewport,\r\n        linkService: parameters.linkService,\r\n        downloadManager: parameters.downloadManager,\r\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\r\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\r\n        svgFactory: new DOMSVGFactory(),\r\n        annotationStorage: parameters.annotationStorage || new AnnotationStorage(),\r\n        enableScripting: parameters.enableScripting,\r\n        hasJSActions: parameters.hasJSActions,\r\n        mouseState: parameters.mouseState || {\r\n          isDown: false\r\n        }\r\n      });\r\n\r\n      if (element.isRenderable) {\r\n        const rendered = element.render();\r\n\r\n        if (data.hidden) {\r\n          rendered.style.visibility = \"hidden\";\r\n        }\r\n\r\n        if (Array.isArray(rendered)) {\r\n          for (const renderedElement of rendered) {\r\n            parameters.div.appendChild(renderedElement);\r\n          }\r\n        } else {\r\n          if (element instanceof PopupAnnotationElement) {\r\n            // Popup annotation elements should not be on top of other\r\n            // annotation elements to prevent interfering with mouse events.\r\n            parameters.div.prepend(rendered);\r\n          } else {\r\n            parameters.div.appendChild(rendered);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Update the annotation elements on existing annotation layer.\r\n   *\r\n   * @public\r\n   * @param {AnnotationLayerParameters} parameters\r\n   * @memberof AnnotationLayer\r\n   */\r\n\r\n\r\n  static update(parameters) {\r\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\r\n\r\n    for (const data of parameters.annotations) {\r\n      const elements = parameters.div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\r\n\r\n      if (elements) {\r\n        for (const element of elements) {\r\n          element.style.transform = transform;\r\n        }\r\n      }\r\n    }\r\n\r\n    parameters.div.hidden = false;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2015 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Text layer render parameters.\r\n *\r\n * @typedef {Object} TextLayerRenderParameters\r\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\r\n *   render (the object is returned by the page's `getTextContent` method).\r\n * @property {ReadableStream} [textContentStream] - Text content stream to\r\n *   render (the stream is returned by the page's `streamTextContent` method).\r\n * @property {HTMLElement} container - HTML element that will contain text runs.\r\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\r\n *   viewport to properly layout the text runs.\r\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\r\n *   to the text items of the textContent input. This is output and shall be\r\n *   initially be set to empty array.\r\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\r\n *    the `str` property of the text items of textContent input. This is output\r\n *   and shall be initially be set to empty array.\r\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\r\n *   text runs occurs.\r\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\r\n *   selection enhancement.\r\n */\r\n\r\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\r\nconst DEFAULT_FONT_SIZE = 30;\r\nconst DEFAULT_FONT_ASCENT = 0.8;\r\nconst ascentCache = new Map();\r\nconst AllWhitespaceRegexp = /^\\s+$/g;\r\n\r\nfunction getAscent(fontFamily, ctx) {\r\n  const cachedAscent = ascentCache.get(fontFamily);\r\n\r\n  if (cachedAscent) {\r\n    return cachedAscent;\r\n  }\r\n\r\n  ctx.save();\r\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\r\n  const metrics = ctx.measureText(\"\"); // Both properties aren't available by default in Firefox.\r\n\r\n  let ascent = metrics.fontBoundingBoxAscent;\r\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\r\n\r\n  if (ascent) {\r\n    ctx.restore();\r\n    const ratio = ascent / (ascent + descent);\r\n    ascentCache.set(fontFamily, ratio);\r\n    return ratio;\r\n  } // Try basic heuristic to guess ascent/descent.\r\n  // Draw a g with baseline at 0,0 and then get the line\r\n  // number where a pixel has non-null red component (starting\r\n  // from bottom).\r\n\r\n\r\n  ctx.strokeStyle = \"red\";\r\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\r\n  ctx.strokeText(\"g\", 0, 0);\r\n  let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\r\n  descent = 0;\r\n\r\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\r\n    if (pixels[i] > 0) {\r\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\r\n      break;\r\n    }\r\n  } // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\r\n  // number where a pixel has non-null red component (starting\r\n  // from top).\r\n\r\n\r\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\r\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\r\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\r\n  ascent = 0;\r\n\r\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\r\n    if (pixels[i] > 0) {\r\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\r\n      break;\r\n    }\r\n  }\r\n\r\n  ctx.restore();\r\n\r\n  if (ascent) {\r\n    const ratio = ascent / (ascent + descent);\r\n    ascentCache.set(fontFamily, ratio);\r\n    return ratio;\r\n  }\r\n\r\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\r\n  return DEFAULT_FONT_ASCENT;\r\n}\r\n\r\nfunction appendText(task, geom, styles, ctx) {\r\n  // Initialize all used properties to keep the caches monomorphic.\r\n  const textDiv = document.createElement(\"span\");\r\n  const textDivProperties = {\r\n    angle: 0,\r\n    canvasWidth: 0,\r\n    hasText: geom.str !== \"\",\r\n    hasEOL: geom.hasEOL,\r\n    originalTransform: null,\r\n    paddingBottom: 0,\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    paddingTop: 0,\r\n    scale: 1\r\n  };\r\n\r\n  task._textDivs.push(textDiv);\r\n\r\n  const tx = Util.transform(task._viewport.transform, geom.transform);\r\n  let angle = Math.atan2(tx[1], tx[0]);\r\n  const style = styles[geom.fontName];\r\n\r\n  if (style.vertical) {\r\n    angle += Math.PI / 2;\r\n  }\r\n\r\n  const fontHeight = Math.hypot(tx[2], tx[3]);\r\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\r\n  let left, top;\r\n\r\n  if (angle === 0) {\r\n    left = tx[4];\r\n    top = tx[5] - fontAscent;\r\n  } else {\r\n    left = tx[4] + fontAscent * Math.sin(angle);\r\n    top = tx[5] - fontAscent * Math.cos(angle);\r\n  } // Setting the style properties individually, rather than all at once,\r\n  // should be OK since the `textDiv` isn't appended to the document yet.\r\n\r\n\r\n  textDiv.style.left = `${left}px`;\r\n  textDiv.style.top = `${top}px`;\r\n  textDiv.style.fontSize = `${fontHeight}px`;\r\n  textDiv.style.fontFamily = style.fontFamily; // Keeps screen readers from pausing on every new text span.\r\n\r\n  textDiv.setAttribute(\"role\", \"presentation\");\r\n  textDiv.textContent = geom.str; // geom.dir may be 'ttb' for vertical texts.\r\n\r\n  textDiv.dir = geom.dir; // `fontName` is only used by the FontInspector, and we only use `dataset`\r\n  // here to make the font name available in the debugger.\r\n\r\n  if (task._fontInspectorEnabled) {\r\n    textDiv.dataset.fontName = geom.fontName;\r\n  }\r\n\r\n  if (angle !== 0) {\r\n    textDivProperties.angle = angle * (180 / Math.PI);\r\n  } // We don't bother scaling single-char text divs, because it has very\r\n  // little effect on text highlighting. This makes scrolling on docs with\r\n  // lots of such divs a lot faster.\r\n\r\n\r\n  let shouldScaleText = false;\r\n\r\n  if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) {\r\n    shouldScaleText = true;\r\n  } else if (geom.transform[0] !== geom.transform[3]) {\r\n    const absScaleX = Math.abs(geom.transform[0]),\r\n          absScaleY = Math.abs(geom.transform[3]); // When the horizontal/vertical scaling differs significantly, also scale\r\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\r\n\r\n    if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\r\n      shouldScaleText = true;\r\n    }\r\n  }\r\n\r\n  if (shouldScaleText) {\r\n    if (style.vertical) {\r\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\r\n    } else {\r\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\r\n    }\r\n  }\r\n\r\n  task._textDivProperties.set(textDiv, textDivProperties);\r\n\r\n  if (task._textContentStream) {\r\n    task._layoutText(textDiv);\r\n  }\r\n\r\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\r\n    let angleCos = 1,\r\n        angleSin = 0;\r\n\r\n    if (angle !== 0) {\r\n      angleCos = Math.cos(angle);\r\n      angleSin = Math.sin(angle);\r\n    }\r\n\r\n    const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\r\n    const divHeight = fontHeight;\r\n    let m, b;\r\n\r\n    if (angle !== 0) {\r\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\r\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\r\n    } else {\r\n      b = [left, top, left + divWidth, top + divHeight];\r\n    }\r\n\r\n    task._bounds.push({\r\n      left: b[0],\r\n      top: b[1],\r\n      right: b[2],\r\n      bottom: b[3],\r\n      div: textDiv,\r\n      size: [divWidth, divHeight],\r\n      m\r\n    });\r\n  }\r\n}\r\n\r\nfunction render(task) {\r\n  if (task._canceled) {\r\n    return;\r\n  }\r\n\r\n  const textDivs = task._textDivs;\r\n  const capability = task._capability;\r\n  const textDivsLength = textDivs.length; // No point in rendering many divs as it would make the browser\r\n  // unusable even after the divs are rendered.\r\n\r\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\r\n    task._renderingDone = true;\r\n    capability.resolve();\r\n    return;\r\n  }\r\n\r\n  if (!task._textContentStream) {\r\n    for (let i = 0; i < textDivsLength; i++) {\r\n      task._layoutText(textDivs[i]);\r\n    }\r\n  }\r\n\r\n  task._renderingDone = true;\r\n  capability.resolve();\r\n}\r\n\r\nfunction findPositiveMin(ts, offset, count) {\r\n  let result = 0;\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const t = ts[offset++];\r\n\r\n    if (t > 0) {\r\n      result = result ? Math.min(t, result) : t;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction expand(task) {\r\n  const bounds = task._bounds;\r\n  const viewport = task._viewport;\r\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\r\n\r\n  for (let i = 0; i < expanded.length; i++) {\r\n    const div = bounds[i].div;\r\n\r\n    const divProperties = task._textDivProperties.get(div);\r\n\r\n    if (divProperties.angle === 0) {\r\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\r\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\r\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\r\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\r\n\r\n      task._textDivProperties.set(div, divProperties);\r\n\r\n      continue;\r\n    } // Box is rotated -- trying to find padding so rotated div will not\r\n    // exceed its expanded bounds.\r\n\r\n\r\n    const e = expanded[i],\r\n          b = bounds[i];\r\n    const m = b.m,\r\n          c = m[0],\r\n          s = m[1]; // Finding intersections with expanded box.\r\n\r\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\r\n    const ts = new Float64Array(64);\r\n\r\n    for (let j = 0, jj = points.length; j < jj; j++) {\r\n      const t = Util.applyTransform(points[j], m);\r\n      ts[j + 0] = c && (e.left - t[0]) / c;\r\n      ts[j + 4] = s && (e.top - t[1]) / s;\r\n      ts[j + 8] = c && (e.right - t[0]) / c;\r\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\r\n      ts[j + 16] = s && (e.left - t[0]) / -s;\r\n      ts[j + 20] = c && (e.top - t[1]) / c;\r\n      ts[j + 24] = s && (e.right - t[0]) / -s;\r\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\r\n      ts[j + 32] = c && (e.left - t[0]) / -c;\r\n      ts[j + 36] = s && (e.top - t[1]) / -s;\r\n      ts[j + 40] = c && (e.right - t[0]) / -c;\r\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\r\n      ts[j + 48] = s && (e.left - t[0]) / s;\r\n      ts[j + 52] = c && (e.top - t[1]) / -c;\r\n      ts[j + 56] = s && (e.right - t[0]) / s;\r\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\r\n    } // Not based on math, but to simplify calculations, using cos and sin\r\n    // absolute values to not exceed the box (it can but insignificantly).\r\n\r\n\r\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\r\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\r\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\r\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\r\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\r\n\r\n    task._textDivProperties.set(div, divProperties);\r\n  }\r\n}\r\n\r\nfunction expandBounds(width, height, boxes) {\r\n  const bounds = boxes.map(function (box, i) {\r\n    return {\r\n      x1: box.left,\r\n      y1: box.top,\r\n      x2: box.right,\r\n      y2: box.bottom,\r\n      index: i,\r\n      x1New: undefined,\r\n      x2New: undefined\r\n    };\r\n  });\r\n  expandBoundsLTR(width, bounds);\r\n  const expanded = new Array(boxes.length);\r\n\r\n  for (const b of bounds) {\r\n    const i = b.index;\r\n    expanded[i] = {\r\n      left: b.x1New,\r\n      top: 0,\r\n      right: b.x2New,\r\n      bottom: 0\r\n    };\r\n  } // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\r\n  // array and objects.\r\n\r\n\r\n  boxes.map(function (box, i) {\r\n    const e = expanded[i],\r\n          b = bounds[i];\r\n    b.x1 = box.top;\r\n    b.y1 = width - e.right;\r\n    b.x2 = box.bottom;\r\n    b.y2 = width - e.left;\r\n    b.index = i;\r\n    b.x1New = undefined;\r\n    b.x2New = undefined;\r\n  });\r\n  expandBoundsLTR(height, bounds);\r\n\r\n  for (const b of bounds) {\r\n    const i = b.index;\r\n    expanded[i].top = b.x1New;\r\n    expanded[i].bottom = b.x2New;\r\n  }\r\n\r\n  return expanded;\r\n}\r\n\r\nfunction expandBoundsLTR(width, bounds) {\r\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\r\n  bounds.sort(function (a, b) {\r\n    return a.x1 - b.x1 || a.index - b.index;\r\n  }); // First we see on the horizon is a fake boundary.\r\n\r\n  const fakeBoundary = {\r\n    x1: -Infinity,\r\n    y1: -Infinity,\r\n    x2: 0,\r\n    y2: Infinity,\r\n    index: -1,\r\n    x1New: 0,\r\n    x2New: 0\r\n  };\r\n  const horizon = [{\r\n    start: -Infinity,\r\n    end: Infinity,\r\n    boundary: fakeBoundary\r\n  }];\r\n\r\n  for (const boundary of bounds) {\r\n    // Searching for the affected part of horizon.\r\n    // TODO red-black tree or simple binary search\r\n    let i = 0;\r\n\r\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\r\n      i++;\r\n    }\r\n\r\n    let j = horizon.length - 1;\r\n\r\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\r\n      j--;\r\n    }\r\n\r\n    let horizonPart, affectedBoundary;\r\n    let q,\r\n        k,\r\n        maxXNew = -Infinity;\r\n\r\n    for (q = i; q <= j; q++) {\r\n      horizonPart = horizon[q];\r\n      affectedBoundary = horizonPart.boundary;\r\n      let xNew;\r\n\r\n      if (affectedBoundary.x2 > boundary.x1) {\r\n        // In the middle of the previous element, new x shall be at the\r\n        // boundary start. Extending if further if the affected boundary\r\n        // placed on top of the current one.\r\n        xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\r\n      } else if (affectedBoundary.x2New === undefined) {\r\n        // We have some space in between, new x in middle will be a fair\r\n        // choice.\r\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\r\n      } else {\r\n        // Affected boundary has x2new set, using it as new x.\r\n        xNew = affectedBoundary.x2New;\r\n      }\r\n\r\n      if (xNew > maxXNew) {\r\n        maxXNew = xNew;\r\n      }\r\n    } // Set new x1 for current boundary.\r\n\r\n\r\n    boundary.x1New = maxXNew; // Adjusts new x2 for the affected boundaries.\r\n\r\n    for (q = i; q <= j; q++) {\r\n      horizonPart = horizon[q];\r\n      affectedBoundary = horizonPart.boundary;\r\n\r\n      if (affectedBoundary.x2New === undefined) {\r\n        // Was not set yet, choosing new x if possible.\r\n        if (affectedBoundary.x2 > boundary.x1) {\r\n          // Current and affected boundaries intersect. If affected boundary\r\n          // is placed on top of the current, shrinking the affected.\r\n          if (affectedBoundary.index > boundary.index) {\r\n            affectedBoundary.x2New = affectedBoundary.x2;\r\n          }\r\n        } else {\r\n          affectedBoundary.x2New = maxXNew;\r\n        }\r\n      } else if (affectedBoundary.x2New > maxXNew) {\r\n        // Affected boundary is touching new x, pushing it back.\r\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\r\n      }\r\n    } // Fixing the horizon.\r\n\r\n\r\n    const changedHorizon = [];\r\n    let lastBoundary = null;\r\n\r\n    for (q = i; q <= j; q++) {\r\n      horizonPart = horizon[q];\r\n      affectedBoundary = horizonPart.boundary; // Checking which boundary will be visible.\r\n\r\n      const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\r\n\r\n      if (lastBoundary === useBoundary) {\r\n        // Merging with previous.\r\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\r\n      } else {\r\n        changedHorizon.push({\r\n          start: horizonPart.start,\r\n          end: horizonPart.end,\r\n          boundary: useBoundary\r\n        });\r\n        lastBoundary = useBoundary;\r\n      }\r\n    }\r\n\r\n    if (horizon[i].start < boundary.y1) {\r\n      changedHorizon[0].start = boundary.y1;\r\n      changedHorizon.unshift({\r\n        start: horizon[i].start,\r\n        end: boundary.y1,\r\n        boundary: horizon[i].boundary\r\n      });\r\n    }\r\n\r\n    if (boundary.y2 < horizon[j].end) {\r\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\r\n      changedHorizon.push({\r\n        start: boundary.y2,\r\n        end: horizon[j].end,\r\n        boundary: horizon[j].boundary\r\n      });\r\n    } // Set x2 new of boundary that is no longer visible (see overlapping case\r\n    // above).\r\n    // TODO more efficient, e.g. via reference counting.\r\n\r\n\r\n    for (q = i; q <= j; q++) {\r\n      horizonPart = horizon[q];\r\n      affectedBoundary = horizonPart.boundary;\r\n\r\n      if (affectedBoundary.x2New !== undefined) {\r\n        continue;\r\n      }\r\n\r\n      let used = false;\r\n\r\n      for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\r\n        used = horizon[k].boundary === affectedBoundary;\r\n      }\r\n\r\n      for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\r\n        used = horizon[k].boundary === affectedBoundary;\r\n      }\r\n\r\n      for (k = 0; !used && k < changedHorizon.length; k++) {\r\n        used = changedHorizon[k].boundary === affectedBoundary;\r\n      }\r\n\r\n      if (!used) {\r\n        affectedBoundary.x2New = maxXNew;\r\n      }\r\n    }\r\n\r\n    Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\r\n  } // Set new x2 for all unset boundaries.\r\n\r\n\r\n  for (const horizonPart of horizon) {\r\n    const affectedBoundary = horizonPart.boundary;\r\n\r\n    if (affectedBoundary.x2New === undefined) {\r\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\r\n    }\r\n  }\r\n}\r\n\r\nclass TextLayerRenderTask {\r\n  constructor({\r\n    textContent,\r\n    textContentStream,\r\n    container,\r\n    viewport,\r\n    textDivs,\r\n    textContentItemsStr,\r\n    enhanceTextSelection\r\n  }) {\r\n    var _globalThis$FontInspe;\r\n\r\n    this._textContent = textContent;\r\n    this._textContentStream = textContentStream;\r\n    this._container = container;\r\n    this._document = container.ownerDocument;\r\n    this._viewport = viewport;\r\n    this._textDivs = textDivs || [];\r\n    this._textContentItemsStr = textContentItemsStr || [];\r\n    this._enhanceTextSelection = !!enhanceTextSelection;\r\n    this._fontInspectorEnabled = !!((_globalThis$FontInspe = globalThis.FontInspector) !== null && _globalThis$FontInspe !== void 0 && _globalThis$FontInspe.enabled);\r\n    this._reader = null;\r\n    this._layoutTextLastFontSize = null;\r\n    this._layoutTextLastFontFamily = null;\r\n    this._layoutTextCtx = null;\r\n    this._textDivProperties = new WeakMap();\r\n    this._renderingDone = false;\r\n    this._canceled = false;\r\n    this._capability = createPromiseCapability();\r\n    this._renderTimer = null;\r\n    this._bounds = []; // Always clean-up the temporary canvas once rendering is no longer pending.\r\n\r\n    this._capability.promise.finally(() => {\r\n      if (this._layoutTextCtx) {\r\n        // Zeroing the width and height cause Firefox to release graphics\r\n        // resources immediately, which can greatly reduce memory consumption.\r\n        this._layoutTextCtx.canvas.width = 0;\r\n        this._layoutTextCtx.canvas.height = 0;\r\n        this._layoutTextCtx = null;\r\n      }\r\n    }).catch(() => {\r\n      /* Avoid \"Uncaught promise\" messages in the console. */\r\n    });\r\n  }\r\n  /**\r\n   * Promise for textLayer rendering task completion.\r\n   * @type {Promise<void>}\r\n   */\r\n\r\n\r\n  get promise() {\r\n    return this._capability.promise;\r\n  }\r\n  /**\r\n   * Cancel rendering of the textLayer.\r\n   */\r\n\r\n\r\n  cancel() {\r\n    this._canceled = true;\r\n\r\n    if (this._reader) {\r\n      this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\r\n\r\n      this._reader = null;\r\n    }\r\n\r\n    if (this._renderTimer !== null) {\r\n      clearTimeout(this._renderTimer);\r\n      this._renderTimer = null;\r\n    }\r\n\r\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _processItems(items, styleCache) {\r\n    for (let i = 0, len = items.length; i < len; i++) {\r\n      if (items[i].str === undefined) {\r\n        if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") {\r\n          const parent = this._container;\r\n          this._container = document.createElement(\"span\");\r\n\r\n          this._container.classList.add(\"markedContent\");\r\n\r\n          if (items[i].id !== null) {\r\n            this._container.setAttribute(\"id\", `${items[i].id}`);\r\n          }\r\n\r\n          parent.appendChild(this._container);\r\n        } else if (items[i].type === \"endMarkedContent\") {\r\n          this._container = this._container.parentNode;\r\n        }\r\n\r\n        continue;\r\n      }\r\n\r\n      this._textContentItemsStr.push(items[i].str);\r\n\r\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _layoutText(textDiv) {\r\n    const textDivProperties = this._textDivProperties.get(textDiv);\r\n\r\n    let transform = \"\";\r\n\r\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\r\n      const {\r\n        fontSize,\r\n        fontFamily\r\n      } = textDiv.style; // Only build font string and set to context if different from last.\r\n\r\n      if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\r\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\r\n        this._layoutTextLastFontSize = fontSize;\r\n        this._layoutTextLastFontFamily = fontFamily;\r\n      } // Only measure the width for multi-char text divs, see `appendText`.\r\n\r\n\r\n      const {\r\n        width\r\n      } = this._layoutTextCtx.measureText(textDiv.textContent);\r\n\r\n      if (width > 0) {\r\n        textDivProperties.scale = textDivProperties.canvasWidth / width;\r\n        transform = `scaleX(${textDivProperties.scale})`;\r\n      }\r\n    }\r\n\r\n    if (textDivProperties.angle !== 0) {\r\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\r\n    }\r\n\r\n    if (transform.length > 0) {\r\n      if (this._enhanceTextSelection) {\r\n        textDivProperties.originalTransform = transform;\r\n      }\r\n\r\n      textDiv.style.transform = transform;\r\n    }\r\n\r\n    if (textDivProperties.hasText) {\r\n      this._container.appendChild(textDiv);\r\n    }\r\n\r\n    if (textDivProperties.hasEOL) {\r\n      const br = document.createElement(\"br\");\r\n      br.setAttribute(\"role\", \"presentation\");\r\n\r\n      this._container.appendChild(br);\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _render(timeout = 0) {\r\n    const capability = createPromiseCapability();\r\n    let styleCache = Object.create(null); // The temporary canvas is used to measure text length in the DOM.\r\n\r\n    const canvas = this._document.createElement(\"canvas\");\r\n\r\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\r\n\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL || GENERIC\")) {\r\n      canvas.mozOpaque = true;\r\n    }\r\n\r\n    this._layoutTextCtx = canvas.getContext(\"2d\", {\r\n      alpha: false\r\n    });\r\n\r\n    if (this._textContent) {\r\n      const textItems = this._textContent.items;\r\n      const textStyles = this._textContent.styles;\r\n\r\n      this._processItems(textItems, textStyles);\r\n\r\n      capability.resolve();\r\n    } else if (this._textContentStream) {\r\n      const pump = () => {\r\n        this._reader.read().then(({\r\n          value,\r\n          done\r\n        }) => {\r\n          if (done) {\r\n            capability.resolve();\r\n            return;\r\n          }\r\n\r\n          Object.assign(styleCache, value.styles);\r\n\r\n          this._processItems(value.items, styleCache);\r\n\r\n          pump();\r\n        }, capability.reject);\r\n      };\r\n\r\n      this._reader = this._textContentStream.getReader();\r\n      pump();\r\n    } else {\r\n      throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\r\n    }\r\n\r\n    capability.promise.then(() => {\r\n      styleCache = null;\r\n\r\n      if (!timeout) {\r\n        // Render right away\r\n        render(this);\r\n      } else {\r\n        // Schedule\r\n        this._renderTimer = setTimeout(() => {\r\n          render(this);\r\n          this._renderTimer = null;\r\n        }, timeout);\r\n      }\r\n    }, this._capability.reject);\r\n  }\r\n  /**\r\n   * @param {boolean} [expandDivs]\r\n   */\r\n\r\n\r\n  expandTextDivs(expandDivs = false) {\r\n    if (!this._enhanceTextSelection || !this._renderingDone) {\r\n      return;\r\n    }\r\n\r\n    if (this._bounds !== null) {\r\n      expand(this);\r\n      this._bounds = null;\r\n    }\r\n\r\n    const transformBuf = [],\r\n          paddingBuf = [];\r\n\r\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\r\n      const div = this._textDivs[i];\r\n\r\n      const divProps = this._textDivProperties.get(div);\r\n\r\n      if (!divProps.hasText) {\r\n        continue;\r\n      }\r\n\r\n      if (expandDivs) {\r\n        transformBuf.length = 0;\r\n        paddingBuf.length = 0;\r\n\r\n        if (divProps.originalTransform) {\r\n          transformBuf.push(divProps.originalTransform);\r\n        }\r\n\r\n        if (divProps.paddingTop > 0) {\r\n          paddingBuf.push(`${divProps.paddingTop}px`);\r\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\r\n        } else {\r\n          paddingBuf.push(0);\r\n        }\r\n\r\n        if (divProps.paddingRight > 0) {\r\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\r\n        } else {\r\n          paddingBuf.push(0);\r\n        }\r\n\r\n        if (divProps.paddingBottom > 0) {\r\n          paddingBuf.push(`${divProps.paddingBottom}px`);\r\n        } else {\r\n          paddingBuf.push(0);\r\n        }\r\n\r\n        if (divProps.paddingLeft > 0) {\r\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\r\n          transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\r\n        } else {\r\n          paddingBuf.push(0);\r\n        }\r\n\r\n        div.style.padding = paddingBuf.join(\" \");\r\n\r\n        if (transformBuf.length) {\r\n          div.style.transform = transformBuf.join(\" \");\r\n        }\r\n      } else {\r\n        div.style.padding = null;\r\n        div.style.transform = divProps.originalTransform;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n/**\r\n * @param {TextLayerRenderParameters} renderParameters\r\n * @returns {TextLayerRenderTask}\r\n */\r\n\r\n\r\nfunction renderTextLayer(renderParameters) {\r\n  const task = new TextLayerRenderTask({\r\n    textContent: renderParameters.textContent,\r\n    textContentStream: renderParameters.textContentStream,\r\n    container: renderParameters.container,\r\n    viewport: renderParameters.viewport,\r\n    textDivs: renderParameters.textDivs,\r\n    textContentItemsStr: renderParameters.textContentItemsStr,\r\n    enhanceTextSelection: renderParameters.enhanceTextSelection\r\n  });\r\n\r\n  task._render(renderParameters.timeout);\r\n\r\n  return task;\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @type {any} */\r\n\r\nlet SVGGraphics = class {\r\n  constructor() {\r\n    unreachable(\"Not implemented: SVGGraphics\");\r\n  }\r\n\r\n};\r\n\r\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")) {\r\n  const SVG_DEFAULTS = {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fillColor: \"#000000\"\r\n  };\r\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\r\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\r\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\r\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\r\n\r\n  const convertImgDataToPng = function () {\r\n    const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\r\n    const CHUNK_WRAPPER_SIZE = 12;\r\n    const crcTable = new Int32Array(256);\r\n\r\n    for (let i = 0; i < 256; i++) {\r\n      let c = i;\r\n\r\n      for (let h = 0; h < 8; h++) {\r\n        if (c & 1) {\r\n          c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\r\n        } else {\r\n          c = c >> 1 & 0x7fffffff;\r\n        }\r\n      }\r\n\r\n      crcTable[i] = c;\r\n    }\r\n\r\n    function crc32(data, start, end) {\r\n      let crc = -1;\r\n\r\n      for (let i = start; i < end; i++) {\r\n        const a = (crc ^ data[i]) & 0xff;\r\n        const b = crcTable[a];\r\n        crc = crc >>> 8 ^ b;\r\n      }\r\n\r\n      return crc ^ -1;\r\n    }\r\n\r\n    function writePngChunk(type, body, data, offset) {\r\n      let p = offset;\r\n      const len = body.length;\r\n      data[p] = len >> 24 & 0xff;\r\n      data[p + 1] = len >> 16 & 0xff;\r\n      data[p + 2] = len >> 8 & 0xff;\r\n      data[p + 3] = len & 0xff;\r\n      p += 4;\r\n      data[p] = type.charCodeAt(0) & 0xff;\r\n      data[p + 1] = type.charCodeAt(1) & 0xff;\r\n      data[p + 2] = type.charCodeAt(2) & 0xff;\r\n      data[p + 3] = type.charCodeAt(3) & 0xff;\r\n      p += 4;\r\n      data.set(body, p);\r\n      p += body.length;\r\n      const crc = crc32(data, offset + 4, p);\r\n      data[p] = crc >> 24 & 0xff;\r\n      data[p + 1] = crc >> 16 & 0xff;\r\n      data[p + 2] = crc >> 8 & 0xff;\r\n      data[p + 3] = crc & 0xff;\r\n    }\r\n\r\n    function adler32(data, start, end) {\r\n      let a = 1;\r\n      let b = 0;\r\n\r\n      for (let i = start; i < end; ++i) {\r\n        a = (a + (data[i] & 0xff)) % 65521;\r\n        b = (b + a) % 65521;\r\n      }\r\n\r\n      return b << 16 | a;\r\n    }\r\n    /**\r\n     * @param {Uint8Array} literals The input data.\r\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\r\n     *   This is the required format for compressed streams in the PNG format:\r\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\r\n     */\r\n\r\n\r\n    function deflateSync(literals) {\r\n      if (!isNodeJS) {\r\n        // zlib is certainly not available outside of Node.js. We can either use\r\n        // the pako library for client-side DEFLATE compression, or use the\r\n        // canvas API of the browser to obtain a more optimal PNG file.\r\n        return deflateSyncUncompressed(literals);\r\n      }\r\n\r\n      try {\r\n        // NOTE: This implementation is far from perfect, but already way better\r\n        // than not applying any compression.\r\n        //\r\n        // A better algorithm will try to choose a good predictor/filter and\r\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\r\n        //\r\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\r\n        // Node v3.0.0   Buffer inherits from Uint8Array.\r\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\r\n        let input; // eslint-disable-next-line no-undef\r\n\r\n        if (parseInt(process.versions.node) >= 8) {\r\n          input = literals;\r\n        } else {\r\n          // eslint-disable-next-line no-undef\r\n          input = Buffer.from(literals);\r\n        }\r\n\r\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\r\n          level: 9\r\n        });\r\n\r\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\r\n      } catch (e) {\r\n        warn(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\r\n      }\r\n\r\n      return deflateSyncUncompressed(literals);\r\n    } // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\r\n\r\n\r\n    function deflateSyncUncompressed(literals) {\r\n      let len = literals.length;\r\n      const maxBlockLength = 0xffff;\r\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\r\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\r\n      let pi = 0;\r\n      idat[pi++] = 0x78; // compression method and flags\r\n\r\n      idat[pi++] = 0x9c; // flags\r\n\r\n      let pos = 0;\r\n\r\n      while (len > maxBlockLength) {\r\n        // writing non-final DEFLATE blocks type 0 and length of 65535\r\n        idat[pi++] = 0x00;\r\n        idat[pi++] = 0xff;\r\n        idat[pi++] = 0xff;\r\n        idat[pi++] = 0x00;\r\n        idat[pi++] = 0x00;\r\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\r\n        pi += maxBlockLength;\r\n        pos += maxBlockLength;\r\n        len -= maxBlockLength;\r\n      } // writing non-final DEFLATE blocks type 0\r\n\r\n\r\n      idat[pi++] = 0x01;\r\n      idat[pi++] = len & 0xff;\r\n      idat[pi++] = len >> 8 & 0xff;\r\n      idat[pi++] = ~len & 0xffff & 0xff;\r\n      idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\r\n      idat.set(literals.subarray(pos), pi);\r\n      pi += literals.length - pos;\r\n      const adler = adler32(literals, 0, literals.length); // checksum\r\n\r\n      idat[pi++] = adler >> 24 & 0xff;\r\n      idat[pi++] = adler >> 16 & 0xff;\r\n      idat[pi++] = adler >> 8 & 0xff;\r\n      idat[pi++] = adler & 0xff;\r\n      return idat;\r\n    }\r\n\r\n    function encode(imgData, kind, forceDataSchema, isMask) {\r\n      const width = imgData.width;\r\n      const height = imgData.height;\r\n      let bitDepth, colorType, lineSize;\r\n      const bytes = imgData.data;\r\n\r\n      switch (kind) {\r\n        case ImageKind.GRAYSCALE_1BPP:\r\n          colorType = 0;\r\n          bitDepth = 1;\r\n          lineSize = width + 7 >> 3;\r\n          break;\r\n\r\n        case ImageKind.RGB_24BPP:\r\n          colorType = 2;\r\n          bitDepth = 8;\r\n          lineSize = width * 3;\r\n          break;\r\n\r\n        case ImageKind.RGBA_32BPP:\r\n          colorType = 6;\r\n          bitDepth = 8;\r\n          lineSize = width * 4;\r\n          break;\r\n\r\n        default:\r\n          throw new Error(\"invalid format\");\r\n      } // prefix every row with predictor 0\r\n\r\n\r\n      const literals = new Uint8Array((1 + lineSize) * height);\r\n      let offsetLiterals = 0,\r\n          offsetBytes = 0;\r\n\r\n      for (let y = 0; y < height; ++y) {\r\n        literals[offsetLiterals++] = 0; // no prediction\r\n\r\n        literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\r\n        offsetBytes += lineSize;\r\n        offsetLiterals += lineSize;\r\n      }\r\n\r\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\r\n        // inverting for image masks\r\n        offsetLiterals = 0;\r\n\r\n        for (let y = 0; y < height; y++) {\r\n          offsetLiterals++; // skipping predictor\r\n\r\n          for (let i = 0; i < lineSize; i++) {\r\n            literals[offsetLiterals++] ^= 0xff;\r\n          }\r\n        }\r\n      }\r\n\r\n      const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, // bit depth\r\n      colorType, // color type\r\n      0x00, // compression method\r\n      0x00, // filter method\r\n      0x00 // interlace method\r\n      ]);\r\n      const idat = deflateSync(literals); // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\r\n\r\n      const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\r\n      const data = new Uint8Array(pngLength);\r\n      let offset = 0;\r\n      data.set(PNG_HEADER, offset);\r\n      offset += PNG_HEADER.length;\r\n      writePngChunk(\"IHDR\", ihdr, data, offset);\r\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\r\n      writePngChunk(\"IDATA\", idat, data, offset);\r\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\r\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\r\n      return createObjectURL(data, \"image/png\", forceDataSchema);\r\n    } // eslint-disable-next-line no-shadow\r\n\r\n\r\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\r\n      const kind = imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\r\n      return encode(imgData, kind, forceDataSchema, isMask);\r\n    };\r\n  }();\r\n\r\n  class SVGExtraState {\r\n    constructor() {\r\n      this.fontSizeScale = 1;\r\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\r\n      this.fontSize = 0;\r\n      this.textMatrix = IDENTITY_MATRIX;\r\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\r\n      this.leading = 0;\r\n      this.textRenderingMode = TextRenderingMode.FILL;\r\n      this.textMatrixScale = 1; // Current point (in user coordinates)\r\n\r\n      this.x = 0;\r\n      this.y = 0; // Start of text line (in text coordinates)\r\n\r\n      this.lineX = 0;\r\n      this.lineY = 0; // Character and word spacing\r\n\r\n      this.charSpacing = 0;\r\n      this.wordSpacing = 0;\r\n      this.textHScale = 1;\r\n      this.textRise = 0; // Default foreground and background colors\r\n\r\n      this.fillColor = SVG_DEFAULTS.fillColor;\r\n      this.strokeColor = \"#000000\";\r\n      this.fillAlpha = 1;\r\n      this.strokeAlpha = 1;\r\n      this.lineWidth = 1;\r\n      this.lineJoin = \"\";\r\n      this.lineCap = \"\";\r\n      this.miterLimit = 0;\r\n      this.dashArray = [];\r\n      this.dashPhase = 0;\r\n      this.dependencies = []; // Clipping\r\n\r\n      this.activeClipUrl = null;\r\n      this.clipGroup = null;\r\n      this.maskId = \"\";\r\n    }\r\n\r\n    clone() {\r\n      return Object.create(this);\r\n    }\r\n\r\n    setCurrentPoint(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n\r\n  } // eslint-disable-next-line no-inner-declarations\r\n\r\n\r\n  function opListToTree(opList) {\r\n    let opTree = [];\r\n    const tmp = [];\r\n\r\n    for (const opListElement of opList) {\r\n      if (opListElement.fn === \"save\") {\r\n        opTree.push({\r\n          fnId: 92,\r\n          fn: \"group\",\r\n          items: []\r\n        });\r\n        tmp.push(opTree);\r\n        opTree = opTree[opTree.length - 1].items;\r\n        continue;\r\n      }\r\n\r\n      if (opListElement.fn === \"restore\") {\r\n        opTree = tmp.pop();\r\n      } else {\r\n        opTree.push(opListElement);\r\n      }\r\n    }\r\n\r\n    return opTree;\r\n  }\r\n  /**\r\n   * Format a float number as a string.\r\n   *\r\n   * @param value {number} - The float number to format.\r\n   * @returns {string}\r\n   */\r\n  // eslint-disable-next-line no-inner-declarations\r\n\r\n\r\n  function pf(value) {\r\n    if (Number.isInteger(value)) {\r\n      return value.toString();\r\n    }\r\n\r\n    const s = value.toFixed(10);\r\n    let i = s.length - 1;\r\n\r\n    if (s[i] !== \"0\") {\r\n      return s;\r\n    } // Remove trailing zeros.\r\n\r\n\r\n    do {\r\n      i--;\r\n    } while (s[i] === \"0\");\r\n\r\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\r\n  }\r\n  /**\r\n   * Format a transform matrix as a string. The standard rotation, scale and\r\n   * translation matrices are replaced by their shorter forms, and for\r\n   * identity matrices an empty string is returned to save memory.\r\n   *\r\n   * @param m {Array} - The transform matrix to format.\r\n   * @returns {string}\r\n   */\r\n  // eslint-disable-next-line no-inner-declarations\r\n\r\n\r\n  function pm(m) {\r\n    if (m[4] === 0 && m[5] === 0) {\r\n      if (m[1] === 0 && m[2] === 0) {\r\n        if (m[0] === 1 && m[3] === 1) {\r\n          return \"\";\r\n        }\r\n\r\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\r\n      }\r\n\r\n      if (m[0] === m[3] && m[1] === -m[2]) {\r\n        const a = Math.acos(m[0]) * 180 / Math.PI;\r\n        return `rotate(${pf(a)})`;\r\n      }\r\n    } else {\r\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\r\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\r\n      }\r\n    }\r\n\r\n    return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\r\n  } // The counts below are relevant for all pages, so they have to be global\r\n  // instead of being members of `SVGGraphics` (which is recreated for\r\n  // each page).\r\n\r\n\r\n  let clipCount = 0;\r\n  let maskCount = 0;\r\n  let shadingCount = 0;\r\n  SVGGraphics = class {\r\n    constructor(commonObjs, objs, forceDataSchema = false) {\r\n      this.svgFactory = new DOMSVGFactory();\r\n      this.current = new SVGExtraState();\r\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\r\n\r\n      this.transformStack = [];\r\n      this.extraStack = [];\r\n      this.commonObjs = commonObjs;\r\n      this.objs = objs;\r\n      this.pendingClip = null;\r\n      this.pendingEOFill = false;\r\n      this.embedFonts = false;\r\n      this.embeddedFonts = Object.create(null);\r\n      this.cssStyle = null;\r\n      this.forceDataSchema = !!forceDataSchema; // In `src/shared/util.js` the operator names are mapped to IDs.\r\n      // The list below represents the reverse of that, i.e., it maps IDs\r\n      // to operator names.\r\n\r\n      this._operatorIdMapping = [];\r\n\r\n      for (const op in OPS) {\r\n        this._operatorIdMapping[OPS[op]] = op;\r\n      }\r\n    }\r\n\r\n    save() {\r\n      this.transformStack.push(this.transformMatrix);\r\n      const old = this.current;\r\n      this.extraStack.push(old);\r\n      this.current = old.clone();\r\n    }\r\n\r\n    restore() {\r\n      this.transformMatrix = this.transformStack.pop();\r\n      this.current = this.extraStack.pop();\r\n      this.pendingClip = null;\r\n      this.tgrp = null;\r\n    }\r\n\r\n    group(items) {\r\n      this.save();\r\n      this.executeOpTree(items);\r\n      this.restore();\r\n    }\r\n\r\n    loadDependencies(operatorList) {\r\n      const fnArray = operatorList.fnArray;\r\n      const argsArray = operatorList.argsArray;\r\n\r\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\r\n        if (fnArray[i] !== OPS.dependency) {\r\n          continue;\r\n        }\r\n\r\n        for (const obj of argsArray[i]) {\r\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\r\n          const promise = new Promise(resolve => {\r\n            objsPool.get(obj, resolve);\r\n          });\r\n          this.current.dependencies.push(promise);\r\n        }\r\n      }\r\n\r\n      return Promise.all(this.current.dependencies);\r\n    }\r\n\r\n    transform(a, b, c, d, e, f) {\r\n      const transformMatrix = [a, b, c, d, e, f];\r\n      this.transformMatrix = Util.transform(this.transformMatrix, transformMatrix);\r\n      this.tgrp = null;\r\n    }\r\n\r\n    getSVG(operatorList, viewport) {\r\n      this.viewport = viewport;\r\n\r\n      const svgElement = this._initialize(viewport);\r\n\r\n      return this.loadDependencies(operatorList).then(() => {\r\n        this.transformMatrix = IDENTITY_MATRIX;\r\n        this.executeOpTree(this.convertOpList(operatorList));\r\n        return svgElement;\r\n      });\r\n    }\r\n\r\n    convertOpList(operatorList) {\r\n      const operatorIdMapping = this._operatorIdMapping;\r\n      const argsArray = operatorList.argsArray;\r\n      const fnArray = operatorList.fnArray;\r\n      const opList = [];\r\n\r\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\r\n        const fnId = fnArray[i];\r\n        opList.push({\r\n          fnId,\r\n          fn: operatorIdMapping[fnId],\r\n          args: argsArray[i]\r\n        });\r\n      }\r\n\r\n      return opListToTree(opList);\r\n    }\r\n\r\n    executeOpTree(opTree) {\r\n      for (const opTreeElement of opTree) {\r\n        const fn = opTreeElement.fn;\r\n        const fnId = opTreeElement.fnId;\r\n        const args = opTreeElement.args;\r\n\r\n        switch (fnId | 0) {\r\n          case OPS.beginText:\r\n            this.beginText();\r\n            break;\r\n\r\n          case OPS.dependency:\r\n            // Handled in `loadDependencies`, so no warning should be shown.\r\n            break;\r\n\r\n          case OPS.setLeading:\r\n            this.setLeading(args);\r\n            break;\r\n\r\n          case OPS.setLeadingMoveText:\r\n            this.setLeadingMoveText(args[0], args[1]);\r\n            break;\r\n\r\n          case OPS.setFont:\r\n            this.setFont(args);\r\n            break;\r\n\r\n          case OPS.showText:\r\n            this.showText(args[0]);\r\n            break;\r\n\r\n          case OPS.showSpacedText:\r\n            this.showText(args[0]);\r\n            break;\r\n\r\n          case OPS.endText:\r\n            this.endText();\r\n            break;\r\n\r\n          case OPS.moveText:\r\n            this.moveText(args[0], args[1]);\r\n            break;\r\n\r\n          case OPS.setCharSpacing:\r\n            this.setCharSpacing(args[0]);\r\n            break;\r\n\r\n          case OPS.setWordSpacing:\r\n            this.setWordSpacing(args[0]);\r\n            break;\r\n\r\n          case OPS.setHScale:\r\n            this.setHScale(args[0]);\r\n            break;\r\n\r\n          case OPS.setTextMatrix:\r\n            this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n            break;\r\n\r\n          case OPS.setTextRise:\r\n            this.setTextRise(args[0]);\r\n            break;\r\n\r\n          case OPS.setTextRenderingMode:\r\n            this.setTextRenderingMode(args[0]);\r\n            break;\r\n\r\n          case OPS.setLineWidth:\r\n            this.setLineWidth(args[0]);\r\n            break;\r\n\r\n          case OPS.setLineJoin:\r\n            this.setLineJoin(args[0]);\r\n            break;\r\n\r\n          case OPS.setLineCap:\r\n            this.setLineCap(args[0]);\r\n            break;\r\n\r\n          case OPS.setMiterLimit:\r\n            this.setMiterLimit(args[0]);\r\n            break;\r\n\r\n          case OPS.setFillRGBColor:\r\n            this.setFillRGBColor(args[0], args[1], args[2]);\r\n            break;\r\n\r\n          case OPS.setStrokeRGBColor:\r\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\r\n            break;\r\n\r\n          case OPS.setStrokeColorN:\r\n            this.setStrokeColorN(args);\r\n            break;\r\n\r\n          case OPS.setFillColorN:\r\n            this.setFillColorN(args);\r\n            break;\r\n\r\n          case OPS.shadingFill:\r\n            this.shadingFill(args[0]);\r\n            break;\r\n\r\n          case OPS.setDash:\r\n            this.setDash(args[0], args[1]);\r\n            break;\r\n\r\n          case OPS.setRenderingIntent:\r\n            this.setRenderingIntent(args[0]);\r\n            break;\r\n\r\n          case OPS.setFlatness:\r\n            this.setFlatness(args[0]);\r\n            break;\r\n\r\n          case OPS.setGState:\r\n            this.setGState(args[0]);\r\n            break;\r\n\r\n          case OPS.fill:\r\n            this.fill();\r\n            break;\r\n\r\n          case OPS.eoFill:\r\n            this.eoFill();\r\n            break;\r\n\r\n          case OPS.stroke:\r\n            this.stroke();\r\n            break;\r\n\r\n          case OPS.fillStroke:\r\n            this.fillStroke();\r\n            break;\r\n\r\n          case OPS.eoFillStroke:\r\n            this.eoFillStroke();\r\n            break;\r\n\r\n          case OPS.clip:\r\n            this.clip(\"nonzero\");\r\n            break;\r\n\r\n          case OPS.eoClip:\r\n            this.clip(\"evenodd\");\r\n            break;\r\n\r\n          case OPS.paintSolidColorImageMask:\r\n            this.paintSolidColorImageMask();\r\n            break;\r\n\r\n          case OPS.paintImageXObject:\r\n            this.paintImageXObject(args[0]);\r\n            break;\r\n\r\n          case OPS.paintInlineImageXObject:\r\n            this.paintInlineImageXObject(args[0]);\r\n            break;\r\n\r\n          case OPS.paintImageMaskXObject:\r\n            this.paintImageMaskXObject(args[0]);\r\n            break;\r\n\r\n          case OPS.paintFormXObjectBegin:\r\n            this.paintFormXObjectBegin(args[0], args[1]);\r\n            break;\r\n\r\n          case OPS.paintFormXObjectEnd:\r\n            this.paintFormXObjectEnd();\r\n            break;\r\n\r\n          case OPS.closePath:\r\n            this.closePath();\r\n            break;\r\n\r\n          case OPS.closeStroke:\r\n            this.closeStroke();\r\n            break;\r\n\r\n          case OPS.closeFillStroke:\r\n            this.closeFillStroke();\r\n            break;\r\n\r\n          case OPS.closeEOFillStroke:\r\n            this.closeEOFillStroke();\r\n            break;\r\n\r\n          case OPS.nextLine:\r\n            this.nextLine();\r\n            break;\r\n\r\n          case OPS.transform:\r\n            this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n            break;\r\n\r\n          case OPS.constructPath:\r\n            this.constructPath(args[0], args[1]);\r\n            break;\r\n\r\n          case OPS.endPath:\r\n            this.endPath();\r\n            break;\r\n\r\n          case 92:\r\n            this.group(opTreeElement.items);\r\n            break;\r\n\r\n          default:\r\n            warn(`Unimplemented operator ${fn}`);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    setWordSpacing(wordSpacing) {\r\n      this.current.wordSpacing = wordSpacing;\r\n    }\r\n\r\n    setCharSpacing(charSpacing) {\r\n      this.current.charSpacing = charSpacing;\r\n    }\r\n\r\n    nextLine() {\r\n      this.moveText(0, this.current.leading);\r\n    }\r\n\r\n    setTextMatrix(a, b, c, d, e, f) {\r\n      const current = this.current;\r\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\r\n      current.textMatrixScale = Math.hypot(a, b);\r\n      current.x = current.lineX = 0;\r\n      current.y = current.lineY = 0;\r\n      current.xcoords = [];\r\n      current.ycoords = [];\r\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\r\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\r\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\r\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\r\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\r\n      current.txtElement.appendChild(current.tspan);\r\n    }\r\n\r\n    beginText() {\r\n      const current = this.current;\r\n      current.x = current.lineX = 0;\r\n      current.y = current.lineY = 0;\r\n      current.textMatrix = IDENTITY_MATRIX;\r\n      current.lineMatrix = IDENTITY_MATRIX;\r\n      current.textMatrixScale = 1;\r\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\r\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\r\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\r\n      current.xcoords = [];\r\n      current.ycoords = [];\r\n    }\r\n\r\n    moveText(x, y) {\r\n      const current = this.current;\r\n      current.x = current.lineX += x;\r\n      current.y = current.lineY += y;\r\n      current.xcoords = [];\r\n      current.ycoords = [];\r\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\r\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\r\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\r\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\r\n    }\r\n\r\n    showText(glyphs) {\r\n      const current = this.current;\r\n      const font = current.font;\r\n      const fontSize = current.fontSize;\r\n\r\n      if (fontSize === 0) {\r\n        return;\r\n      }\r\n\r\n      const fontSizeScale = current.fontSizeScale;\r\n      const charSpacing = current.charSpacing;\r\n      const wordSpacing = current.wordSpacing;\r\n      const fontDirection = current.fontDirection;\r\n      const textHScale = current.textHScale * fontDirection;\r\n      const vertical = font.vertical;\r\n      const spacingDir = vertical ? 1 : -1;\r\n      const defaultVMetrics = font.defaultVMetrics;\r\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\r\n      let x = 0;\r\n\r\n      for (const glyph of glyphs) {\r\n        if (glyph === null) {\r\n          // Word break\r\n          x += fontDirection * wordSpacing;\r\n          continue;\r\n        } else if (isNum(glyph)) {\r\n          x += spacingDir * glyph * fontSize / 1000;\r\n          continue;\r\n        }\r\n\r\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\r\n        const character = glyph.fontChar;\r\n        let scaledX, scaledY;\r\n        let width = glyph.width;\r\n\r\n        if (vertical) {\r\n          let vx;\r\n          const vmetric = glyph.vmetric || defaultVMetrics;\r\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\r\n          vx = -vx * widthAdvanceScale;\r\n          const vy = vmetric[2] * widthAdvanceScale;\r\n          width = vmetric ? -vmetric[0] : width;\r\n          scaledX = vx / fontSizeScale;\r\n          scaledY = (x + vy) / fontSizeScale;\r\n        } else {\r\n          scaledX = x / fontSizeScale;\r\n          scaledY = 0;\r\n        }\r\n\r\n        if (glyph.isInFont || font.missingFile) {\r\n          current.xcoords.push(current.x + scaledX);\r\n\r\n          if (vertical) {\r\n            current.ycoords.push(-current.y + scaledY);\r\n          }\r\n\r\n          current.tspan.textContent += character;\r\n        }\r\n\r\n        let charWidth;\r\n\r\n        if (vertical) {\r\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\r\n        } else {\r\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\r\n        }\r\n\r\n        x += charWidth;\r\n      }\r\n\r\n      current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\r\n\r\n      if (vertical) {\r\n        current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\r\n      } else {\r\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\r\n      }\r\n\r\n      if (vertical) {\r\n        current.y -= x;\r\n      } else {\r\n        current.x += x * textHScale;\r\n      }\r\n\r\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\r\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\r\n\r\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\r\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\r\n      }\r\n\r\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\r\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\r\n      }\r\n\r\n      const fillStrokeMode = current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\r\n\r\n      if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\r\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\r\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\r\n        }\r\n\r\n        if (current.fillAlpha < 1) {\r\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\r\n        }\r\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\r\n        // Workaround for Firefox: We must set fill=\"transparent\" because\r\n        // fill=\"none\" would generate an empty clipping path.\r\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\r\n      } else {\r\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\r\n      }\r\n\r\n      if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\r\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\r\n\r\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\r\n      } // Include the text rise in the text matrix since the `pm` function\r\n      // creates the SVG element's `translate` entry (work on a copy to avoid\r\n      // altering the original text matrix).\r\n\r\n\r\n      let textMatrix = current.textMatrix;\r\n\r\n      if (current.textRise !== 0) {\r\n        textMatrix = textMatrix.slice();\r\n        textMatrix[5] += current.textRise;\r\n      }\r\n\r\n      current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\r\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\r\n      current.txtElement.appendChild(current.tspan);\r\n      current.txtgrp.appendChild(current.txtElement);\r\n\r\n      this._ensureTransformGroup().appendChild(current.txtElement);\r\n    }\r\n\r\n    setLeadingMoveText(x, y) {\r\n      this.setLeading(-y);\r\n      this.moveText(x, y);\r\n    }\r\n\r\n    addFontStyle(fontObj) {\r\n      if (!fontObj.data) {\r\n        throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\r\n      }\r\n\r\n      if (!this.cssStyle) {\r\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\r\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\r\n        this.defs.appendChild(this.cssStyle);\r\n      }\r\n\r\n      const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\r\n      this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\r\n    }\r\n\r\n    setFont(details) {\r\n      const current = this.current;\r\n      const fontObj = this.commonObjs.get(details[0]);\r\n      let size = details[1];\r\n      current.font = fontObj;\r\n\r\n      if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\r\n        this.addFontStyle(fontObj);\r\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\r\n      }\r\n\r\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\r\n      let bold = \"normal\";\r\n\r\n      if (fontObj.black) {\r\n        bold = \"900\";\r\n      } else if (fontObj.bold) {\r\n        bold = \"bold\";\r\n      }\r\n\r\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\r\n\r\n      if (size < 0) {\r\n        size = -size;\r\n        current.fontDirection = -1;\r\n      } else {\r\n        current.fontDirection = 1;\r\n      }\r\n\r\n      current.fontSize = size;\r\n      current.fontFamily = fontObj.loadedName;\r\n      current.fontWeight = bold;\r\n      current.fontStyle = italic;\r\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\r\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\r\n      current.xcoords = [];\r\n      current.ycoords = [];\r\n    }\r\n\r\n    endText() {\r\n      var _current$txtElement;\r\n\r\n      const current = this.current;\r\n\r\n      if (current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG && (_current$txtElement = current.txtElement) !== null && _current$txtElement !== void 0 && _current$txtElement.hasChildNodes()) {\r\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\r\n        current.element = current.txtElement;\r\n        this.clip(\"nonzero\");\r\n        this.endPath();\r\n      }\r\n    } // Path properties\r\n\r\n\r\n    setLineWidth(width) {\r\n      if (width > 0) {\r\n        this.current.lineWidth = width;\r\n      }\r\n    }\r\n\r\n    setLineCap(style) {\r\n      this.current.lineCap = LINE_CAP_STYLES[style];\r\n    }\r\n\r\n    setLineJoin(style) {\r\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\r\n    }\r\n\r\n    setMiterLimit(limit) {\r\n      this.current.miterLimit = limit;\r\n    }\r\n\r\n    setStrokeAlpha(strokeAlpha) {\r\n      this.current.strokeAlpha = strokeAlpha;\r\n    }\r\n\r\n    setStrokeRGBColor(r, g, b) {\r\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\r\n    }\r\n\r\n    setFillAlpha(fillAlpha) {\r\n      this.current.fillAlpha = fillAlpha;\r\n    }\r\n\r\n    setFillRGBColor(r, g, b) {\r\n      this.current.fillColor = Util.makeHexColor(r, g, b);\r\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\r\n      this.current.xcoords = [];\r\n      this.current.ycoords = [];\r\n    }\r\n\r\n    setStrokeColorN(args) {\r\n      this.current.strokeColor = this._makeColorN_Pattern(args);\r\n    }\r\n\r\n    setFillColorN(args) {\r\n      this.current.fillColor = this._makeColorN_Pattern(args);\r\n    }\r\n\r\n    shadingFill(args) {\r\n      const width = this.viewport.width;\r\n      const height = this.viewport.height;\r\n      const inv = Util.inverseTransform(this.transformMatrix);\r\n      const bl = Util.applyTransform([0, 0], inv);\r\n      const br = Util.applyTransform([0, height], inv);\r\n      const ul = Util.applyTransform([width, 0], inv);\r\n      const ur = Util.applyTransform([width, height], inv);\r\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\r\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\r\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\r\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\r\n      const rect = this.svgFactory.createElement(\"svg:rect\");\r\n      rect.setAttributeNS(null, \"x\", x0);\r\n      rect.setAttributeNS(null, \"y\", y0);\r\n      rect.setAttributeNS(null, \"width\", x1 - x0);\r\n      rect.setAttributeNS(null, \"height\", y1 - y0);\r\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\r\n\r\n      if (this.current.fillAlpha < 1) {\r\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\r\n      }\r\n\r\n      this._ensureTransformGroup().appendChild(rect);\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    _makeColorN_Pattern(args) {\r\n      if (args[0] === \"TilingPattern\") {\r\n        return this._makeTilingPattern(args);\r\n      }\r\n\r\n      return this._makeShadingPattern(args);\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    _makeTilingPattern(args) {\r\n      const color = args[1];\r\n      const operatorList = args[2];\r\n      const matrix = args[3] || IDENTITY_MATRIX;\r\n      const [x0, y0, x1, y1] = args[4];\r\n      const xstep = args[5];\r\n      const ystep = args[6];\r\n      const paintType = args[7];\r\n      const tilingId = `shading${shadingCount++}`;\r\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([...Util.applyTransform([x0, y0], matrix), ...Util.applyTransform([x1, y1], matrix)]);\r\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\r\n      const txstep = xstep * xscale;\r\n      const tystep = ystep * yscale;\r\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\r\n      tiling.setAttributeNS(null, \"id\", tilingId);\r\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\r\n      tiling.setAttributeNS(null, \"width\", txstep);\r\n      tiling.setAttributeNS(null, \"height\", tystep);\r\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\r\n      tiling.setAttributeNS(null, \"y\", `${ty0}`); // Save current state.\r\n\r\n      const svg = this.svg;\r\n      const transformMatrix = this.transformMatrix;\r\n      const fillColor = this.current.fillColor;\r\n      const strokeColor = this.current.strokeColor;\r\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\r\n      this.svg = bbox;\r\n      this.transformMatrix = matrix;\r\n\r\n      if (paintType === 2) {\r\n        const cssColor = Util.makeHexColor(...color);\r\n        this.current.fillColor = cssColor;\r\n        this.current.strokeColor = cssColor;\r\n      }\r\n\r\n      this.executeOpTree(this.convertOpList(operatorList)); // Restore saved state.\r\n\r\n      this.svg = svg;\r\n      this.transformMatrix = transformMatrix;\r\n      this.current.fillColor = fillColor;\r\n      this.current.strokeColor = strokeColor;\r\n      tiling.appendChild(bbox.childNodes[0]);\r\n      this.defs.appendChild(tiling);\r\n      return `url(#${tilingId})`;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    _makeShadingPattern(args) {\r\n      switch (args[0]) {\r\n        case \"RadialAxial\":\r\n          const shadingId = `shading${shadingCount++}`;\r\n          const colorStops = args[3];\r\n          let gradient;\r\n\r\n          switch (args[1]) {\r\n            case \"axial\":\r\n              const point0 = args[4];\r\n              const point1 = args[5];\r\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\r\n              gradient.setAttributeNS(null, \"id\", shadingId);\r\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\r\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\r\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\r\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\r\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\r\n              break;\r\n\r\n            case \"radial\":\r\n              const focalPoint = args[4];\r\n              const circlePoint = args[5];\r\n              const focalRadius = args[6];\r\n              const circleRadius = args[7];\r\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\r\n              gradient.setAttributeNS(null, \"id\", shadingId);\r\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\r\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\r\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\r\n              gradient.setAttributeNS(null, \"r\", circleRadius);\r\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\r\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\r\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\r\n              break;\r\n\r\n            default:\r\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\r\n          }\r\n\r\n          for (const colorStop of colorStops) {\r\n            const stop = this.svgFactory.createElement(\"svg:stop\");\r\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\r\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\r\n            gradient.appendChild(stop);\r\n          }\r\n\r\n          this.defs.appendChild(gradient);\r\n          return `url(#${shadingId})`;\r\n\r\n        case \"Mesh\":\r\n          warn(\"Unimplemented pattern Mesh\");\r\n          return null;\r\n\r\n        case \"Dummy\":\r\n          return \"hotpink\";\r\n\r\n        default:\r\n          throw new Error(`Unknown IR type: ${args[0]}`);\r\n      }\r\n    }\r\n\r\n    setDash(dashArray, dashPhase) {\r\n      this.current.dashArray = dashArray;\r\n      this.current.dashPhase = dashPhase;\r\n    }\r\n\r\n    constructPath(ops, args) {\r\n      const current = this.current;\r\n      let x = current.x,\r\n          y = current.y;\r\n      let d = [];\r\n      let j = 0;\r\n\r\n      for (const op of ops) {\r\n        switch (op | 0) {\r\n          case OPS.rectangle:\r\n            x = args[j++];\r\n            y = args[j++];\r\n            const width = args[j++];\r\n            const height = args[j++];\r\n            const xw = x + width;\r\n            const yh = y + height;\r\n            d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\r\n            break;\r\n\r\n          case OPS.moveTo:\r\n            x = args[j++];\r\n            y = args[j++];\r\n            d.push(\"M\", pf(x), pf(y));\r\n            break;\r\n\r\n          case OPS.lineTo:\r\n            x = args[j++];\r\n            y = args[j++];\r\n            d.push(\"L\", pf(x), pf(y));\r\n            break;\r\n\r\n          case OPS.curveTo:\r\n            x = args[j + 4];\r\n            y = args[j + 5];\r\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\r\n            j += 6;\r\n            break;\r\n\r\n          case OPS.curveTo2:\r\n            d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\r\n            x = args[j + 2];\r\n            y = args[j + 3];\r\n            j += 4;\r\n            break;\r\n\r\n          case OPS.curveTo3:\r\n            x = args[j + 2];\r\n            y = args[j + 3];\r\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\r\n            j += 4;\r\n            break;\r\n\r\n          case OPS.closePath:\r\n            d.push(\"Z\");\r\n            break;\r\n        }\r\n      }\r\n\r\n      d = d.join(\" \");\r\n\r\n      if (current.path && ops.length > 0 && ops[0] !== OPS.rectangle && ops[0] !== OPS.moveTo) {\r\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\r\n        // probably been divided into two OPS.constructPath operators by\r\n        // OperatorList. Append the commands to the previous path element.\r\n        d = current.path.getAttributeNS(null, \"d\") + d;\r\n      } else {\r\n        current.path = this.svgFactory.createElement(\"svg:path\");\r\n\r\n        this._ensureTransformGroup().appendChild(current.path);\r\n      }\r\n\r\n      current.path.setAttributeNS(null, \"d\", d);\r\n      current.path.setAttributeNS(null, \"fill\", \"none\"); // Saving a reference in current.element so that it can be addressed\r\n      // in 'fill' and 'stroke'\r\n\r\n      current.element = current.path;\r\n      current.setCurrentPoint(x, y);\r\n    }\r\n\r\n    endPath() {\r\n      const current = this.current; // Painting operators end a path.\r\n\r\n      current.path = null;\r\n\r\n      if (!this.pendingClip) {\r\n        return;\r\n      }\r\n\r\n      if (!current.element) {\r\n        this.pendingClip = null;\r\n        return;\r\n      } // Add the current path to a clipping path.\r\n\r\n\r\n      const clipId = `clippath${clipCount++}`;\r\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\r\n      clipPath.setAttributeNS(null, \"id\", clipId);\r\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix)); // A deep clone is needed when text is used as a clipping path.\r\n\r\n      const clipElement = current.element.cloneNode(true);\r\n\r\n      if (this.pendingClip === \"evenodd\") {\r\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\r\n      } else {\r\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\r\n      }\r\n\r\n      this.pendingClip = null;\r\n      clipPath.appendChild(clipElement);\r\n      this.defs.appendChild(clipPath);\r\n\r\n      if (current.activeClipUrl) {\r\n        // The previous clipping group content can go out of order -- resetting\r\n        // cached clipGroups.\r\n        current.clipGroup = null;\r\n\r\n        for (const prev of this.extraStack) {\r\n          prev.clipGroup = null;\r\n        } // Intersect with the previous clipping path.\r\n\r\n\r\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\r\n      }\r\n\r\n      current.activeClipUrl = `url(#${clipId})`;\r\n      this.tgrp = null;\r\n    }\r\n\r\n    clip(type) {\r\n      this.pendingClip = type;\r\n    }\r\n\r\n    closePath() {\r\n      const current = this.current;\r\n\r\n      if (current.path) {\r\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\r\n        current.path.setAttributeNS(null, \"d\", d);\r\n      }\r\n    }\r\n\r\n    setLeading(leading) {\r\n      this.current.leading = -leading;\r\n    }\r\n\r\n    setTextRise(textRise) {\r\n      this.current.textRise = textRise;\r\n    }\r\n\r\n    setTextRenderingMode(textRenderingMode) {\r\n      this.current.textRenderingMode = textRenderingMode;\r\n    }\r\n\r\n    setHScale(scale) {\r\n      this.current.textHScale = scale / 100;\r\n    }\r\n\r\n    setRenderingIntent(intent) {// This operation is ignored since we haven't found a use case for it yet.\r\n    }\r\n\r\n    setFlatness(flatness) {// This operation is ignored since we haven't found a use case for it yet.\r\n    }\r\n\r\n    setGState(states) {\r\n      for (const [key, value] of states) {\r\n        switch (key) {\r\n          case \"LW\":\r\n            this.setLineWidth(value);\r\n            break;\r\n\r\n          case \"LC\":\r\n            this.setLineCap(value);\r\n            break;\r\n\r\n          case \"LJ\":\r\n            this.setLineJoin(value);\r\n            break;\r\n\r\n          case \"ML\":\r\n            this.setMiterLimit(value);\r\n            break;\r\n\r\n          case \"D\":\r\n            this.setDash(value[0], value[1]);\r\n            break;\r\n\r\n          case \"RI\":\r\n            this.setRenderingIntent(value);\r\n            break;\r\n\r\n          case \"FL\":\r\n            this.setFlatness(value);\r\n            break;\r\n\r\n          case \"Font\":\r\n            this.setFont(value);\r\n            break;\r\n\r\n          case \"CA\":\r\n            this.setStrokeAlpha(value);\r\n            break;\r\n\r\n          case \"ca\":\r\n            this.setFillAlpha(value);\r\n            break;\r\n\r\n          default:\r\n            warn(`Unimplemented graphic state operator ${key}`);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    fill() {\r\n      const current = this.current;\r\n\r\n      if (current.element) {\r\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\r\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\r\n        this.endPath();\r\n      }\r\n    }\r\n\r\n    stroke() {\r\n      const current = this.current;\r\n\r\n      if (current.element) {\r\n        this._setStrokeAttributes(current.element);\r\n\r\n        current.element.setAttributeNS(null, \"fill\", \"none\");\r\n        this.endPath();\r\n      }\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    _setStrokeAttributes(element, lineWidthScale = 1) {\r\n      const current = this.current;\r\n      let dashArray = current.dashArray;\r\n\r\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\r\n        dashArray = dashArray.map(function (value) {\r\n          return lineWidthScale * value;\r\n        });\r\n      }\r\n\r\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\r\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\r\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\r\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\r\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\r\n      element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\r\n      element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\r\n      element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\r\n    }\r\n\r\n    eoFill() {\r\n      if (this.current.element) {\r\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\r\n      }\r\n\r\n      this.fill();\r\n    }\r\n\r\n    fillStroke() {\r\n      // Order is important since stroke wants fill to be none.\r\n      // First stroke, then if fill needed, it will be overwritten.\r\n      this.stroke();\r\n      this.fill();\r\n    }\r\n\r\n    eoFillStroke() {\r\n      if (this.current.element) {\r\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\r\n      }\r\n\r\n      this.fillStroke();\r\n    }\r\n\r\n    closeStroke() {\r\n      this.closePath();\r\n      this.stroke();\r\n    }\r\n\r\n    closeFillStroke() {\r\n      this.closePath();\r\n      this.fillStroke();\r\n    }\r\n\r\n    closeEOFillStroke() {\r\n      this.closePath();\r\n      this.eoFillStroke();\r\n    }\r\n\r\n    paintSolidColorImageMask() {\r\n      const rect = this.svgFactory.createElement(\"svg:rect\");\r\n      rect.setAttributeNS(null, \"x\", \"0\");\r\n      rect.setAttributeNS(null, \"y\", \"0\");\r\n      rect.setAttributeNS(null, \"width\", \"1px\");\r\n      rect.setAttributeNS(null, \"height\", \"1px\");\r\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\r\n\r\n      this._ensureTransformGroup().appendChild(rect);\r\n    }\r\n\r\n    paintImageXObject(objId) {\r\n      const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\r\n\r\n      if (!imgData) {\r\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\r\n        return;\r\n      }\r\n\r\n      this.paintInlineImageXObject(imgData);\r\n    }\r\n\r\n    paintInlineImageXObject(imgData, mask) {\r\n      const width = imgData.width;\r\n      const height = imgData.height;\r\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\r\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\r\n      cliprect.setAttributeNS(null, \"x\", \"0\");\r\n      cliprect.setAttributeNS(null, \"y\", \"0\");\r\n      cliprect.setAttributeNS(null, \"width\", pf(width));\r\n      cliprect.setAttributeNS(null, \"height\", pf(height));\r\n      this.current.element = cliprect;\r\n      this.clip(\"nonzero\");\r\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\r\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\r\n      imgEl.setAttributeNS(null, \"x\", \"0\");\r\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\r\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\r\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\r\n      imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\r\n\r\n      if (mask) {\r\n        mask.appendChild(imgEl);\r\n      } else {\r\n        this._ensureTransformGroup().appendChild(imgEl);\r\n      }\r\n    }\r\n\r\n    paintImageMaskXObject(imgData) {\r\n      const current = this.current;\r\n      const width = imgData.width;\r\n      const height = imgData.height;\r\n      const fillColor = current.fillColor;\r\n      current.maskId = `mask${maskCount++}`;\r\n      const mask = this.svgFactory.createElement(\"svg:mask\");\r\n      mask.setAttributeNS(null, \"id\", current.maskId);\r\n      const rect = this.svgFactory.createElement(\"svg:rect\");\r\n      rect.setAttributeNS(null, \"x\", \"0\");\r\n      rect.setAttributeNS(null, \"y\", \"0\");\r\n      rect.setAttributeNS(null, \"width\", pf(width));\r\n      rect.setAttributeNS(null, \"height\", pf(height));\r\n      rect.setAttributeNS(null, \"fill\", fillColor);\r\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\r\n      this.defs.appendChild(mask);\r\n\r\n      this._ensureTransformGroup().appendChild(rect);\r\n\r\n      this.paintInlineImageXObject(imgData, mask);\r\n    }\r\n\r\n    paintFormXObjectBegin(matrix, bbox) {\r\n      if (Array.isArray(matrix) && matrix.length === 6) {\r\n        this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\r\n      }\r\n\r\n      if (bbox) {\r\n        const width = bbox[2] - bbox[0];\r\n        const height = bbox[3] - bbox[1];\r\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\r\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\r\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\r\n        cliprect.setAttributeNS(null, \"width\", pf(width));\r\n        cliprect.setAttributeNS(null, \"height\", pf(height));\r\n        this.current.element = cliprect;\r\n        this.clip(\"nonzero\");\r\n        this.endPath();\r\n      }\r\n    }\r\n\r\n    paintFormXObjectEnd() {}\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    _initialize(viewport) {\r\n      const svg = this.svgFactory.create(viewport.width, viewport.height); // Create the definitions element.\r\n\r\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\r\n      svg.appendChild(definitions);\r\n      this.defs = definitions; // Create the root group element, which acts a container for all other\r\n      // groups and applies the viewport transform.\r\n\r\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\r\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\r\n      svg.appendChild(rootGroup); // For the construction of the SVG image we are only interested in the\r\n      // root group, so we expose it as the entry point of the SVG image for\r\n      // the other code in this class.\r\n\r\n      this.svg = rootGroup;\r\n      return svg;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    _ensureClipGroup() {\r\n      if (!this.current.clipGroup) {\r\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\r\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\r\n        this.svg.appendChild(clipGroup);\r\n        this.current.clipGroup = clipGroup;\r\n      }\r\n\r\n      return this.current.clipGroup;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    _ensureTransformGroup() {\r\n      if (!this.tgrp) {\r\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\r\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\r\n\r\n        if (this.current.activeClipUrl) {\r\n          this._ensureClipGroup().appendChild(this.tgrp);\r\n        } else {\r\n          this.svg.appendChild(this.tgrp);\r\n        }\r\n      }\r\n\r\n      return this.tgrp;\r\n    }\r\n\r\n  };\r\n}\r\n\r\n/* Copyright 2021 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass XfaLayer {\r\n  static setupStorage(html, id, element, storage, intent) {\r\n    const storedData = storage.getValue(id, {\r\n      value: null\r\n    });\r\n\r\n    switch (element.name) {\r\n      case \"textarea\":\r\n        if (storedData.value !== null) {\r\n          html.textContent = storedData.value;\r\n        }\r\n\r\n        if (intent === \"print\") {\r\n          break;\r\n        }\r\n\r\n        html.addEventListener(\"input\", event => {\r\n          storage.setValue(id, {\r\n            value: event.target.value\r\n          });\r\n        });\r\n        break;\r\n\r\n      case \"input\":\r\n        if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\r\n          if (storedData.value === element.attributes.xfaOn) {\r\n            html.setAttribute(\"checked\", true);\r\n          }\r\n\r\n          if (intent === \"print\") {\r\n            break;\r\n          }\r\n\r\n          html.addEventListener(\"change\", event => {\r\n            storage.setValue(id, {\r\n              value: event.target.getAttribute(\"xfaOn\")\r\n            });\r\n          });\r\n        } else {\r\n          if (storedData.value !== null) {\r\n            html.setAttribute(\"value\", storedData.value);\r\n          }\r\n\r\n          if (intent === \"print\") {\r\n            break;\r\n          }\r\n\r\n          html.addEventListener(\"input\", event => {\r\n            storage.setValue(id, {\r\n              value: event.target.value\r\n            });\r\n          });\r\n        }\r\n\r\n        break;\r\n\r\n      case \"select\":\r\n        if (storedData.value !== null) {\r\n          for (const option of element.children) {\r\n            if (option.attributes.value === storedData.value) {\r\n              option.attributes.selected = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        html.addEventListener(\"input\", event => {\r\n          const options = event.target.options;\r\n          const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\r\n          storage.setValue(id, {\r\n            value\r\n          });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  static setAttributes(html, element, storage, intent) {\r\n    const {\r\n      attributes\r\n    } = element;\r\n\r\n    if (attributes.type === \"radio\") {\r\n      // Avoid to have a radio group when printing with the same as one\r\n      // already displayed.\r\n      attributes.name = `${attributes.name}-${intent}`;\r\n    }\r\n\r\n    for (const [key, value] of Object.entries(attributes)) {\r\n      // We don't need to add dataId in the html object but it can\r\n      // be useful to know its value when writing printing tests:\r\n      // in this case, don't skip dataId to have its value.\r\n      if (value === null || value === undefined || key === \"dataId\") {\r\n        continue;\r\n      }\r\n\r\n      if (key !== \"style\") {\r\n        if (key === \"textContent\") {\r\n          html.textContent = value;\r\n        } else if (key === \"class\") {\r\n          html.setAttribute(key, value.join(\" \"));\r\n        } else {\r\n          html.setAttribute(key, value);\r\n        }\r\n      } else {\r\n        Object.assign(html.style, value);\r\n      }\r\n    } // Set the value after the others to be sure overwrite\r\n    // any other values.\r\n\r\n\r\n    if (storage && attributes.dataId) {\r\n      this.setupStorage(html, attributes.dataId, element, storage);\r\n    }\r\n  }\r\n\r\n  static render(parameters) {\r\n    const storage = parameters.annotationStorage;\r\n    const root = parameters.xfa;\r\n    const intent = parameters.intent || \"display\";\r\n    const rootHtml = document.createElement(root.name);\r\n\r\n    if (root.attributes) {\r\n      this.setAttributes(rootHtml, root);\r\n    }\r\n\r\n    const stack = [[root, -1, rootHtml]];\r\n    const rootDiv = parameters.div;\r\n    rootDiv.appendChild(rootHtml);\r\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\r\n    rootDiv.style.transform = transform; // Set defaults.\r\n\r\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\r\n\r\n    while (stack.length > 0) {\r\n      var _child$attributes;\r\n\r\n      const [parent, i, html] = stack[stack.length - 1];\r\n\r\n      if (i + 1 === parent.children.length) {\r\n        stack.pop();\r\n        continue;\r\n      }\r\n\r\n      const child = parent.children[++stack[stack.length - 1][1]];\r\n\r\n      if (child === null) {\r\n        continue;\r\n      }\r\n\r\n      const {\r\n        name\r\n      } = child;\r\n\r\n      if (name === \"#text\") {\r\n        html.appendChild(document.createTextNode(child.value));\r\n        continue;\r\n      }\r\n\r\n      let childHtml;\r\n\r\n      if (child !== null && child !== void 0 && (_child$attributes = child.attributes) !== null && _child$attributes !== void 0 && _child$attributes.xmlns) {\r\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\r\n      } else {\r\n        childHtml = document.createElement(name);\r\n      }\r\n\r\n      html.appendChild(childHtml);\r\n\r\n      if (child.attributes) {\r\n        this.setAttributes(childHtml, child, storage, intent);\r\n      }\r\n\r\n      if (child.children && child.children.length > 0) {\r\n        stack.push([child, -1, childHtml]);\r\n      } else if (child.value) {\r\n        childHtml.appendChild(document.createTextNode(child.value));\r\n      }\r\n    }\r\n    /**\r\n     * TODO: re-enable that stuff once we've JS implementation.\r\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\r\n     *\r\n     * for (const el of rootDiv.querySelectorAll(\r\n     * \".xfaDisabled input, .xfaDisabled textarea\"\r\n     * )) {\r\n     * el.setAttribute(\"disabled\", true);\r\n     * }\r\n     * for (const el of rootDiv.querySelectorAll(\r\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\r\n     * )) {\r\n     * el.setAttribute(\"readOnly\", true);\r\n     * }\r\n     */\r\n\r\n\r\n    for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\r\n      el.setAttribute(\"readOnly\", true);\r\n    }\r\n  }\r\n  /**\r\n   * Update the xfa layer.\r\n   *\r\n   * @public\r\n   * @param {XfaLayerParameters} parameters\r\n   * @memberof XfaLayer\r\n   */\r\n\r\n\r\n  static update(parameters) {\r\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\r\n    parameters.div.style.transform = transform;\r\n    parameters.div.hidden = false;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable-next-line no-unused-vars */\r\n\r\ntypeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\r\n/* eslint-disable-next-line no-unused-vars */\r\n\r\ntypeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\r\n\r\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\r\n  const streamsPromise = Promise.all([import('./network.js'), import('./fetch_stream.js')]);\r\n  setPDFNetworkStreamFactory(async params => {\r\n    const [{\r\n      PDFNetworkStream\r\n    }, {\r\n      PDFFetchStream\r\n    }] = await streamsPromise;\r\n\r\n    if (isValidFetchUrl(params.url)) {\r\n      return new PDFFetchStream(params);\r\n    }\r\n\r\n    return new PDFNetworkStream(params);\r\n  });\r\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\r\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\r\n    const {\r\n      PDFNodeStream\r\n    } = require(\"./node_stream.js\");\r\n\r\n    setPDFNetworkStreamFactory(params => {\r\n      return new PDFNodeStream(params);\r\n    });\r\n  } else {\r\n    const {\r\n      PDFNetworkStream\r\n    } = require(\"./network.js\");\r\n\r\n    const {\r\n      PDFFetchStream\r\n    } = require(\"./fetch_stream.js\");\r\n\r\n    setPDFNetworkStreamFactory(params => {\r\n      if (isValidFetchUrl(params.url)) {\r\n        return new PDFFetchStream(params);\r\n      }\r\n\r\n      return new PDFNetworkStream(params);\r\n    });\r\n  }\r\n}\r\n\r\nexport { AnnotationLayer, GlobalWorkerOptions, LoopbackPort, PDFDataRangeTransport, PDFWorker, SVGGraphics, XfaLayer, build, getDocument, renderTextLayer, version };\r\n", "/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CSS_UNITS = 96.0 / 72.0;\r\nconst DEFAULT_SCALE_VALUE = \"auto\";\r\nconst DEFAULT_SCALE = 1.0;\r\nconst MIN_SCALE = 0.1;\r\nconst MAX_SCALE = 10.0;\r\nconst UNKNOWN_SCALE = 0;\r\nconst MAX_AUTO_SCALE = 1.25;\r\nconst SCROLLBAR_PADDING = 40;\r\nconst VERTICAL_PADDING = 5;\r\nconst LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\";\r\nconst PresentationModeState = {\r\n  UNKNOWN: 0,\r\n  NORMAL: 1,\r\n  CHANGING: 2,\r\n  FULLSCREEN: 3\r\n};\r\nconst SidebarView = {\r\n  UNKNOWN: -1,\r\n  NONE: 0,\r\n  THUMBS: 1,\r\n  // Default value.\r\n  OUTLINE: 2,\r\n  ATTACHMENTS: 3,\r\n  LAYERS: 4\r\n};\r\nconst RendererType = {\r\n  CANVAS: \"canvas\",\r\n  SVG: \"svg\"\r\n};\r\nconst TextLayerMode = {\r\n  DISABLE: 0,\r\n  ENABLE: 1,\r\n  ENABLE_ENHANCE: 2\r\n};\r\nconst ScrollMode = {\r\n  UNKNOWN: -1,\r\n  VERTICAL: 0,\r\n  // Default value.\r\n  HORIZONTAL: 1,\r\n  WRAPPED: 2\r\n};\r\nconst SpreadMode = {\r\n  UNKNOWN: -1,\r\n  NONE: 0,\r\n  // Default value.\r\n  ODD: 1,\r\n  EVEN: 2\r\n}; // Used by `PDFViewerApplication`, and by the API unit-tests.\r\n\r\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\r\n/**\r\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\r\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\r\n *                   scales. The scaled property is set to false if scaling is\r\n *                   not required, true otherwise.\r\n */\r\n\r\nfunction getOutputScale(ctx) {\r\n  const devicePixelRatio = window.devicePixelRatio || 1;\r\n  const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\r\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\r\n  return {\r\n    sx: pixelRatio,\r\n    sy: pixelRatio,\r\n    scaled: pixelRatio !== 1\r\n  };\r\n}\r\n/**\r\n * Scrolls specified element into view of its parent.\r\n * @param {Object} element - The element to be visible.\r\n * @param {Object} spot - An object with optional top and left properties,\r\n *   specifying the offset from the top left edge.\r\n * @param {boolean} [scrollMatches] - When scrolling search results into view,\r\n *   ignore elements that either: Contains marked content identifiers,\r\n *   or have the CSS-rule `overflow: hidden;` set. The default value is `false`.\r\n */\r\n\r\n\r\nfunction scrollIntoView(element, spot, scrollMatches = false) {\r\n  // Assuming offsetParent is available (it's not available when viewer is in\r\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\r\n  // producing the error. See also animationStarted.\r\n  let parent = element.offsetParent;\r\n\r\n  if (!parent) {\r\n    console.error(\"offsetParent is not set -- cannot scroll\");\r\n    return;\r\n  }\r\n\r\n  let offsetY = element.offsetTop + element.clientTop;\r\n  let offsetX = element.offsetLeft + element.clientLeft;\r\n\r\n  while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || scrollMatches && (parent.classList.contains(\"markedContent\") || getComputedStyle(parent).overflow === \"hidden\")) {\r\n    offsetY += parent.offsetTop;\r\n    offsetX += parent.offsetLeft;\r\n    parent = parent.offsetParent;\r\n\r\n    if (!parent) {\r\n      return; // no need to scroll\r\n    }\r\n  }\r\n\r\n  if (spot) {\r\n    if (spot.top !== undefined) {\r\n      offsetY += spot.top;\r\n    }\r\n\r\n    if (spot.left !== undefined) {\r\n      offsetX += spot.left;\r\n      parent.scrollLeft = offsetX;\r\n    }\r\n  }\r\n\r\n  parent.scrollTop = offsetY;\r\n}\r\n/**\r\n * Helper function to start monitoring the scroll event and converting them into\r\n * PDF.js friendly one: with scroll debounce and scroll direction.\r\n */\r\n\r\n\r\nfunction watchScroll(viewAreaElement, callback) {\r\n  const debounceScroll = function (evt) {\r\n    if (rAF) {\r\n      return;\r\n    } // schedule an invocation of scroll for next animation frame.\r\n\r\n\r\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\r\n      rAF = null;\r\n      const currentX = viewAreaElement.scrollLeft;\r\n      const lastX = state.lastX;\r\n\r\n      if (currentX !== lastX) {\r\n        state.right = currentX > lastX;\r\n      }\r\n\r\n      state.lastX = currentX;\r\n      const currentY = viewAreaElement.scrollTop;\r\n      const lastY = state.lastY;\r\n\r\n      if (currentY !== lastY) {\r\n        state.down = currentY > lastY;\r\n      }\r\n\r\n      state.lastY = currentY;\r\n      callback(state);\r\n    });\r\n  };\r\n\r\n  const state = {\r\n    right: true,\r\n    down: true,\r\n    lastX: viewAreaElement.scrollLeft,\r\n    lastY: viewAreaElement.scrollTop,\r\n    _eventHandler: debounceScroll\r\n  };\r\n  let rAF = null;\r\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\r\n  return state;\r\n}\r\n/**\r\n * Helper function to parse query string (e.g. ?param1=value&parm2=...).\r\n */\r\n\r\n\r\nfunction parseQueryString(query) {\r\n  const parts = query.split(\"&\");\r\n  const params = Object.create(null);\r\n\r\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\r\n    const param = parts[i].split(\"=\");\r\n    const key = param[0].toLowerCase();\r\n    const value = param.length > 1 ? param[1] : null;\r\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\r\n  }\r\n\r\n  return params;\r\n}\r\n/**\r\n * Use binary search to find the index of the first item in a given array which\r\n * passes a given condition. The items are expected to be sorted in the sense\r\n * that if the condition is true for one item in the array, then it is also true\r\n * for all following items.\r\n *\r\n * @returns {number} Index of the first array element to pass the test,\r\n *                   or |items.length| if no such element exists.\r\n */\r\n\r\n\r\nfunction binarySearchFirstItem(items, condition) {\r\n  let minIndex = 0;\r\n  let maxIndex = items.length - 1;\r\n\r\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\r\n    return items.length;\r\n  }\r\n\r\n  if (condition(items[minIndex])) {\r\n    return minIndex;\r\n  }\r\n\r\n  while (minIndex < maxIndex) {\r\n    const currentIndex = minIndex + maxIndex >> 1;\r\n    const currentItem = items[currentIndex];\r\n\r\n    if (condition(currentItem)) {\r\n      maxIndex = currentIndex;\r\n    } else {\r\n      minIndex = currentIndex + 1;\r\n    }\r\n  }\r\n\r\n  return minIndex;\r\n  /* === maxIndex */\r\n}\r\n/**\r\n *  Approximates float number as a fraction using Farey sequence (max order\r\n *  of 8).\r\n *  @param {number} x - Positive float number.\r\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\r\n *                   the second one is a denominator.\r\n */\r\n\r\n\r\nfunction approximateFraction(x) {\r\n  // Fast paths for int numbers or their inversions.\r\n  if (Math.floor(x) === x) {\r\n    return [x, 1];\r\n  }\r\n\r\n  const xinv = 1 / x;\r\n  const limit = 8;\r\n\r\n  if (xinv > limit) {\r\n    return [1, limit];\r\n  } else if (Math.floor(xinv) === xinv) {\r\n    return [1, xinv];\r\n  }\r\n\r\n  const x_ = x > 1 ? xinv : x; // a/b and c/d are neighbours in Farey sequence.\r\n\r\n  let a = 0,\r\n      b = 1,\r\n      c = 1,\r\n      d = 1; // Limiting search to order 8.\r\n\r\n  while (true) {\r\n    // Generating next term in sequence (order of q).\r\n    const p = a + c,\r\n          q = b + d;\r\n\r\n    if (q > limit) {\r\n      break;\r\n    }\r\n\r\n    if (x_ <= p / q) {\r\n      c = p;\r\n      d = q;\r\n    } else {\r\n      a = p;\r\n      b = q;\r\n    }\r\n  }\r\n\r\n  let result; // Select closest of the neighbours to x.\r\n\r\n  if (x_ - a / b < c / d - x_) {\r\n    result = x_ === x ? [a, b] : [b, a];\r\n  } else {\r\n    result = x_ === x ? [c, d] : [d, c];\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction roundToDivide(x, div) {\r\n  const r = x % div;\r\n  return r === 0 ? x : Math.round(x - r + div);\r\n}\r\n/**\r\n * Gets the size of the specified page, converted from PDF units to inches.\r\n * @param {Object} An Object containing the properties: {Array} `view`,\r\n *   {number} `userUnit`, and {number} `rotate`.\r\n * @returns {Object} An Object containing the properties: {number} `width`\r\n *   and {number} `height`, given in inches.\r\n */\r\n\r\n\r\nfunction getPageSizeInches({\r\n  view,\r\n  userUnit,\r\n  rotate\r\n}) {\r\n  const [x1, y1, x2, y2] = view; // We need to take the page rotation into account as well.\r\n\r\n  const changeOrientation = rotate % 180 !== 0;\r\n  const width = (x2 - x1) / 72 * userUnit;\r\n  const height = (y2 - y1) / 72 * userUnit;\r\n  return {\r\n    width: changeOrientation ? height : width,\r\n    height: changeOrientation ? width : height\r\n  };\r\n}\r\n/**\r\n * Helper function for getVisibleElements.\r\n *\r\n * @param {number} index - initial guess at the first visible element\r\n * @param {Array} views - array of pages, into which `index` is an index\r\n * @param {number} top - the top of the scroll pane\r\n * @returns {number} less than or equal to `index` that is definitely at or\r\n *   before the first visible element in `views`, but not by too much. (Usually,\r\n *   this will be the first element in the first partially visible row in\r\n *   `views`, although sometimes it goes back one row further.)\r\n */\r\n\r\n\r\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\r\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\r\n  // one index where the conditions flips from false to true: [false ...,\r\n  // true...]. With vertical scrolling and spreads, it is possible to have\r\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\r\n  // similar sequence, with many more mixed true and false in the middle.\r\n  //\r\n  // So there is no guarantee that the binary search yields the index of the\r\n  // first visible element. It could have been any of the other visible elements\r\n  // that were preceded by a hidden element.\r\n  // Of course, if either this element or the previous (hidden) element is also\r\n  // the first element, there's nothing to worry about.\r\n  if (index < 2) {\r\n    return index;\r\n  } // That aside, the possible cases are represented below.\r\n  //\r\n  //     ****  = fully hidden\r\n  //     A*B*  = mix of partially visible and/or hidden pages\r\n  //     CDEF  = fully visible\r\n  //\r\n  // (1) Binary search could have returned A, in which case we can stop.\r\n  // (2) Binary search could also have returned B, in which case we need to\r\n  // check the whole row.\r\n  // (3) Binary search could also have returned C, in which case we need to\r\n  // check the whole previous row.\r\n  //\r\n  // There's one other possibility:\r\n  //\r\n  //     ****  = fully hidden\r\n  //     ABCD  = mix of fully and/or partially visible pages\r\n  //\r\n  // (4) Binary search could only have returned A.\r\n  // Initially assume that we need to find the beginning of the current row\r\n  // (case 1, 2, or 4), which means finding a page that is above the current\r\n  // page's top. If the found page is partially visible, we're definitely not in\r\n  // case 3, and this assumption is correct.\r\n\r\n\r\n  let elt = views[index].div;\r\n  let pageTop = elt.offsetTop + elt.clientTop;\r\n\r\n  if (pageTop >= top) {\r\n    // The found page is fully visible, so we're actually either in case 3 or 4,\r\n    // and unfortunately we can't tell the difference between them without\r\n    // scanning the entire previous row, so we just conservatively assume that\r\n    // we do need to backtrack to that row. In both cases, the previous page is\r\n    // in the previous row, so use its top instead.\r\n    elt = views[index - 1].div;\r\n    pageTop = elt.offsetTop + elt.clientTop;\r\n  } // Now we backtrack to the first page that still has its bottom below\r\n  // `pageTop`, which is the top of a page in the first visible row (unless\r\n  // we're in case 4, in which case it's the row before that).\r\n  // `index` is found by binary search, so the page at `index - 1` is\r\n  // invisible and we can start looking for potentially visible pages from\r\n  // `index - 2`. (However, if this loop terminates on its first iteration,\r\n  // which is the case when pages are stacked vertically, `index` should remain\r\n  // unchanged, so we use a distinct loop variable.)\r\n\r\n\r\n  for (let i = index - 2; i >= 0; --i) {\r\n    elt = views[i].div;\r\n\r\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\r\n      // We have reached the previous row, so stop now.\r\n      // This loop is expected to terminate relatively quickly because the\r\n      // number of pages per row is expected to be small.\r\n      break;\r\n    }\r\n\r\n    index = i;\r\n  }\r\n\r\n  return index;\r\n}\r\n/**\r\n * @typedef {Object} GetVisibleElementsParameters\r\n * @property {HTMLElement} scrollEl - A container that can possibly scroll.\r\n * @property {Array} views - Objects with a `div` property that contains an\r\n *   HTMLElement, which should all be descendants of `scrollEl` satisfying the\r\n *   relevant layout assumptions.\r\n * @property {boolean} sortByVisibility - If `true`, the returned elements are\r\n *   sorted in descending order of the percent of their padding box that is\r\n *   visible. The default value is `false`.\r\n * @property {boolean} horizontal - If `true`, the elements are assumed to be\r\n *   laid out horizontally instead of vertically. The default value is `false`.\r\n * @property {boolean} rtl - If `true`, the `scrollEl` container is assumed to\r\n *   be in right-to-left mode. The default value is `false`.\r\n */\r\n\r\n/**\r\n * Generic helper to find out what elements are visible within a scroll pane.\r\n *\r\n * Well, pretty generic. There are some assumptions placed on the elements\r\n * referenced by `views`:\r\n *   - If `horizontal`, no left of any earlier element is to the right of the\r\n *     left of any later element.\r\n *   - Otherwise, `views` can be split into contiguous rows where, within a row,\r\n *     no top of any element is below the bottom of any other element, and\r\n *     between rows, no bottom of any element in an earlier row is below the\r\n *     top of any element in a later row.\r\n *\r\n * (Here, top, left, etc. all refer to the padding edge of the element in\r\n * question. For pages, that ends up being equivalent to the bounding box of the\r\n * rendering canvas. Earlier and later refer to index in `views`, not page\r\n * layout.)\r\n *\r\n * @param {GetVisibleElementsParameters}\r\n * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\r\n */\r\n\r\n\r\nfunction getVisibleElements({\r\n  scrollEl,\r\n  views,\r\n  sortByVisibility = false,\r\n  horizontal = false,\r\n  rtl = false\r\n}) {\r\n  const top = scrollEl.scrollTop,\r\n        bottom = top + scrollEl.clientHeight;\r\n  const left = scrollEl.scrollLeft,\r\n        right = left + scrollEl.clientWidth; // Throughout this \"generic\" function, comments will assume we're working with\r\n  // PDF document pages, which is the most important and complex case. In this\r\n  // case, the visible elements we're actually interested is the page canvas,\r\n  // which is contained in a wrapper which adds no padding/border/margin, which\r\n  // is itself contained in `view.div` which adds no padding (but does add a\r\n  // border). So, as specified in this function's doc comment, this function\r\n  // does all of its work on the padding edge of the provided views, starting at\r\n  // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\r\n  // the border). Adding clientWidth/Height gets us the bottom-right corner of\r\n  // the padding edge.\r\n\r\n  function isElementBottomAfterViewTop(view) {\r\n    const element = view.div;\r\n    const elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\r\n    return elementBottom > top;\r\n  }\r\n\r\n  function isElementNextAfterViewHorizontally(view) {\r\n    const element = view.div;\r\n    const elementLeft = element.offsetLeft + element.clientLeft;\r\n    const elementRight = elementLeft + element.clientWidth;\r\n    return rtl ? elementLeft < right : elementRight > left;\r\n  }\r\n\r\n  const visible = [],\r\n        numViews = views.length;\r\n  let firstVisibleElementInd = binarySearchFirstItem(views, horizontal ? isElementNextAfterViewHorizontally : isElementBottomAfterViewTop); // Please note the return value of the `binarySearchFirstItem` function when\r\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\r\n\r\n  if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\r\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\r\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\r\n    // condition: there can be pages with bottoms above the view top between\r\n    // pages with bottoms below. This function detects and corrects that error;\r\n    // see it for more comments.\r\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top);\r\n  } // lastEdge acts as a cutoff for us to stop looping, because we know all\r\n  // subsequent pages will be hidden.\r\n  //\r\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\r\n  // simply stop the first time we reach a page below the bottom of the view;\r\n  // the tops of subsequent pages on the same row could still be visible. In\r\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\r\n  // we pass `right`, without needing the code below that handles the -1 case.\r\n\r\n\r\n  let lastEdge = horizontal ? right : -1;\r\n\r\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\r\n    const view = views[i],\r\n          element = view.div;\r\n    const currentWidth = element.offsetLeft + element.clientLeft;\r\n    const currentHeight = element.offsetTop + element.clientTop;\r\n    const viewWidth = element.clientWidth,\r\n          viewHeight = element.clientHeight;\r\n    const viewRight = currentWidth + viewWidth;\r\n    const viewBottom = currentHeight + viewHeight;\r\n\r\n    if (lastEdge === -1) {\r\n      // As commented above, this is only needed in non-horizontal cases.\r\n      // Setting lastEdge to the bottom of the first page that is partially\r\n      // visible ensures that the next page fully below lastEdge is on the\r\n      // next row, which has to be fully hidden along with all subsequent rows.\r\n      if (viewBottom >= bottom) {\r\n        lastEdge = viewBottom;\r\n      }\r\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\r\n      break;\r\n    }\r\n\r\n    if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\r\n      continue;\r\n    }\r\n\r\n    const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\r\n    const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\r\n    const fractionHeight = (viewHeight - hiddenHeight) / viewHeight,\r\n          fractionWidth = (viewWidth - hiddenWidth) / viewWidth;\r\n    const percent = fractionHeight * fractionWidth * 100 | 0;\r\n    visible.push({\r\n      id: view.id,\r\n      x: currentWidth,\r\n      y: currentHeight,\r\n      view,\r\n      percent,\r\n      widthPercent: fractionWidth * 100 | 0\r\n    });\r\n  }\r\n\r\n  const first = visible[0],\r\n        last = visible[visible.length - 1];\r\n\r\n  if (sortByVisibility) {\r\n    visible.sort(function (a, b) {\r\n      const pc = a.percent - b.percent;\r\n\r\n      if (Math.abs(pc) > 0.001) {\r\n        return -pc;\r\n      }\r\n\r\n      return a.id - b.id; // ensure stability\r\n    });\r\n  }\r\n\r\n  return {\r\n    first,\r\n    last,\r\n    views: visible\r\n  };\r\n}\r\n/**\r\n * Event handler to suppress context menu.\r\n */\r\n\r\n\r\nfunction noContextMenuHandler(evt) {\r\n  evt.preventDefault();\r\n}\r\n\r\nfunction normalizeWheelEventDirection(evt) {\r\n  let delta = Math.hypot(evt.deltaX, evt.deltaY);\r\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\r\n\r\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\r\n    // All that is left-up oriented has to change the sign.\r\n    delta = -delta;\r\n  }\r\n\r\n  return delta;\r\n}\r\n\r\nfunction normalizeWheelEventDelta(evt) {\r\n  let delta = normalizeWheelEventDirection(evt);\r\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\r\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\r\n  const MOUSE_PIXELS_PER_LINE = 30;\r\n  const MOUSE_LINES_PER_PAGE = 30; // Converts delta to per-page units\r\n\r\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\r\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\r\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\r\n    delta /= MOUSE_LINES_PER_PAGE;\r\n  }\r\n\r\n  return delta;\r\n}\r\n\r\nfunction isValidRotation(angle) {\r\n  return Number.isInteger(angle) && angle % 90 === 0;\r\n}\r\n\r\nfunction isValidScrollMode(mode) {\r\n  return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN;\r\n}\r\n\r\nfunction isValidSpreadMode(mode) {\r\n  return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN;\r\n}\r\n\r\nfunction isPortraitOrientation(size) {\r\n  return size.width <= size.height;\r\n}\r\n\r\nconst WaitOnType = {\r\n  EVENT: \"event\",\r\n  TIMEOUT: \"timeout\"\r\n};\r\n/**\r\n * @typedef {Object} WaitOnEventOrTimeoutParameters\r\n * @property {Object} target - The event target, can for example be:\r\n *   `window`, `document`, a DOM element, or an {EventBus} instance.\r\n * @property {string} name - The name of the event.\r\n * @property {number} delay - The delay, in milliseconds, after which the\r\n *   timeout occurs (if the event wasn't already dispatched).\r\n */\r\n\r\n/**\r\n * Allows waiting for an event or a timeout, whichever occurs first.\r\n * Can be used to ensure that an action always occurs, even when an event\r\n * arrives late or not at all.\r\n *\r\n * @param {WaitOnEventOrTimeoutParameters}\r\n * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\r\n */\r\n\r\nfunction waitOnEventOrTimeout({\r\n  target,\r\n  name,\r\n  delay = 0\r\n}) {\r\n  return new Promise(function (resolve, reject) {\r\n    if (typeof target !== \"object\" || !(name && typeof name === \"string\") || !(Number.isInteger(delay) && delay >= 0)) {\r\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\r\n    }\r\n\r\n    function handler(type) {\r\n      if (target instanceof EventBus) {\r\n        target._off(name, eventHandler);\r\n      } else {\r\n        target.removeEventListener(name, eventHandler);\r\n      }\r\n\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n\r\n      resolve(type);\r\n    }\r\n\r\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\r\n\r\n    if (target instanceof EventBus) {\r\n      target._on(name, eventHandler);\r\n    } else {\r\n      target.addEventListener(name, eventHandler);\r\n    }\r\n\r\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\r\n    const timeout = setTimeout(timeoutHandler, delay);\r\n  });\r\n}\r\n/**\r\n * Promise that is resolved when DOM window becomes visible.\r\n */\r\n\r\n\r\nconst animationStarted = new Promise(function (resolve) {\r\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\") && typeof window === \"undefined\") {\r\n    // Prevent \"ReferenceError: window is not defined\" errors when running the\r\n    // unit-tests in Node.js environments.\r\n    setTimeout(resolve, 20);\r\n    return;\r\n  }\r\n\r\n  window.requestAnimationFrame(resolve);\r\n});\r\n/**\r\n * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\r\n */\r\n\r\nfunction dispatchDOMEvent(eventName, args = null) {\r\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\r\n    throw new Error(\"Not implemented: dispatchDOMEvent\");\r\n  }\r\n\r\n  const details = Object.create(null);\r\n\r\n  if ((args === null || args === void 0 ? void 0 : args.length) > 0) {\r\n    const obj = args[0];\r\n\r\n    for (const key in obj) {\r\n      const value = obj[key];\r\n\r\n      if (key === \"source\") {\r\n        if (value === window || value === document) {\r\n          return; // No need to re-dispatch (already) global events.\r\n        }\r\n\r\n        continue; // Ignore the `source` property.\r\n      }\r\n\r\n      details[key] = value;\r\n    }\r\n  }\r\n\r\n  const event = document.createEvent(\"CustomEvent\");\r\n  event.initCustomEvent(eventName, true, true, details);\r\n  document.dispatchEvent(event);\r\n}\r\n/**\r\n * Simple event bus for an application. Listeners are attached using the `on`\r\n * and `off` methods. To raise an event, the `dispatch` method shall be used.\r\n */\r\n\r\n\r\nclass EventBus {\r\n  constructor(options) {\r\n    this._listeners = Object.create(null);\r\n\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) {\r\n      this._isInAutomation = (options === null || options === void 0 ? void 0 : options.isInAutomation) === true;\r\n    }\r\n  }\r\n  /**\r\n   * @param {string} eventName\r\n   * @param {function} listener\r\n   * @param {Object} [options]\r\n   */\r\n\r\n\r\n  on(eventName, listener, options = null) {\r\n    this._on(eventName, listener, {\r\n      external: true,\r\n      once: options === null || options === void 0 ? void 0 : options.once\r\n    });\r\n  }\r\n  /**\r\n   * @param {string} eventName\r\n   * @param {function} listener\r\n   * @param {Object} [options]\r\n   */\r\n\r\n\r\n  off(eventName, listener, options = null) {\r\n    this._off(eventName, listener, {\r\n      external: true,\r\n      once: options === null || options === void 0 ? void 0 : options.once\r\n    });\r\n  }\r\n\r\n  dispatch(eventName) {\r\n    const eventListeners = this._listeners[eventName];\r\n\r\n    if (!eventListeners || eventListeners.length === 0) {\r\n      if ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) && this._isInAutomation) {\r\n        const args = Array.prototype.slice.call(arguments, 1);\r\n        dispatchDOMEvent(eventName, args);\r\n      }\r\n\r\n      return;\r\n    } // Passing all arguments after the eventName to the listeners.\r\n\r\n\r\n    const args = Array.prototype.slice.call(arguments, 1);\r\n    let externalListeners; // Making copy of the listeners array in case if it will be modified\r\n    // during dispatch.\r\n\r\n    for (const {\r\n      listener,\r\n      external,\r\n      once\r\n    } of eventListeners.slice(0)) {\r\n      if (once) {\r\n        this._off(eventName, listener);\r\n      }\r\n\r\n      if (external) {\r\n        (externalListeners || (externalListeners = [])).push(listener);\r\n        continue;\r\n      }\r\n\r\n      listener.apply(null, args);\r\n    } // Dispatch any \"external\" listeners *after* the internal ones, to give the\r\n    // viewer components time to handle events and update their state first.\r\n\r\n\r\n    if (externalListeners) {\r\n      for (const listener of externalListeners) {\r\n        listener.apply(null, args);\r\n      }\r\n\r\n      externalListeners = null;\r\n    }\r\n\r\n    if ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) && this._isInAutomation) {\r\n      dispatchDOMEvent(eventName, args);\r\n    }\r\n  }\r\n  /**\r\n   * @ignore\r\n   */\r\n\r\n\r\n  _on(eventName, listener, options = null) {\r\n    var _this$_listeners;\r\n\r\n    const eventListeners = (_this$_listeners = this._listeners)[eventName] || (_this$_listeners[eventName] = []);\r\n    eventListeners.push({\r\n      listener,\r\n      external: (options === null || options === void 0 ? void 0 : options.external) === true,\r\n      once: (options === null || options === void 0 ? void 0 : options.once) === true\r\n    });\r\n  }\r\n  /**\r\n   * @ignore\r\n   */\r\n\r\n\r\n  _off(eventName, listener, options = null) {\r\n    const eventListeners = this._listeners[eventName];\r\n\r\n    if (!eventListeners) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\r\n      if (eventListeners[i].listener === listener) {\r\n        eventListeners.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction clamp(v, min, max) {\r\n  return Math.min(Math.max(v, min), max);\r\n}\r\n\r\nclass ProgressBar {\r\n  constructor(id, {\r\n    height,\r\n    width,\r\n    units\r\n  } = {}) {\r\n    this.visible = true; // Fetch the sub-elements for later.\r\n\r\n    this.div = document.querySelector(id + \" .progress\"); // Get the loading bar element, so it can be resized to fit the viewer.\r\n\r\n    this.bar = this.div.parentNode; // Get options, with sensible defaults.\r\n\r\n    this.height = height || 100;\r\n    this.width = width || 100;\r\n    this.units = units || \"%\"; // Initialize heights.\r\n\r\n    this.div.style.height = this.height + this.units;\r\n    this.percent = 0;\r\n  }\r\n\r\n  _updateBar() {\r\n    if (this._indeterminate) {\r\n      this.div.classList.add(\"indeterminate\");\r\n      this.div.style.width = this.width + this.units;\r\n      return;\r\n    }\r\n\r\n    this.div.classList.remove(\"indeterminate\");\r\n    const progressSize = this.width * this._percent / 100;\r\n    this.div.style.width = progressSize + this.units;\r\n  }\r\n\r\n  get percent() {\r\n    return this._percent;\r\n  }\r\n\r\n  set percent(val) {\r\n    this._indeterminate = isNaN(val);\r\n    this._percent = clamp(val, 0, 100);\r\n\r\n    this._updateBar();\r\n  }\r\n\r\n  setWidth(viewer) {\r\n    if (!viewer) {\r\n      return;\r\n    }\r\n\r\n    const container = viewer.parentNode;\r\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\r\n\r\n    if (scrollbarWidth > 0) {\r\n      const doc = document.documentElement;\r\n      doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`);\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    if (!this.visible) {\r\n      return;\r\n    }\r\n\r\n    this.visible = false;\r\n    this.bar.classList.add(\"hidden\");\r\n  }\r\n\r\n  show() {\r\n    if (this.visible) {\r\n      return;\r\n    }\r\n\r\n    this.visible = true;\r\n    this.bar.classList.remove(\"hidden\");\r\n  }\r\n\r\n}\r\n/**\r\n * Moves all elements of an array that satisfy condition to the end of the\r\n * array, preserving the order of the rest.\r\n */\r\n\r\n\r\nfunction moveToEndOfArray(arr, condition) {\r\n  const moved = [],\r\n        len = arr.length;\r\n  let write = 0;\r\n\r\n  for (let read = 0; read < len; ++read) {\r\n    if (condition(arr[read])) {\r\n      moved.push(arr[read]);\r\n    } else {\r\n      arr[write] = arr[read];\r\n      ++write;\r\n    }\r\n  }\r\n\r\n  for (let read = 0; write < len; ++read, ++write) {\r\n    arr[write] = moved[read];\r\n  }\r\n}\r\n/**\r\n * Get the active or focused element in current DOM.\r\n *\r\n * Recursively search for the truly active or focused element in case there are\r\n * shadow DOMs.\r\n *\r\n * @returns {Element} the truly active or focused element.\r\n */\r\n\r\n\r\nfunction getActiveOrFocusedElement() {\r\n  let curRoot = document;\r\n  let curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\");\r\n\r\n  while ((_curActiveOrFocused = curActiveOrFocused) !== null && _curActiveOrFocused !== void 0 && _curActiveOrFocused.shadowRoot) {\r\n    var _curActiveOrFocused;\r\n\r\n    curRoot = curActiveOrFocused.shadowRoot;\r\n    curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\");\r\n  }\r\n\r\n  return curActiveOrFocused;\r\n}\r\n/**\r\n * Converts API PageLayout values to the format used by `BaseViewer`.\r\n * NOTE: This is supported to the extent that the viewer implements the\r\n *       necessary Scroll/Spread modes (since SinglePage, TwoPageLeft,\r\n *       and TwoPageRight all suggests using non-continuous scrolling).\r\n * @param {string} mode - The API PageLayout value.\r\n * @returns {number} A value from {SpreadMode}.\r\n */\r\n\r\n\r\nfunction apiPageLayoutToSpreadMode(layout) {\r\n  switch (layout) {\r\n    case \"SinglePage\":\r\n    case \"OneColumn\":\r\n      return SpreadMode.NONE;\r\n\r\n    case \"TwoColumnLeft\":\r\n    case \"TwoPageLeft\":\r\n      return SpreadMode.ODD;\r\n\r\n    case \"TwoColumnRight\":\r\n    case \"TwoPageRight\":\r\n      return SpreadMode.EVEN;\r\n  }\r\n\r\n  return SpreadMode.NONE; // Default value.\r\n}\r\n/**\r\n * Converts API PageMode values to the format used by `PDFSidebar`.\r\n * NOTE: There's also a \"FullScreen\" parameter which is not possible to support,\r\n *       since the Fullscreen API used in browsers requires that entering\r\n *       fullscreen mode only occurs as a result of a user-initiated event.\r\n * @param {string} mode - The API PageMode value.\r\n * @returns {number} A value from {SidebarView}.\r\n */\r\n\r\n\r\nfunction apiPageModeToSidebarView(mode) {\r\n  switch (mode) {\r\n    case \"UseNone\":\r\n      return SidebarView.NONE;\r\n\r\n    case \"UseThumbs\":\r\n      return SidebarView.THUMBS;\r\n\r\n    case \"UseOutlines\":\r\n      return SidebarView.OUTLINE;\r\n\r\n    case \"UseAttachments\":\r\n      return SidebarView.ATTACHMENTS;\r\n\r\n    case \"UseOC\":\r\n      return SidebarView.LAYERS;\r\n  }\r\n\r\n  return SidebarView.NONE; // Default value.\r\n}\r\n\r\nexport { AutoPrintRegExp, CSS_UNITS, DEFAULT_SCALE, DEFAULT_SCALE_VALUE, EventBus, MAX_AUTO_SCALE, MAX_SCALE, MIN_SCALE, PresentationModeState, ProgressBar, RendererType, SCROLLBAR_PADDING, ScrollMode, SidebarView, SpreadMode, TextLayerMode, UNKNOWN_SCALE, VERTICAL_PADDING, WaitOnType, animationStarted, apiPageLayoutToSpreadMode, apiPageModeToSidebarView, approximateFraction, backtrackBeforeAllVisibleElements, binarySearchFirstItem, getActiveOrFocusedElement, getOutputScale, getPageSizeInches, getVisibleElements, isPortraitOrientation, isValidRotation, isValidScrollMode, isValidSpreadMode, moveToEndOfArray, noContextMenuHandler, normalizeWheelEventDelta, normalizeWheelEventDirection, parseQueryString, roundToDivide, scrollIntoView, waitOnEventOrTimeout, watchScroll };\r\n", "import './pdf.js';\r\nimport { R as RenderingCancelledException } from './display_utils.js';\r\nimport './util.js';\r\nimport './message_handler.js';\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CLEANUP_TIMEOUT = 30000;\r\nconst RenderingStates = {\r\n  INITIAL: 0,\r\n  RUNNING: 1,\r\n  PAUSED: 2,\r\n  FINISHED: 3\r\n};\r\n/**\r\n * Controls rendering of the views for pages and thumbnails.\r\n */\r\n\r\nclass PDFRenderingQueue {\r\n  constructor() {\r\n    this.pdfViewer = null;\r\n    this.pdfThumbnailViewer = null;\r\n    this.onIdle = null;\r\n    this.highestPriorityPage = null;\r\n    this.idleTimeout = null;\r\n    this.printing = false;\r\n    this.isThumbnailViewEnabled = false;\r\n  }\r\n  /**\r\n   * @param {PDFViewer} pdfViewer\r\n   */\r\n\r\n\r\n  setViewer(pdfViewer) {\r\n    this.pdfViewer = pdfViewer;\r\n  }\r\n  /**\r\n   * @param {PDFThumbnailViewer} pdfThumbnailViewer\r\n   */\r\n\r\n\r\n  setThumbnailViewer(pdfThumbnailViewer) {\r\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\r\n  }\r\n  /**\r\n   * @param {IRenderableView} view\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  isHighestPriority(view) {\r\n    return this.highestPriorityPage === view.renderingId;\r\n  }\r\n  /**\r\n   * @param {Object} currentlyVisiblePages\r\n   */\r\n\r\n\r\n  renderHighestPriority(currentlyVisiblePages) {\r\n    if (this.idleTimeout) {\r\n      clearTimeout(this.idleTimeout);\r\n      this.idleTimeout = null;\r\n    } // Pages have a higher priority than thumbnails, so check them first.\r\n\r\n\r\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\r\n      return;\r\n    } // No pages needed rendering, so check thumbnails.\r\n\r\n\r\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\r\n      if (this.pdfThumbnailViewer.forceRendering()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.printing) {\r\n      // If printing is currently ongoing do not reschedule cleanup.\r\n      return;\r\n    }\r\n\r\n    if (this.onIdle) {\r\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\r\n    }\r\n  }\r\n  /**\r\n   * @param {Object} visible\r\n   * @param {Array} views\r\n   * @param {boolean} scrolledDown\r\n   */\r\n\r\n\r\n  getHighestPriority(visible, views, scrolledDown) {\r\n    /**\r\n     * The state has changed. Figure out which page has the highest priority to\r\n     * render next (if any).\r\n     *\r\n     * Priority:\r\n     * 1. visible pages\r\n     * 2. if last scrolled down, the page after the visible pages, or\r\n     *    if last scrolled up, the page before the visible pages\r\n     */\r\n    const visibleViews = visible.views;\r\n    const numVisible = visibleViews.length;\r\n\r\n    if (numVisible === 0) {\r\n      return null;\r\n    }\r\n\r\n    for (let i = 0; i < numVisible; ++i) {\r\n      const view = visibleViews[i].view;\r\n\r\n      if (!this.isViewFinished(view)) {\r\n        return view;\r\n      }\r\n    } // All the visible views have rendered; try to render next/previous pages.\r\n\r\n\r\n    if (scrolledDown) {\r\n      const nextPageIndex = visible.last.id; // IDs start at 1, so no need to add 1.\r\n\r\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\r\n        return views[nextPageIndex];\r\n      }\r\n    } else {\r\n      const previousPageIndex = visible.first.id - 2;\r\n\r\n      if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\r\n        return views[previousPageIndex];\r\n      }\r\n    } // Everything that needs to be rendered has been.\r\n\r\n\r\n    return null;\r\n  }\r\n  /**\r\n   * @param {IRenderableView} view\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  isViewFinished(view) {\r\n    return view.renderingState === RenderingStates.FINISHED;\r\n  }\r\n  /**\r\n   * Render a page or thumbnail view. This calls the appropriate function\r\n   * based on the views state. If the view is already rendered it will return\r\n   * `false`.\r\n   *\r\n   * @param {IRenderableView} view\r\n   */\r\n\r\n\r\n  renderView(view) {\r\n    switch (view.renderingState) {\r\n      case RenderingStates.FINISHED:\r\n        return false;\r\n\r\n      case RenderingStates.PAUSED:\r\n        this.highestPriorityPage = view.renderingId;\r\n        view.resume();\r\n        break;\r\n\r\n      case RenderingStates.RUNNING:\r\n        this.highestPriorityPage = view.renderingId;\r\n        break;\r\n\r\n      case RenderingStates.INITIAL:\r\n        this.highestPriorityPage = view.renderingId;\r\n        view.draw().finally(() => {\r\n          this.renderHighestPriority();\r\n        }).catch(reason => {\r\n          if (reason instanceof RenderingCancelledException) {\r\n            return;\r\n          }\r\n\r\n          console.error(`renderView: \"${reason}\"`);\r\n        });\r\n        break;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport { PDFRenderingQueue, RenderingStates };\r\n", "/* Copyright 2021 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * A subset of the l10n strings in the `l10n/en-US/viewer.properties` file.\r\n */\r\nconst DEFAULT_L10N_STRINGS = {\r\n  of_pages: \"of {{pagesCount}}\",\r\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\r\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\r\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\r\n  document_properties_date_string: \"{{date}}, {{time}}\",\r\n  document_properties_page_size_unit_inches: \"in\",\r\n  document_properties_page_size_unit_millimeters: \"mm\",\r\n  document_properties_page_size_orientation_portrait: \"portrait\",\r\n  document_properties_page_size_orientation_landscape: \"landscape\",\r\n  document_properties_page_size_name_a3: \"A3\",\r\n  document_properties_page_size_name_a4: \"A4\",\r\n  document_properties_page_size_name_letter: \"Letter\",\r\n  document_properties_page_size_name_legal: \"Legal\",\r\n  document_properties_page_size_dimension_string: \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\r\n  document_properties_page_size_dimension_name_string: \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\r\n  document_properties_linearized_yes: \"Yes\",\r\n  document_properties_linearized_no: \"No\",\r\n  print_progress_percent: \"{{progress}}%\",\r\n  \"toggle_sidebar.title\": \"Toggle Sidebar\",\r\n  \"toggle_sidebar_notification2.title\": \"Toggle Sidebar (document contains outline/attachments/layers)\",\r\n  additional_layers: \"Additional Layers\",\r\n  page_landmark: \"Page {{page}}\",\r\n  thumb_page_title: \"Page {{page}}\",\r\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\r\n  find_reached_top: \"Reached top of document, continued from bottom\",\r\n  find_reached_bottom: \"Reached end of document, continued from top\",\r\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\r\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\r\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\r\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\r\n  find_not_found: \"Phrase not found\",\r\n  error_version_info: \"PDF.js v{{version}} (build: {{build}})\",\r\n  error_message: \"Message: {{message}}\",\r\n  error_stack: \"Stack: {{stack}}\",\r\n  error_file: \"File: {{file}}\",\r\n  error_line: \"Line: {{line}}\",\r\n  rendering_error: \"An error occurred while rendering the page.\",\r\n  page_scale_width: \"Page Width\",\r\n  page_scale_fit: \"Page Fit\",\r\n  page_scale_auto: \"Automatic Zoom\",\r\n  page_scale_actual: \"Actual Size\",\r\n  page_scale_percent: \"{{scale}}%\",\r\n  loading: \"Loading…\",\r\n  loading_error: \"An error occurred while loading the PDF.\",\r\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\r\n  missing_file_error: \"Missing PDF file.\",\r\n  unexpected_response_error: \"Unexpected server response.\",\r\n  printing_not_supported: \"Warning: Printing is not fully supported by this browser.\",\r\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\r\n  web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\"\r\n};\r\n\r\nfunction getL10nFallback(key, args) {\r\n  switch (key) {\r\n    case \"find_match_count\":\r\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\r\n      break;\r\n\r\n    case \"find_match_count_limit\":\r\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\r\n      break;\r\n  }\r\n\r\n  return DEFAULT_L10N_STRINGS[key] || \"\";\r\n}\r\n\r\nconst PARTIAL_LANG_CODES = {\r\n  en: \"en-US\",\r\n  es: \"es-ES\",\r\n  fy: \"fy-NL\",\r\n  ga: \"ga-IE\",\r\n  gu: \"gu-IN\",\r\n  hi: \"hi-IN\",\r\n  hy: \"hy-AM\",\r\n  nb: \"nb-NO\",\r\n  ne: \"ne-NP\",\r\n  nn: \"nn-NO\",\r\n  pa: \"pa-IN\",\r\n  pt: \"pt-PT\",\r\n  sv: \"sv-SE\",\r\n  zh: \"zh-CN\"\r\n}; // Try to support \"incompletely\" specified language codes (see issue 13689).\r\n\r\nfunction fixupLangCode(langCode) {\r\n  return PARTIAL_LANG_CODES[langCode === null || langCode === void 0 ? void 0 : langCode.toLowerCase()] || langCode;\r\n} // Replaces {{arguments}} with their values.\r\n\r\n\r\nfunction formatL10nValue(text, args) {\r\n  if (!args) {\r\n    return text;\r\n  }\r\n\r\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\r\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\r\n  });\r\n}\r\n/**\r\n * No-op implementation of the localization service.\r\n * @implements {IL10n}\r\n */\r\n\r\n\r\nconst NullL10n = {\r\n  async getLanguage() {\r\n    return \"en-us\";\r\n  },\r\n\r\n  async getDirection() {\r\n    return \"ltr\";\r\n  },\r\n\r\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\r\n    return formatL10nValue(fallback, args);\r\n  },\r\n\r\n  async translate(element) {}\r\n\r\n};\r\n\r\nexport { NullL10n, fixupLangCode, getL10nFallback };\r\n", "import { DEFAULT_SCALE, TextLayerMode, RendererType, CSS_UNITS, getOutputScale, approximateFraction, roundToDivide, watchScroll, PresentationModeState, UNKNOWN_SCALE, isValidRotation, SpreadMode, ScrollMode, scrollIntoView, isPortraitOrientation, MAX_AUTO_SCALE, SCROLLBAR_PADDING, VERTICAL_PADDING, DEFAULT_SCALE_VALUE, getVisibleElements, isValidScrollMode, isValidSpreadMode, moveToEndOfArray } from './ui_utils.js';\r\nimport { AnnotationLayer, SVGGraphics, renderTextLayer, XfaLayer, version } from './pdf.js';\r\nimport { RenderingStates, PDFRenderingQueue } from './pdf_rendering_queue.js';\r\nimport { NullL10n } from './l10n_utils.js';\r\nimport { l as createPromiseCapability, s as shadow } from './util.js';\r\nimport { R as RenderingCancelledException } from './display_utils.js';\r\nimport { SimpleLinkService } from './pdf_link_service.js';\r\nimport './message_handler.js';\r\n\r\n/* Copyright 2014 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @typedef {Object} AnnotationLayerBuilderOptions\r\n * @property {HTMLDivElement} pageDiv\r\n * @property {PDFPage} pdfPage\r\n * @property {AnnotationStorage} [annotationStorage]\r\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\r\n *   for annotation icons. Include trailing slash.\r\n * @property {boolean} renderInteractiveForms\r\n * @property {IPDFLinkService} linkService\r\n * @property {DownloadManager} downloadManager\r\n * @property {IL10n} l10n - Localization service.\r\n * @property {boolean} [enableScripting]\r\n * @property {Promise<boolean>} [hasJSActionsPromise]\r\n * @property {Object} [mouseState]\r\n */\r\n\r\nclass AnnotationLayerBuilder {\r\n  /**\r\n   * @param {AnnotationLayerBuilderOptions} options\r\n   */\r\n  constructor({\r\n    pageDiv,\r\n    pdfPage,\r\n    linkService,\r\n    downloadManager,\r\n    annotationStorage = null,\r\n    imageResourcesPath = \"\",\r\n    renderInteractiveForms = true,\r\n    l10n = NullL10n,\r\n    enableScripting = false,\r\n    hasJSActionsPromise = null,\r\n    mouseState = null\r\n  }) {\r\n    this.pageDiv = pageDiv;\r\n    this.pdfPage = pdfPage;\r\n    this.linkService = linkService;\r\n    this.downloadManager = downloadManager;\r\n    this.imageResourcesPath = imageResourcesPath;\r\n    this.renderInteractiveForms = renderInteractiveForms;\r\n    this.l10n = l10n;\r\n    this.annotationStorage = annotationStorage;\r\n    this.enableScripting = enableScripting;\r\n    this._hasJSActionsPromise = hasJSActionsPromise;\r\n    this._mouseState = mouseState;\r\n    this.div = null;\r\n    this._cancelled = false;\r\n  }\r\n  /**\r\n   * @param {PageViewport} viewport\r\n   * @param {string} intent (default value is 'display')\r\n   * @returns {Promise<void>} A promise that is resolved when rendering of the\r\n   *   annotations is complete.\r\n   */\r\n\r\n\r\n  render(viewport, intent = \"display\") {\r\n    return Promise.all([this.pdfPage.getAnnotations({\r\n      intent\r\n    }), this._hasJSActionsPromise]).then(([annotations, hasJSActions = false]) => {\r\n      if (this._cancelled) {\r\n        return;\r\n      }\r\n\r\n      if (annotations.length === 0) {\r\n        return;\r\n      }\r\n\r\n      const parameters = {\r\n        viewport: viewport.clone({\r\n          dontFlip: true\r\n        }),\r\n        div: this.div,\r\n        annotations,\r\n        page: this.pdfPage,\r\n        imageResourcesPath: this.imageResourcesPath,\r\n        renderInteractiveForms: this.renderInteractiveForms,\r\n        linkService: this.linkService,\r\n        downloadManager: this.downloadManager,\r\n        annotationStorage: this.annotationStorage,\r\n        enableScripting: this.enableScripting,\r\n        hasJSActions,\r\n        mouseState: this._mouseState\r\n      };\r\n\r\n      if (this.div) {\r\n        // If an annotationLayer already exists, refresh its children's\r\n        // transformation matrices.\r\n        AnnotationLayer.update(parameters);\r\n      } else {\r\n        // Create an annotation layer div and render the annotations\r\n        // if there is at least one annotation.\r\n        this.div = document.createElement(\"div\");\r\n        this.div.className = \"annotationLayer\";\r\n        this.pageDiv.appendChild(this.div);\r\n        parameters.div = this.div;\r\n        AnnotationLayer.render(parameters);\r\n        this.l10n.translate(this.div);\r\n      }\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this._cancelled = true;\r\n  }\r\n\r\n  hide() {\r\n    if (!this.div) {\r\n      return;\r\n    }\r\n\r\n    this.div.hidden = true;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2018 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst compatibilityParams = Object.create(null);\r\n\r\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\r\n  const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\r\n  const platform = typeof navigator !== \"undefined\" && navigator.platform || \"\";\r\n  const maxTouchPoints = typeof navigator !== \"undefined\" && navigator.maxTouchPoints || 1;\r\n  const isAndroid = /Android/.test(userAgent);\r\n  const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === \"MacIntel\" && maxTouchPoints > 1;\r\n  const isIOSChrome = /CriOS/.test(userAgent); // Checks if possible to use URL.createObjectURL()\r\n  // Support: IE, Chrome on iOS\r\n\r\n  (function checkOnBlobSupport() {\r\n    // Sometimes Chrome on iOS loses data created with createObjectURL(),\r\n    // see issue #8081.\r\n    if (isIOSChrome) {\r\n      compatibilityParams.disableCreateObjectURL = true;\r\n    }\r\n  })(); // Limit canvas size to 5 mega-pixels on mobile.\r\n  // Support: Android, iOS\r\n\r\n\r\n  (function checkCanvasSizeLimitation() {\r\n    if (isIOS || isAndroid) {\r\n      compatibilityParams.maxCanvasPixels = 5242880;\r\n    }\r\n  })();\r\n}\r\n\r\nconst viewerCompatibilityParams = Object.freeze(compatibilityParams);\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @typedef {Object} PDFPageViewOptions\r\n * @property {HTMLDivElement} container - The viewer element.\r\n * @property {EventBus} eventBus - The application event bus.\r\n * @property {number} id - The page unique ID (normally its number).\r\n * @property {number} scale - The page scale display.\r\n * @property {PageViewport} defaultViewport - The page viewport.\r\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\r\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\r\n *   The default value is `null`.\r\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\r\n * @property {IPDFTextLayerFactory} textLayerFactory\r\n * @property {number} [textLayerMode] - Controls if the text layer used for\r\n *   selection and searching is created, and if the improved text selection\r\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\r\n *   The default value is `TextLayerMode.ENABLE`.\r\n * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\r\n * @property {IPDFXfaLayerFactory} xfaLayerFactory\r\n * @property {IPDFStructTreeLayerFactory} structTreeLayerFactory\r\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\r\n *   for annotation icons. Include trailing slash.\r\n * @property {boolean} renderInteractiveForms - Turns on rendering of\r\n *   interactive form elements. The default value is `true`.\r\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\r\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\r\n *   value is `false`.\r\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\r\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\r\n *   is 4096 * 4096 (16 mega-pixels).\r\n * @property {IL10n} l10n - Localization service.\r\n */\r\n\r\nconst MAX_CANVAS_PIXELS = viewerCompatibilityParams.maxCanvasPixels || 16777216;\r\n/**\r\n * @implements {IRenderableView}\r\n */\r\n\r\nclass PDFPageView {\r\n  /**\r\n   * @param {PDFPageViewOptions} options\r\n   */\r\n  constructor(options) {\r\n    const container = options.container;\r\n    const defaultViewport = options.defaultViewport;\r\n    this.id = options.id;\r\n    this.renderingId = \"page\" + this.id;\r\n    this.pdfPage = null;\r\n    this.pageLabel = null;\r\n    this.rotation = 0;\r\n    this.scale = options.scale || DEFAULT_SCALE;\r\n    this.viewport = defaultViewport;\r\n    this.pdfPageRotate = defaultViewport.rotation;\r\n    this._optionalContentConfigPromise = options.optionalContentConfigPromise || null;\r\n    this.hasRestrictedScaling = false;\r\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : TextLayerMode.ENABLE;\r\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\r\n    this.renderInteractiveForms = options.renderInteractiveForms !== false;\r\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\r\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\r\n    this.eventBus = options.eventBus;\r\n    this.renderingQueue = options.renderingQueue;\r\n    this.textLayerFactory = options.textLayerFactory;\r\n    this.annotationLayerFactory = options.annotationLayerFactory;\r\n    this.xfaLayerFactory = options.xfaLayerFactory;\r\n    this.structTreeLayerFactory = options.structTreeLayerFactory;\r\n    this.renderer = options.renderer || RendererType.CANVAS;\r\n    this.l10n = options.l10n || NullL10n;\r\n    this.paintTask = null;\r\n    this.paintedViewportMap = new WeakMap();\r\n    this.renderingState = RenderingStates.INITIAL;\r\n    this.resume = null;\r\n    this._renderError = null;\r\n    this.annotationLayer = null;\r\n    this.textLayer = null;\r\n    this.zoomLayer = null;\r\n    this.xfaLayer = null;\r\n    this.structTreeLayer = null;\r\n    const div = document.createElement(\"div\");\r\n    div.className = \"page\";\r\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\r\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\r\n    div.setAttribute(\"data-page-number\", this.id);\r\n    div.setAttribute(\"role\", \"region\");\r\n    this.l10n.get(\"page_landmark\", {\r\n      page: this.id\r\n    }).then(msg => {\r\n      div.setAttribute(\"aria-label\", msg);\r\n    });\r\n    this.div = div;\r\n    container.appendChild(div);\r\n  }\r\n\r\n  setPdfPage(pdfPage) {\r\n    this.pdfPage = pdfPage;\r\n    this.pdfPageRotate = pdfPage.rotate;\r\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\r\n    this.viewport = pdfPage.getViewport({\r\n      scale: this.scale * CSS_UNITS,\r\n      rotation: totalRotation\r\n    });\r\n    this.reset();\r\n  }\r\n\r\n  destroy() {\r\n    this.reset();\r\n\r\n    if (this.pdfPage) {\r\n      this.pdfPage.cleanup();\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  async _renderAnnotationLayer() {\r\n    let error = null;\r\n\r\n    try {\r\n      await this.annotationLayer.render(this.viewport, \"display\");\r\n    } catch (ex) {\r\n      error = ex;\r\n    } finally {\r\n      this.eventBus.dispatch(\"annotationlayerrendered\", {\r\n        source: this,\r\n        pageNumber: this.id,\r\n        error\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  async _renderXfaLayer() {\r\n    let error = null;\r\n\r\n    try {\r\n      await this.xfaLayer.render(this.viewport, \"display\");\r\n    } catch (ex) {\r\n      error = ex;\r\n    } finally {\r\n      this.eventBus.dispatch(\"xfalayerrendered\", {\r\n        source: this,\r\n        pageNumber: this.id,\r\n        error\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _resetZoomLayer(removeFromDOM = false) {\r\n    if (!this.zoomLayer) {\r\n      return;\r\n    }\r\n\r\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\r\n    this.paintedViewportMap.delete(zoomLayerCanvas); // Zeroing the width and height causes Firefox to release graphics\r\n    // resources immediately, which can greatly reduce memory consumption.\r\n\r\n    zoomLayerCanvas.width = 0;\r\n    zoomLayerCanvas.height = 0;\r\n\r\n    if (removeFromDOM) {\r\n      // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\r\n      this.zoomLayer.remove();\r\n    }\r\n\r\n    this.zoomLayer = null;\r\n  }\r\n\r\n  reset({\r\n    keepZoomLayer = false,\r\n    keepAnnotationLayer = false,\r\n    keepXfaLayer = false\r\n  } = {}) {\r\n    var _this$annotationLayer, _this$xfaLayer;\r\n\r\n    this.cancelRendering({\r\n      keepAnnotationLayer,\r\n      keepXfaLayer\r\n    });\r\n    this.renderingState = RenderingStates.INITIAL;\r\n    const div = this.div;\r\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\r\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\r\n    const childNodes = div.childNodes,\r\n          zoomLayerNode = keepZoomLayer && this.zoomLayer || null,\r\n          annotationLayerNode = keepAnnotationLayer && ((_this$annotationLayer = this.annotationLayer) === null || _this$annotationLayer === void 0 ? void 0 : _this$annotationLayer.div) || null,\r\n          xfaLayerNode = keepXfaLayer && ((_this$xfaLayer = this.xfaLayer) === null || _this$xfaLayer === void 0 ? void 0 : _this$xfaLayer.div) || null;\r\n\r\n    for (let i = childNodes.length - 1; i >= 0; i--) {\r\n      const node = childNodes[i];\r\n\r\n      switch (node) {\r\n        case zoomLayerNode:\r\n        case annotationLayerNode:\r\n        case xfaLayerNode:\r\n          continue;\r\n      }\r\n\r\n      div.removeChild(node);\r\n    }\r\n\r\n    div.removeAttribute(\"data-loaded\");\r\n\r\n    if (annotationLayerNode) {\r\n      // Hide the annotation layer until all elements are resized\r\n      // so they are not displayed on the already resized page.\r\n      this.annotationLayer.hide();\r\n    }\r\n\r\n    if (xfaLayerNode) {\r\n      // Hide the XFA layer until all elements are resized\r\n      // so they are not displayed on the already resized page.\r\n      this.xfaLayer.hide();\r\n    }\r\n\r\n    if (!zoomLayerNode) {\r\n      if (this.canvas) {\r\n        this.paintedViewportMap.delete(this.canvas); // Zeroing the width and height causes Firefox to release graphics\r\n        // resources immediately, which can greatly reduce memory consumption.\r\n\r\n        this.canvas.width = 0;\r\n        this.canvas.height = 0;\r\n        delete this.canvas;\r\n      }\r\n\r\n      this._resetZoomLayer();\r\n    }\r\n\r\n    if (this.svg) {\r\n      this.paintedViewportMap.delete(this.svg);\r\n      delete this.svg;\r\n    }\r\n\r\n    this.loadingIconDiv = document.createElement(\"div\");\r\n    this.loadingIconDiv.className = \"loadingIcon\";\r\n    this.loadingIconDiv.setAttribute(\"role\", \"img\");\r\n    this.l10n.get(\"loading\").then(msg => {\r\n      var _this$loadingIconDiv;\r\n\r\n      (_this$loadingIconDiv = this.loadingIconDiv) === null || _this$loadingIconDiv === void 0 ? void 0 : _this$loadingIconDiv.setAttribute(\"aria-label\", msg);\r\n    });\r\n    div.appendChild(this.loadingIconDiv);\r\n  }\r\n\r\n  update(scale, rotation, optionalContentConfigPromise = null) {\r\n    this.scale = scale || this.scale; // The rotation may be zero.\r\n\r\n    if (typeof rotation !== \"undefined\") {\r\n      this.rotation = rotation;\r\n    }\r\n\r\n    if (optionalContentConfigPromise instanceof Promise) {\r\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\r\n    }\r\n\r\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\r\n    this.viewport = this.viewport.clone({\r\n      scale: this.scale * CSS_UNITS,\r\n      rotation: totalRotation\r\n    });\r\n\r\n    if (this.svg) {\r\n      this.cssTransform({\r\n        target: this.svg,\r\n        redrawAnnotationLayer: true,\r\n        redrawXfaLayer: true\r\n      });\r\n      this.eventBus.dispatch(\"pagerendered\", {\r\n        source: this,\r\n        pageNumber: this.id,\r\n        cssTransform: true,\r\n        timestamp: performance.now(),\r\n        error: this._renderError\r\n      });\r\n      return;\r\n    }\r\n\r\n    let isScalingRestricted = false;\r\n\r\n    if (this.canvas && this.maxCanvasPixels > 0) {\r\n      const outputScale = this.outputScale;\r\n\r\n      if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > this.maxCanvasPixels) {\r\n        isScalingRestricted = true;\r\n      }\r\n    }\r\n\r\n    if (this.canvas) {\r\n      if (this.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\r\n        this.cssTransform({\r\n          target: this.canvas,\r\n          redrawAnnotationLayer: true,\r\n          redrawXfaLayer: true\r\n        });\r\n        this.eventBus.dispatch(\"pagerendered\", {\r\n          source: this,\r\n          pageNumber: this.id,\r\n          cssTransform: true,\r\n          timestamp: performance.now(),\r\n          error: this._renderError\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!this.zoomLayer && !this.canvas.hidden) {\r\n        this.zoomLayer = this.canvas.parentNode;\r\n        this.zoomLayer.style.position = \"absolute\";\r\n      }\r\n    }\r\n\r\n    if (this.zoomLayer) {\r\n      this.cssTransform({\r\n        target: this.zoomLayer.firstChild\r\n      });\r\n    }\r\n\r\n    this.reset({\r\n      keepZoomLayer: true,\r\n      keepAnnotationLayer: true,\r\n      keepXfaLayer: true\r\n    });\r\n  }\r\n  /**\r\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\r\n   *              rather than calling this one directly.\r\n   */\r\n\r\n\r\n  cancelRendering({\r\n    keepAnnotationLayer = false,\r\n    keepXfaLayer = false\r\n  } = {}) {\r\n    if (this.paintTask) {\r\n      this.paintTask.cancel();\r\n      this.paintTask = null;\r\n    }\r\n\r\n    this.resume = null;\r\n\r\n    if (this.textLayer) {\r\n      this.textLayer.cancel();\r\n      this.textLayer = null;\r\n    }\r\n\r\n    if (this.annotationLayer && (!keepAnnotationLayer || !this.annotationLayer.div)) {\r\n      this.annotationLayer.cancel();\r\n      this.annotationLayer = null;\r\n    }\r\n\r\n    if (this.xfaLayer && (!keepXfaLayer || !this.xfaLayer.div)) {\r\n      this.xfaLayer.cancel();\r\n      this.xfaLayer = null;\r\n    }\r\n\r\n    if (this._onTextLayerRendered) {\r\n      this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered);\r\n\r\n      this._onTextLayerRendered = null;\r\n    }\r\n  }\r\n\r\n  cssTransform({\r\n    target,\r\n    redrawAnnotationLayer = false,\r\n    redrawXfaLayer = false\r\n  }) {\r\n    // Scale target (canvas or svg), its wrapper and page container.\r\n    const width = this.viewport.width;\r\n    const height = this.viewport.height;\r\n    const div = this.div;\r\n    target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + \"px\";\r\n    target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + \"px\"; // The canvas may have been originally rotated; rotate relative to that.\r\n\r\n    const relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\r\n    const absRotation = Math.abs(relativeRotation);\r\n    let scaleX = 1,\r\n        scaleY = 1;\r\n\r\n    if (absRotation === 90 || absRotation === 270) {\r\n      // Scale x and y because of the rotation.\r\n      scaleX = height / width;\r\n      scaleY = width / height;\r\n    }\r\n\r\n    target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\r\n\r\n    if (this.textLayer) {\r\n      // Rotating the text layer is more complicated since the divs inside the\r\n      // the text layer are rotated.\r\n      // TODO: This could probably be simplified by drawing the text layer in\r\n      // one orientation and then rotating overall.\r\n      const textLayerViewport = this.textLayer.viewport;\r\n      const textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\r\n      const textAbsRotation = Math.abs(textRelativeRotation);\r\n      let scale = width / textLayerViewport.width;\r\n\r\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\r\n        scale = width / textLayerViewport.height;\r\n      }\r\n\r\n      const textLayerDiv = this.textLayer.textLayerDiv;\r\n      let transX, transY;\r\n\r\n      switch (textAbsRotation) {\r\n        case 0:\r\n          transX = transY = 0;\r\n          break;\r\n\r\n        case 90:\r\n          transX = 0;\r\n          transY = \"-\" + textLayerDiv.style.height;\r\n          break;\r\n\r\n        case 180:\r\n          transX = \"-\" + textLayerDiv.style.width;\r\n          transY = \"-\" + textLayerDiv.style.height;\r\n          break;\r\n\r\n        case 270:\r\n          transX = \"-\" + textLayerDiv.style.width;\r\n          transY = 0;\r\n          break;\r\n\r\n        default:\r\n          console.error(\"Bad rotation value.\");\r\n          break;\r\n      }\r\n\r\n      textLayerDiv.style.transform = `rotate(${textAbsRotation}deg) ` + `scale(${scale}) ` + `translate(${transX}, ${transY})`;\r\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\r\n    }\r\n\r\n    if (redrawAnnotationLayer && this.annotationLayer) {\r\n      this._renderAnnotationLayer();\r\n    }\r\n\r\n    if (redrawXfaLayer && this.xfaLayer) {\r\n      this._renderXfaLayer();\r\n    }\r\n  }\r\n\r\n  get width() {\r\n    return this.viewport.width;\r\n  }\r\n\r\n  get height() {\r\n    return this.viewport.height;\r\n  }\r\n\r\n  getPagePoint(x, y) {\r\n    return this.viewport.convertToPdfPoint(x, y);\r\n  }\r\n\r\n  draw() {\r\n    var _this$annotationLayer2, _this$xfaLayer2;\r\n\r\n    if (this.renderingState !== RenderingStates.INITIAL) {\r\n      console.error(\"Must be in new state before drawing\");\r\n      this.reset(); // Ensure that we reset all state to prevent issues.\r\n    }\r\n\r\n    const {\r\n      div,\r\n      pdfPage\r\n    } = this;\r\n\r\n    if (!pdfPage) {\r\n      this.renderingState = RenderingStates.FINISHED;\r\n\r\n      if (this.loadingIconDiv) {\r\n        div.removeChild(this.loadingIconDiv);\r\n        delete this.loadingIconDiv;\r\n      }\r\n\r\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\r\n    }\r\n\r\n    this.renderingState = RenderingStates.RUNNING; // Wrap the canvas so that if it has a CSS transform for high DPI the\r\n    // overflow will be hidden in Firefox.\r\n\r\n    const canvasWrapper = document.createElement(\"div\");\r\n    canvasWrapper.style.width = div.style.width;\r\n    canvasWrapper.style.height = div.style.height;\r\n    canvasWrapper.classList.add(\"canvasWrapper\");\r\n\r\n    if ((_this$annotationLayer2 = this.annotationLayer) !== null && _this$annotationLayer2 !== void 0 && _this$annotationLayer2.div) {\r\n      // The annotation layer needs to stay on top.\r\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\r\n    } else {\r\n      div.appendChild(canvasWrapper);\r\n    }\r\n\r\n    let textLayer = null;\r\n\r\n    if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\r\n      var _this$annotationLayer3;\r\n\r\n      const textLayerDiv = document.createElement(\"div\");\r\n      textLayerDiv.className = \"textLayer\";\r\n      textLayerDiv.style.width = canvasWrapper.style.width;\r\n      textLayerDiv.style.height = canvasWrapper.style.height;\r\n\r\n      if ((_this$annotationLayer3 = this.annotationLayer) !== null && _this$annotationLayer3 !== void 0 && _this$annotationLayer3.div) {\r\n        // The annotation layer needs to stay on top.\r\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\r\n      } else {\r\n        div.appendChild(textLayerDiv);\r\n      }\r\n\r\n      textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.textLayerMode === TextLayerMode.ENABLE_ENHANCE, this.eventBus);\r\n    }\r\n\r\n    this.textLayer = textLayer;\r\n\r\n    if ((_this$xfaLayer2 = this.xfaLayer) !== null && _this$xfaLayer2 !== void 0 && _this$xfaLayer2.div) {\r\n      // The xfa layer needs to stay on top.\r\n      div.appendChild(this.xfaLayer.div);\r\n    }\r\n\r\n    let renderContinueCallback = null;\r\n\r\n    if (this.renderingQueue) {\r\n      renderContinueCallback = cont => {\r\n        if (!this.renderingQueue.isHighestPriority(this)) {\r\n          this.renderingState = RenderingStates.PAUSED;\r\n\r\n          this.resume = () => {\r\n            this.renderingState = RenderingStates.RUNNING;\r\n            cont();\r\n          };\r\n\r\n          return;\r\n        }\r\n\r\n        cont();\r\n      };\r\n    }\r\n\r\n    const finishPaintTask = async (error = null) => {\r\n      // The paintTask may have been replaced by a new one, so only remove\r\n      // the reference to the paintTask if it matches the one that is\r\n      // triggering this callback.\r\n      if (paintTask === this.paintTask) {\r\n        this.paintTask = null;\r\n      }\r\n\r\n      if (error instanceof RenderingCancelledException) {\r\n        this._renderError = null;\r\n        return;\r\n      }\r\n\r\n      this._renderError = error;\r\n      this.renderingState = RenderingStates.FINISHED;\r\n\r\n      if (this.loadingIconDiv) {\r\n        div.removeChild(this.loadingIconDiv);\r\n        delete this.loadingIconDiv;\r\n      }\r\n\r\n      this._resetZoomLayer(\r\n      /* removeFromDOM = */\r\n      true);\r\n\r\n      this.eventBus.dispatch(\"pagerendered\", {\r\n        source: this,\r\n        pageNumber: this.id,\r\n        cssTransform: false,\r\n        timestamp: performance.now(),\r\n        error: this._renderError\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    const paintTask = this.renderer === RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\r\n    paintTask.onRenderContinue = renderContinueCallback;\r\n    this.paintTask = paintTask;\r\n    const resultPromise = paintTask.promise.then(() => {\r\n      return finishPaintTask(null).then(() => {\r\n        if (textLayer) {\r\n          const readableStream = pdfPage.streamTextContent({\r\n            normalizeWhitespace: true,\r\n            includeMarkedContent: true\r\n          });\r\n          textLayer.setTextContentStream(readableStream);\r\n          textLayer.render();\r\n        }\r\n      });\r\n    }, function (reason) {\r\n      return finishPaintTask(reason);\r\n    });\r\n\r\n    if (this.annotationLayerFactory) {\r\n      if (!this.annotationLayer) {\r\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage,\r\n        /* annotationStorage = */\r\n        null, this.imageResourcesPath, this.renderInteractiveForms, this.l10n,\r\n        /* enableScripting */\r\n        null,\r\n        /* hasJSActionsPromise = */\r\n        null,\r\n        /* mouseState = */\r\n        null);\r\n      }\r\n\r\n      this._renderAnnotationLayer();\r\n    }\r\n\r\n    if (this.xfaLayerFactory) {\r\n      if (!this.xfaLayer) {\r\n        this.xfaLayer = this.xfaLayerFactory.createXfaLayerBuilder(div, pdfPage,\r\n        /* annotationStorage = */\r\n        null);\r\n      }\r\n\r\n      this._renderXfaLayer();\r\n    } // The structure tree is currently only supported when the text layer is\r\n    // enabled and a canvas is used for rendering.\r\n\r\n\r\n    if (this.structTreeLayerFactory && this.textLayer && this.canvas) {\r\n      // The structure tree must be generated after the text layer for the\r\n      // aria-owns to work.\r\n      this._onTextLayerRendered = event => {\r\n        if (event.pageNumber !== this.id) {\r\n          return;\r\n        }\r\n\r\n        this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered);\r\n\r\n        this._onTextLayerRendered = null;\r\n\r\n        if (!this.canvas) {\r\n          return; // The canvas was removed, prevent errors below.\r\n        }\r\n\r\n        this.pdfPage.getStructTree().then(tree => {\r\n          if (!tree) {\r\n            return;\r\n          }\r\n\r\n          if (!this.canvas) {\r\n            return; // The canvas was removed, prevent errors below.\r\n          }\r\n\r\n          const treeDom = this.structTreeLayer.render(tree);\r\n          treeDom.classList.add(\"structTree\");\r\n          this.canvas.appendChild(treeDom);\r\n        });\r\n      };\r\n\r\n      this.eventBus._on(\"textlayerrendered\", this._onTextLayerRendered);\r\n\r\n      this.structTreeLayer = this.structTreeLayerFactory.createStructTreeLayerBuilder(pdfPage);\r\n    }\r\n\r\n    div.setAttribute(\"data-loaded\", true);\r\n    this.eventBus.dispatch(\"pagerender\", {\r\n      source: this,\r\n      pageNumber: this.id\r\n    });\r\n    return resultPromise;\r\n  }\r\n\r\n  paintOnCanvas(canvasWrapper) {\r\n    const renderCapability = createPromiseCapability();\r\n    const result = {\r\n      promise: renderCapability.promise,\r\n\r\n      onRenderContinue(cont) {\r\n        cont();\r\n      },\r\n\r\n      cancel() {\r\n        renderTask.cancel();\r\n      }\r\n\r\n    };\r\n    const viewport = this.viewport;\r\n    const canvas = document.createElement(\"canvas\"); // Keep the canvas hidden until the first draw callback, or until drawing\r\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\r\n\r\n    canvas.hidden = true;\r\n    let isCanvasHidden = true;\r\n\r\n    const showCanvas = function () {\r\n      if (isCanvasHidden) {\r\n        canvas.hidden = false;\r\n        isCanvasHidden = false;\r\n      }\r\n    };\r\n\r\n    canvasWrapper.appendChild(canvas);\r\n    this.canvas = canvas;\r\n\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL || GENERIC\")) {\r\n      canvas.mozOpaque = true;\r\n    }\r\n\r\n    const ctx = canvas.getContext(\"2d\", {\r\n      alpha: false\r\n    });\r\n    const outputScale = getOutputScale(ctx);\r\n    this.outputScale = outputScale;\r\n\r\n    if (this.useOnlyCssZoom) {\r\n      const actualSizeViewport = viewport.clone({\r\n        scale: CSS_UNITS\r\n      }); // Use a scale that makes the canvas have the originally intended size\r\n      // of the page.\r\n\r\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\r\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\r\n      outputScale.scaled = true;\r\n    }\r\n\r\n    if (this.maxCanvasPixels > 0) {\r\n      const pixelsInViewport = viewport.width * viewport.height;\r\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\r\n\r\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\r\n        outputScale.sx = maxScale;\r\n        outputScale.sy = maxScale;\r\n        outputScale.scaled = true;\r\n        this.hasRestrictedScaling = true;\r\n      } else {\r\n        this.hasRestrictedScaling = false;\r\n      }\r\n    }\r\n\r\n    const sfx = approximateFraction(outputScale.sx);\r\n    const sfy = approximateFraction(outputScale.sy);\r\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\r\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\r\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\r\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\"; // Add the viewport so it's known what it was originally drawn with.\r\n\r\n    this.paintedViewportMap.set(canvas, viewport); // Rendering area\r\n\r\n    const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\r\n    const renderContext = {\r\n      canvasContext: ctx,\r\n      transform,\r\n      viewport: this.viewport,\r\n      renderInteractiveForms: this.renderInteractiveForms,\r\n      optionalContentConfigPromise: this._optionalContentConfigPromise\r\n    };\r\n    const renderTask = this.pdfPage.render(renderContext);\r\n\r\n    renderTask.onContinue = function (cont) {\r\n      showCanvas();\r\n\r\n      if (result.onRenderContinue) {\r\n        result.onRenderContinue(cont);\r\n      } else {\r\n        cont();\r\n      }\r\n    };\r\n\r\n    renderTask.promise.then(function () {\r\n      showCanvas();\r\n      renderCapability.resolve(undefined);\r\n    }, function (error) {\r\n      showCanvas();\r\n      renderCapability.reject(error);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  paintOnSvg(wrapper) {\r\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\r\n      // Return a mock object, to prevent errors such as e.g.\r\n      // \"TypeError: paintTask.promise is undefined\".\r\n      return {\r\n        promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\r\n\r\n        onRenderContinue(cont) {},\r\n\r\n        cancel() {}\r\n\r\n      };\r\n    }\r\n\r\n    let cancelled = false;\r\n\r\n    const ensureNotCancelled = () => {\r\n      if (cancelled) {\r\n        throw new RenderingCancelledException(`Rendering cancelled, page ${this.id}`, \"svg\");\r\n      }\r\n    };\r\n\r\n    const pdfPage = this.pdfPage;\r\n    const actualSizeViewport = this.viewport.clone({\r\n      scale: CSS_UNITS\r\n    });\r\n    const promise = pdfPage.getOperatorList().then(opList => {\r\n      ensureNotCancelled();\r\n      const svgGfx = new SVGGraphics(pdfPage.commonObjs, pdfPage.objs,\r\n      /* forceDataSchema = */\r\n      viewerCompatibilityParams.disableCreateObjectURL);\r\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\r\n        ensureNotCancelled();\r\n        this.svg = svg;\r\n        this.paintedViewportMap.set(svg, actualSizeViewport);\r\n        svg.style.width = wrapper.style.width;\r\n        svg.style.height = wrapper.style.height;\r\n        this.renderingState = RenderingStates.FINISHED;\r\n        wrapper.appendChild(svg);\r\n      });\r\n    });\r\n    return {\r\n      promise,\r\n\r\n      onRenderContinue(cont) {\r\n        cont();\r\n      },\r\n\r\n      cancel() {\r\n        cancelled = true;\r\n      }\r\n\r\n    };\r\n  }\r\n  /**\r\n   * @param {string|null} label\r\n   */\r\n\r\n\r\n  setPageLabel(label) {\r\n    this.pageLabel = typeof label === \"string\" ? label : null;\r\n\r\n    if (this.pageLabel !== null) {\r\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\r\n    } else {\r\n      this.div.removeAttribute(\"data-page-label\");\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2021 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PDF_ROLE_TO_HTML_ROLE = {\r\n  // Document level structure types\r\n  Document: null,\r\n  // There's a \"document\" role, but it doesn't make sense here.\r\n  DocumentFragment: null,\r\n  // Grouping level structure types\r\n  Part: \"group\",\r\n  Sect: \"group\",\r\n  // XXX: There's a \"section\" role, but it's abstract.\r\n  Div: \"group\",\r\n  Aside: \"note\",\r\n  NonStruct: \"none\",\r\n  // Block level structure types\r\n  P: null,\r\n  // H<n>,\r\n  H: \"heading\",\r\n  Title: null,\r\n  FENote: \"note\",\r\n  // Sub-block level structure type\r\n  Sub: \"group\",\r\n  // General inline level structure types\r\n  Lbl: null,\r\n  Span: null,\r\n  Em: null,\r\n  Strong: null,\r\n  Link: \"link\",\r\n  Annot: \"note\",\r\n  Form: \"form\",\r\n  // Ruby and Warichu structure types\r\n  Ruby: null,\r\n  RB: null,\r\n  RT: null,\r\n  RP: null,\r\n  Warichu: null,\r\n  WT: null,\r\n  WP: null,\r\n  // List standard structure types\r\n  L: \"list\",\r\n  LI: \"listitem\",\r\n  LBody: null,\r\n  // Table standard structure types\r\n  Table: \"table\",\r\n  TR: \"row\",\r\n  TH: \"columnheader\",\r\n  TD: \"cell\",\r\n  THead: \"columnheader\",\r\n  TBody: null,\r\n  TFoot: null,\r\n  // Standard structure type Caption\r\n  Caption: null,\r\n  // Standard structure type Figure\r\n  Figure: \"figure\",\r\n  // Standard structure type Formula\r\n  Formula: null,\r\n  // standard structure type Artifact\r\n  Artifact: null\r\n};\r\nconst HEADING_PATTERN = /^H(\\d+)$/;\r\n/**\r\n * @typedef {Object} StructTreeLayerBuilderOptions\r\n * @property {PDFPage} pdfPage\r\n */\r\n\r\nclass StructTreeLayerBuilder {\r\n  /**\r\n   * @param {StructTreeLayerBuilderOptions} options\r\n   */\r\n  constructor({\r\n    pdfPage\r\n  }) {\r\n    this.pdfPage = pdfPage;\r\n  }\r\n\r\n  render(structTree) {\r\n    return this._walk(structTree);\r\n  }\r\n\r\n  _setAttributes(structElement, htmlElement) {\r\n    if (structElement.alt !== undefined) {\r\n      htmlElement.setAttribute(\"aria-label\", structElement.alt);\r\n    }\r\n\r\n    if (structElement.id !== undefined) {\r\n      htmlElement.setAttribute(\"aria-owns\", structElement.id);\r\n    }\r\n  }\r\n\r\n  _walk(node) {\r\n    if (!node) {\r\n      return null;\r\n    }\r\n\r\n    const element = document.createElement(\"span\");\r\n\r\n    if (\"role\" in node) {\r\n      const {\r\n        role\r\n      } = node;\r\n      const match = role.match(HEADING_PATTERN);\r\n\r\n      if (match) {\r\n        element.setAttribute(\"role\", \"heading\");\r\n        element.setAttribute(\"aria-level\", match[1]);\r\n      } else if (PDF_ROLE_TO_HTML_ROLE[role]) {\r\n        element.setAttribute(\"role\", PDF_ROLE_TO_HTML_ROLE[role]);\r\n      }\r\n    }\r\n\r\n    this._setAttributes(node, element);\r\n\r\n    if (node.children) {\r\n      if (node.children.length === 1 && \"id\" in node.children[0]) {\r\n        // Often there is only one content node so just set the values on the\r\n        // parent node to avoid creating an extra span.\r\n        this._setAttributes(node.children[0], element);\r\n      } else {\r\n        for (const kid of node.children) {\r\n          element.appendChild(this._walk(kid));\r\n        }\r\n      }\r\n    }\r\n\r\n    return element;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst EXPAND_DIVS_TIMEOUT = 300; // ms\r\n\r\n/**\r\n * @typedef {Object} TextLayerBuilderOptions\r\n * @property {HTMLDivElement} textLayerDiv - The text layer container.\r\n * @property {EventBus} eventBus - The application event bus.\r\n * @property {number} pageIndex - The page index.\r\n * @property {PageViewport} viewport - The viewport of the text layer.\r\n * @property {PDFFindController} findController\r\n * @property {boolean} enhanceTextSelection - Option to turn on improved\r\n *   text selection.\r\n */\r\n\r\n/**\r\n * The text layer builder provides text selection functionality for the PDF.\r\n * It does this by creating overlay divs over the PDF's text. These divs\r\n * contain text that matches the PDF text they are overlaying. This object\r\n * also provides a way to highlight text that is being searched for.\r\n */\r\n\r\nclass TextLayerBuilder {\r\n  constructor({\r\n    textLayerDiv,\r\n    eventBus,\r\n    pageIndex,\r\n    viewport,\r\n    findController = null,\r\n    enhanceTextSelection = false\r\n  }) {\r\n    this.textLayerDiv = textLayerDiv;\r\n    this.eventBus = eventBus;\r\n    this.textContent = null;\r\n    this.textContentItemsStr = [];\r\n    this.textContentStream = null;\r\n    this.renderingDone = false;\r\n    this.pageIdx = pageIndex;\r\n    this.pageNumber = this.pageIdx + 1;\r\n    this.matches = [];\r\n    this.viewport = viewport;\r\n    this.textDivs = [];\r\n    this.findController = findController;\r\n    this.textLayerRenderTask = null;\r\n    this.enhanceTextSelection = enhanceTextSelection;\r\n    this._onUpdateTextLayerMatches = null;\r\n\r\n    this._bindMouse();\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _finishRendering() {\r\n    this.renderingDone = true;\r\n\r\n    if (!this.enhanceTextSelection) {\r\n      const endOfContent = document.createElement(\"div\");\r\n      endOfContent.className = \"endOfContent\";\r\n      this.textLayerDiv.appendChild(endOfContent);\r\n    }\r\n\r\n    this.eventBus.dispatch(\"textlayerrendered\", {\r\n      source: this,\r\n      pageNumber: this.pageNumber,\r\n      numTextDivs: this.textDivs.length\r\n    });\r\n  }\r\n  /**\r\n   * Renders the text layer.\r\n   *\r\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\r\n   *                             before rendering.\r\n   */\r\n\r\n\r\n  render(timeout = 0) {\r\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\r\n      return;\r\n    }\r\n\r\n    this.cancel();\r\n    this.textDivs = [];\r\n    const textLayerFrag = document.createDocumentFragment();\r\n    this.textLayerRenderTask = renderTextLayer({\r\n      textContent: this.textContent,\r\n      textContentStream: this.textContentStream,\r\n      container: textLayerFrag,\r\n      viewport: this.viewport,\r\n      textDivs: this.textDivs,\r\n      textContentItemsStr: this.textContentItemsStr,\r\n      timeout,\r\n      enhanceTextSelection: this.enhanceTextSelection\r\n    });\r\n    this.textLayerRenderTask.promise.then(() => {\r\n      this.textLayerDiv.appendChild(textLayerFrag);\r\n\r\n      this._finishRendering();\r\n\r\n      this._updateMatches();\r\n    }, function (reason) {// Cancelled or failed to render text layer; skipping errors.\r\n    });\r\n\r\n    if (!this._onUpdateTextLayerMatches) {\r\n      this._onUpdateTextLayerMatches = evt => {\r\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\r\n          this._updateMatches();\r\n        }\r\n      };\r\n\r\n      this.eventBus._on(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\r\n    }\r\n  }\r\n  /**\r\n   * Cancel rendering of the text layer.\r\n   */\r\n\r\n\r\n  cancel() {\r\n    if (this.textLayerRenderTask) {\r\n      this.textLayerRenderTask.cancel();\r\n      this.textLayerRenderTask = null;\r\n    }\r\n\r\n    if (this._onUpdateTextLayerMatches) {\r\n      this.eventBus._off(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\r\n\r\n      this._onUpdateTextLayerMatches = null;\r\n    }\r\n  }\r\n\r\n  setTextContentStream(readableStream) {\r\n    this.cancel();\r\n    this.textContentStream = readableStream;\r\n  }\r\n\r\n  setTextContent(textContent) {\r\n    this.cancel();\r\n    this.textContent = textContent;\r\n  }\r\n\r\n  _convertMatches(matches, matchesLength) {\r\n    // Early exit if there is nothing to convert.\r\n    if (!matches) {\r\n      return [];\r\n    }\r\n\r\n    const {\r\n      textContentItemsStr\r\n    } = this;\r\n    let i = 0,\r\n        iIndex = 0;\r\n    const end = textContentItemsStr.length - 1;\r\n    const result = [];\r\n\r\n    for (let m = 0, mm = matches.length; m < mm; m++) {\r\n      // Calculate the start position.\r\n      let matchIdx = matches[m]; // Loop over the divIdxs.\r\n\r\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\r\n        iIndex += textContentItemsStr[i].length;\r\n        i++;\r\n      }\r\n\r\n      if (i === textContentItemsStr.length) {\r\n        console.error(\"Could not find a matching mapping\");\r\n      }\r\n\r\n      const match = {\r\n        begin: {\r\n          divIdx: i,\r\n          offset: matchIdx - iIndex\r\n        }\r\n      }; // Calculate the end position.\r\n\r\n      matchIdx += matchesLength[m]; // Somewhat the same array as above, but use > instead of >= to get\r\n      // the end position right.\r\n\r\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\r\n        iIndex += textContentItemsStr[i].length;\r\n        i++;\r\n      }\r\n\r\n      match.end = {\r\n        divIdx: i,\r\n        offset: matchIdx - iIndex\r\n      };\r\n      result.push(match);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  _renderMatches(matches) {\r\n    // Early exit if there is nothing to render.\r\n    if (matches.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      findController,\r\n      pageIdx,\r\n      textContentItemsStr,\r\n      textDivs\r\n    } = this;\r\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\r\n    const selectedMatchIdx = findController.selected.matchIdx;\r\n    const highlightAll = findController.state.highlightAll;\r\n    let prevEnd = null;\r\n    const infinity = {\r\n      divIdx: -1,\r\n      offset: undefined\r\n    };\r\n\r\n    function beginText(begin, className) {\r\n      const divIdx = begin.divIdx;\r\n      textDivs[divIdx].textContent = \"\";\r\n      return appendTextToDiv(divIdx, 0, begin.offset, className);\r\n    }\r\n\r\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\r\n      const div = textDivs[divIdx];\r\n      const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\r\n      const node = document.createTextNode(content);\r\n\r\n      if (className) {\r\n        const span = document.createElement(\"span\");\r\n        span.className = `${className} appended`;\r\n        span.appendChild(node);\r\n        div.appendChild(span);\r\n        return className.includes(\"selected\") ? span.offsetLeft : 0;\r\n      }\r\n\r\n      div.appendChild(node);\r\n      return 0;\r\n    }\r\n\r\n    let i0 = selectedMatchIdx,\r\n        i1 = i0 + 1;\r\n\r\n    if (highlightAll) {\r\n      i0 = 0;\r\n      i1 = matches.length;\r\n    } else if (!isSelectedPage) {\r\n      // Not highlighting all and this isn't the selected page, so do nothing.\r\n      return;\r\n    }\r\n\r\n    for (let i = i0; i < i1; i++) {\r\n      const match = matches[i];\r\n      const begin = match.begin;\r\n      const end = match.end;\r\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\r\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\r\n      let selectedLeft = 0; // Match inside new div.\r\n\r\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\r\n        // If there was a previous div, then add the text at the end.\r\n        if (prevEnd !== null) {\r\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\r\n        } // Clear the divs and set the content until the starting point.\r\n\r\n\r\n        beginText(begin);\r\n      } else {\r\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\r\n      }\r\n\r\n      if (begin.divIdx === end.divIdx) {\r\n        selectedLeft = appendTextToDiv(begin.divIdx, begin.offset, end.offset, \"highlight\" + highlightSuffix);\r\n      } else {\r\n        selectedLeft = appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, \"highlight begin\" + highlightSuffix);\r\n\r\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\r\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\r\n        }\r\n\r\n        beginText(end, \"highlight end\" + highlightSuffix);\r\n      }\r\n\r\n      prevEnd = end;\r\n\r\n      if (isSelected) {\r\n        // Attempt to scroll the selected match into view.\r\n        findController.scrollMatchIntoView({\r\n          element: textDivs[begin.divIdx],\r\n          selectedLeft,\r\n          pageIndex: pageIdx,\r\n          matchIndex: selectedMatchIdx\r\n        });\r\n      }\r\n    }\r\n\r\n    if (prevEnd) {\r\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\r\n    }\r\n  }\r\n\r\n  _updateMatches() {\r\n    // Only show matches when all rendering is done.\r\n    if (!this.renderingDone) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      findController,\r\n      matches,\r\n      pageIdx,\r\n      textContentItemsStr,\r\n      textDivs\r\n    } = this;\r\n    let clearedUntilDivIdx = -1; // Clear all current matches.\r\n\r\n    for (let i = 0, ii = matches.length; i < ii; i++) {\r\n      const match = matches[i];\r\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\r\n\r\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\r\n        const div = textDivs[n];\r\n        div.textContent = textContentItemsStr[n];\r\n        div.className = \"\";\r\n      }\r\n\r\n      clearedUntilDivIdx = match.end.divIdx + 1;\r\n    }\r\n\r\n    if (!(findController !== null && findController !== void 0 && findController.highlightMatches)) {\r\n      return;\r\n    } // Convert the matches on the `findController` into the match format\r\n    // used for the textLayer.\r\n\r\n\r\n    const pageMatches = findController.pageMatches[pageIdx] || null;\r\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\r\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\r\n\r\n    this._renderMatches(this.matches);\r\n  }\r\n  /**\r\n   * Improves text selection by adding an additional div where the mouse was\r\n   * clicked. This reduces flickering of the content if the mouse is slowly\r\n   * dragged up or down.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  _bindMouse() {\r\n    const div = this.textLayerDiv;\r\n    let expandDivsTimer = null;\r\n    div.addEventListener(\"mousedown\", evt => {\r\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\r\n        this.textLayerRenderTask.expandTextDivs(true);\r\n\r\n        if ((typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) && expandDivsTimer) {\r\n          clearTimeout(expandDivsTimer);\r\n          expandDivsTimer = null;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const end = div.querySelector(\".endOfContent\");\r\n\r\n      if (!end) {\r\n        return;\r\n      }\r\n\r\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\r\n        // On non-Firefox browsers, the selection will feel better if the height\r\n        // of the `endOfContent` div is adjusted to start at mouse click\r\n        // location. This avoids flickering when the selection moves up.\r\n        // However it does not work when selection is started on empty space.\r\n        let adjustTop = evt.target !== div;\r\n\r\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\r\n          adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue(\"-moz-user-select\") !== \"none\";\r\n        }\r\n\r\n        if (adjustTop) {\r\n          const divBounds = div.getBoundingClientRect();\r\n          const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\r\n          end.style.top = (r * 100).toFixed(2) + \"%\";\r\n        }\r\n      }\r\n\r\n      end.classList.add(\"active\");\r\n    });\r\n    div.addEventListener(\"mouseup\", () => {\r\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\r\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\r\n          expandDivsTimer = setTimeout(() => {\r\n            if (this.textLayerRenderTask) {\r\n              this.textLayerRenderTask.expandTextDivs(false);\r\n            }\r\n\r\n            expandDivsTimer = null;\r\n          }, EXPAND_DIVS_TIMEOUT);\r\n        } else {\r\n          this.textLayerRenderTask.expandTextDivs(false);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const end = div.querySelector(\".endOfContent\");\r\n\r\n      if (!end) {\r\n        return;\r\n      }\r\n\r\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\r\n        end.style.top = \"\";\r\n      }\r\n\r\n      end.classList.remove(\"active\");\r\n    });\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2021 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @typedef {Object} XfaLayerBuilderOptions\r\n * @property {HTMLDivElement} pageDiv\r\n * @property {PDFPage} pdfPage\r\n * @property {AnnotationStorage} [annotationStorage]\r\n */\r\n\r\nclass XfaLayerBuilder {\r\n  /**\r\n   * @param {XfaLayerBuilderOptions} options\r\n   */\r\n  constructor({\r\n    pageDiv,\r\n    pdfPage,\r\n    xfaHtml,\r\n    annotationStorage\r\n  }) {\r\n    this.pageDiv = pageDiv;\r\n    this.pdfPage = pdfPage;\r\n    this.xfaHtml = xfaHtml;\r\n    this.annotationStorage = annotationStorage;\r\n    this.div = null;\r\n    this._cancelled = false;\r\n  }\r\n  /**\r\n   * @param {PageViewport} viewport\r\n   * @param {string} intent (default value is 'display')\r\n   * @returns {Promise<void>} A promise that is resolved when rendering of the\r\n   *   annotations is complete.\r\n   */\r\n\r\n\r\n  render(viewport, intent = \"display\") {\r\n    if (intent === \"print\") {\r\n      const parameters = {\r\n        viewport: viewport.clone({\r\n          dontFlip: true\r\n        }),\r\n        div: this.div,\r\n        xfa: this.xfaHtml,\r\n        page: null,\r\n        annotationStorage: this.annotationStorage,\r\n        intent\r\n      }; // Create an xfa layer div and render the form\r\n\r\n      const div = document.createElement(\"div\");\r\n      this.pageDiv.appendChild(div);\r\n      parameters.div = div;\r\n      XfaLayer.render(parameters);\r\n      return Promise.resolve();\r\n    } // intent === \"display\"\r\n\r\n\r\n    return this.pdfPage.getXfa().then(xfa => {\r\n      if (this._cancelled) {\r\n        return;\r\n      }\r\n\r\n      const parameters = {\r\n        viewport: viewport.clone({\r\n          dontFlip: true\r\n        }),\r\n        div: this.div,\r\n        xfa,\r\n        page: this.pdfPage,\r\n        annotationStorage: this.annotationStorage,\r\n        intent\r\n      };\r\n\r\n      if (this.div) {\r\n        XfaLayer.update(parameters);\r\n      } else {\r\n        // Create an xfa layer div and render the form\r\n        this.div = document.createElement(\"div\");\r\n        this.pageDiv.appendChild(this.div);\r\n        parameters.div = this.div;\r\n        XfaLayer.render(parameters);\r\n      }\r\n    }).catch(error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this._cancelled = true;\r\n  }\r\n\r\n  hide() {\r\n    if (!this.div) {\r\n      return;\r\n    }\r\n\r\n    this.div.hidden = true;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2014 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_CACHE_SIZE = 10;\r\n/**\r\n * @typedef {Object} PDFViewerOptions\r\n * @property {HTMLDivElement} container - The container for the viewer element.\r\n * @property {HTMLDivElement} [viewer] - The viewer element.\r\n * @property {EventBus} eventBus - The application event bus.\r\n * @property {IPDFLinkService} linkService - The navigation/linking service.\r\n * @property {DownloadManager} [downloadManager] - The download manager\r\n *   component.\r\n * @property {PDFFindController} [findController] - The find controller\r\n *   component.\r\n * @property {PDFScriptingManager} [scriptingManager] - The scripting manager\r\n *   component.\r\n * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\r\n * @property {boolean} [removePageBorders] - Removes the border shadow around\r\n *   the pages. The default value is `false`.\r\n * @property {number} [textLayerMode] - Controls if the text layer used for\r\n *   selection and searching is created, and if the improved text selection\r\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\r\n *   The default value is `TextLayerMode.ENABLE`.\r\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\r\n *   mainly for annotation icons. Include trailing slash.\r\n * @property {boolean} [renderInteractiveForms] - Enables rendering of\r\n *   interactive form elements. The default value is `true`.\r\n * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\r\n *   landscape pages upon printing. The default is `false`.\r\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\r\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\r\n *   value is `false`.\r\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\r\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\r\n *   is 4096 * 4096 (16 mega-pixels).\r\n * @property {IL10n} l10n - Localization service.\r\n * @property {boolean} [enableScripting] - Enable embedded script execution\r\n *   (also requires {scriptingManager} being set). The default value is `false`.\r\n */\r\n\r\nfunction PDFPageViewBuffer(size) {\r\n  const data = [];\r\n\r\n  this.push = function (view) {\r\n    const i = data.indexOf(view);\r\n\r\n    if (i >= 0) {\r\n      data.splice(i, 1);\r\n    }\r\n\r\n    data.push(view);\r\n\r\n    if (data.length > size) {\r\n      data.shift().destroy();\r\n    }\r\n  };\r\n  /**\r\n   * After calling resize, the size of the buffer will be newSize. The optional\r\n   * parameter pagesToKeep is, if present, an array of pages to push to the back\r\n   * of the buffer, delaying their destruction. The size of pagesToKeep has no\r\n   * impact on the final size of the buffer; if pagesToKeep has length larger\r\n   * than newSize, some of those pages will be destroyed anyway.\r\n   */\r\n\r\n\r\n  this.resize = function (newSize, pagesToKeep) {\r\n    size = newSize;\r\n\r\n    if (pagesToKeep) {\r\n      const pageIdsToKeep = new Set();\r\n\r\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\r\n        pageIdsToKeep.add(pagesToKeep[i].id);\r\n      }\r\n\r\n      moveToEndOfArray(data, function (page) {\r\n        return pageIdsToKeep.has(page.id);\r\n      });\r\n    }\r\n\r\n    while (data.length > size) {\r\n      data.shift().destroy();\r\n    }\r\n  };\r\n\r\n  this.has = function (view) {\r\n    return data.includes(view);\r\n  };\r\n}\r\n\r\nfunction isSameScale(oldScale, newScale) {\r\n  if (newScale === oldScale) {\r\n    return true;\r\n  }\r\n\r\n  if (Math.abs(newScale - oldScale) < 1e-15) {\r\n    // Prevent unnecessary re-rendering of all pages when the scale\r\n    // changes only because of limited numerical precision.\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * Simple viewer control to display PDF content/pages.\r\n * @implements {IRenderableView}\r\n */\r\n\r\n\r\nclass BaseViewer {\r\n  /**\r\n   * @param {PDFViewerOptions} options\r\n   */\r\n  constructor(options) {\r\n    if (this.constructor === BaseViewer) {\r\n      throw new Error(\"Cannot initialize BaseViewer.\");\r\n    }\r\n\r\n    const viewerVersion = typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\r\n\r\n    if (version !== viewerVersion) {\r\n      throw new Error(`The API version \"${version}\" does not match the Viewer version \"${viewerVersion}\".`);\r\n    }\r\n\r\n    this._name = this.constructor.name;\r\n    this.container = options.container;\r\n    this.viewer = options.viewer || options.container.firstElementChild;\r\n\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")) {\r\n      var _this$container, _this$viewer;\r\n\r\n      if (!(((_this$container = this.container) === null || _this$container === void 0 ? void 0 : _this$container.tagName.toUpperCase()) === \"DIV\" && ((_this$viewer = this.viewer) === null || _this$viewer === void 0 ? void 0 : _this$viewer.tagName.toUpperCase()) === \"DIV\")) {\r\n        throw new Error(\"Invalid `container` and/or `viewer` option.\");\r\n      }\r\n\r\n      if (this.container.offsetParent && getComputedStyle(this.container).position !== \"absolute\") {\r\n        throw new Error(\"The `container` must be absolutely positioned.\");\r\n      }\r\n    }\r\n\r\n    this.eventBus = options.eventBus;\r\n    this.linkService = options.linkService || new SimpleLinkService();\r\n    this.downloadManager = options.downloadManager || null;\r\n    this.findController = options.findController || null;\r\n    this._scriptingManager = options.scriptingManager || null;\r\n    this.removePageBorders = options.removePageBorders || false;\r\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : TextLayerMode.ENABLE;\r\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\r\n    this.renderInteractiveForms = options.renderInteractiveForms !== false;\r\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\r\n    this.renderer = options.renderer || RendererType.CANVAS;\r\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\r\n    this.maxCanvasPixels = options.maxCanvasPixels;\r\n    this.l10n = options.l10n || NullL10n;\r\n    this.enableScripting = options.enableScripting === true && !!this._scriptingManager;\r\n    this.defaultRenderingQueue = !options.renderingQueue;\r\n\r\n    if (this.defaultRenderingQueue) {\r\n      // Custom rendering queue is not specified, using default one\r\n      this.renderingQueue = new PDFRenderingQueue();\r\n      this.renderingQueue.setViewer(this);\r\n    } else {\r\n      this.renderingQueue = options.renderingQueue;\r\n    }\r\n\r\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\r\n    this.presentationModeState = PresentationModeState.UNKNOWN;\r\n    this._onBeforeDraw = this._onAfterDraw = null;\r\n\r\n    this._resetView();\r\n\r\n    if (this.removePageBorders) {\r\n      this.viewer.classList.add(\"removePageBorders\");\r\n    } // Defer the dispatching of this event, to give other viewer components\r\n    // time to initialize *and* register 'baseviewerinit' event listeners.\r\n\r\n\r\n    Promise.resolve().then(() => {\r\n      this.eventBus.dispatch(\"baseviewerinit\", {\r\n        source: this\r\n      });\r\n    });\r\n  }\r\n\r\n  get pagesCount() {\r\n    return this._pages.length;\r\n  }\r\n\r\n  getPageView(index) {\r\n    return this._pages[index];\r\n  }\r\n  /**\r\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\r\n   */\r\n\r\n\r\n  get pageViewsReady() {\r\n    if (!this._pagesCapability.settled) {\r\n      return false;\r\n    } // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\r\n    // that *all* pages have in fact been completely loaded.\r\n\r\n\r\n    return this._pages.every(function (pageView) {\r\n      return pageView === null || pageView === void 0 ? void 0 : pageView.pdfPage;\r\n    });\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get currentPageNumber() {\r\n    return this._currentPageNumber;\r\n  }\r\n  /**\r\n   * @param {number} val - The page number.\r\n   */\r\n\r\n\r\n  set currentPageNumber(val) {\r\n    if (!Number.isInteger(val)) {\r\n      throw new Error(\"Invalid page number.\");\r\n    }\r\n\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    } // The intent can be to just reset a scroll position and/or scale.\r\n\r\n\r\n    if (!this._setCurrentPageNumber(val,\r\n    /* resetCurrentPageView = */\r\n    true)) {\r\n      console.error(`${this._name}.currentPageNumber: \"${val}\" is not a valid page.`);\r\n    }\r\n  }\r\n  /**\r\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\r\n   * @private\r\n   */\r\n\r\n\r\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\r\n    var _this$_pageLabels, _this$_pageLabels2;\r\n\r\n    if (this._currentPageNumber === val) {\r\n      if (resetCurrentPageView) {\r\n        this._resetCurrentPageView();\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (!(0 < val && val <= this.pagesCount)) {\r\n      return false;\r\n    }\r\n\r\n    const previous = this._currentPageNumber;\r\n    this._currentPageNumber = val;\r\n    this.eventBus.dispatch(\"pagechanging\", {\r\n      source: this,\r\n      pageNumber: val,\r\n      pageLabel: (_this$_pageLabels = (_this$_pageLabels2 = this._pageLabels) === null || _this$_pageLabels2 === void 0 ? void 0 : _this$_pageLabels2[val - 1]) !== null && _this$_pageLabels !== void 0 ? _this$_pageLabels : null,\r\n      previous\r\n    });\r\n\r\n    if (resetCurrentPageView) {\r\n      this._resetCurrentPageView();\r\n    }\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * @type {string|null} Returns the current page label, or `null` if no page\r\n   *   labels exist.\r\n   */\r\n\r\n\r\n  get currentPageLabel() {\r\n    var _this$_pageLabels3, _this$_pageLabels4;\r\n\r\n    return (_this$_pageLabels3 = (_this$_pageLabels4 = this._pageLabels) === null || _this$_pageLabels4 === void 0 ? void 0 : _this$_pageLabels4[this._currentPageNumber - 1]) !== null && _this$_pageLabels3 !== void 0 ? _this$_pageLabels3 : null;\r\n  }\r\n  /**\r\n   * @param {string} val - The page label.\r\n   */\r\n\r\n\r\n  set currentPageLabel(val) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    let page = val | 0; // Fallback page number.\r\n\r\n    if (this._pageLabels) {\r\n      const i = this._pageLabels.indexOf(val);\r\n\r\n      if (i >= 0) {\r\n        page = i + 1;\r\n      }\r\n    } // The intent can be to just reset a scroll position and/or scale.\r\n\r\n\r\n    if (!this._setCurrentPageNumber(page,\r\n    /* resetCurrentPageView = */\r\n    true)) {\r\n      console.error(`${this._name}.currentPageLabel: \"${val}\" is not a valid page.`);\r\n    }\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get currentScale() {\r\n    return this._currentScale !== UNKNOWN_SCALE ? this._currentScale : DEFAULT_SCALE;\r\n  }\r\n  /**\r\n   * @param {number} val - Scale of the pages in percents.\r\n   */\r\n\r\n\r\n  set currentScale(val) {\r\n    if (isNaN(val)) {\r\n      throw new Error(\"Invalid numeric scale.\");\r\n    }\r\n\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    this._setScale(val, false);\r\n  }\r\n  /**\r\n   * @type {string}\r\n   */\r\n\r\n\r\n  get currentScaleValue() {\r\n    return this._currentScaleValue;\r\n  }\r\n  /**\r\n   * @param val - The scale of the pages (in percent or predefined value).\r\n   */\r\n\r\n\r\n  set currentScaleValue(val) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    this._setScale(val, false);\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get pagesRotation() {\r\n    return this._pagesRotation;\r\n  }\r\n  /**\r\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\r\n   */\r\n\r\n\r\n  set pagesRotation(rotation) {\r\n    if (!isValidRotation(rotation)) {\r\n      throw new Error(\"Invalid pages rotation angle.\");\r\n    }\r\n\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    } // Normalize the rotation, by clamping it to the [0, 360) range.\r\n\r\n\r\n    rotation %= 360;\r\n\r\n    if (rotation < 0) {\r\n      rotation += 360;\r\n    }\r\n\r\n    if (this._pagesRotation === rotation) {\r\n      return; // The rotation didn't change.\r\n    }\r\n\r\n    this._pagesRotation = rotation;\r\n    const pageNumber = this._currentPageNumber;\r\n\r\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\r\n      const pageView = this._pages[i];\r\n      pageView.update(pageView.scale, rotation);\r\n    } // Prevent errors in case the rotation changes *before* the scale has been\r\n    // set to a non-default value.\r\n\r\n\r\n    if (this._currentScaleValue) {\r\n      this._setScale(this._currentScaleValue, true);\r\n    }\r\n\r\n    this.eventBus.dispatch(\"rotationchanging\", {\r\n      source: this,\r\n      pagesRotation: rotation,\r\n      pageNumber\r\n    });\r\n\r\n    if (this.defaultRenderingQueue) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  get firstPagePromise() {\r\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\r\n  }\r\n\r\n  get onePageRendered() {\r\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\r\n  }\r\n\r\n  get pagesPromise() {\r\n    return this.pdfDocument ? this._pagesCapability.promise : null;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  get _viewerElement() {\r\n    // In most viewers, e.g. `PDFViewer`, this should return `this.viewer`.\r\n    throw new Error(\"Not implemented: _viewerElement\");\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _onePageRenderedOrForceFetch() {\r\n    // Unless the viewer *and* its pages are visible, rendering won't start and\r\n    // `this._onePageRenderedCapability` thus won't be resolved.\r\n    // To ensure that automatic printing, on document load, still works even in\r\n    // those cases we force-allow fetching of all pages when:\r\n    //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\r\n    //    element; fixes bug 1618621.\r\n    //  - The viewer is visible, but none of the pages are (e.g. if the\r\n    //    viewer is very small); fixes bug 1618955.\r\n    if (!this.container.offsetParent || this._getVisiblePages().views.length === 0) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this._onePageRenderedCapability.promise;\r\n  }\r\n  /**\r\n   * @param pdfDocument {PDFDocument}\r\n   */\r\n\r\n\r\n  setDocument(pdfDocument) {\r\n    if (this.pdfDocument) {\r\n      this.eventBus.dispatch(\"pagesdestroy\", {\r\n        source: this\r\n      });\r\n\r\n      this._cancelRendering();\r\n\r\n      this._resetView();\r\n\r\n      if (this.findController) {\r\n        this.findController.setDocument(null);\r\n      }\r\n\r\n      if (this._scriptingManager) {\r\n        this._scriptingManager.setDocument(null);\r\n      }\r\n    }\r\n\r\n    this.pdfDocument = pdfDocument;\r\n\r\n    if (!pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    const isPureXfa = pdfDocument.isPureXfa;\r\n    const pagesCount = pdfDocument.numPages;\r\n    const firstPagePromise = pdfDocument.getPage(1); // Rendering (potentially) depends on this, hence fetching it immediately.\r\n\r\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\r\n\r\n    this._pagesCapability.promise.then(() => {\r\n      this.eventBus.dispatch(\"pagesloaded\", {\r\n        source: this,\r\n        pagesCount\r\n      });\r\n    });\r\n\r\n    this._onBeforeDraw = evt => {\r\n      const pageView = this._pages[evt.pageNumber - 1];\r\n\r\n      if (!pageView) {\r\n        return;\r\n      } // Add the page to the buffer at the start of drawing. That way it can be\r\n      // evicted from the buffer and destroyed even if we pause its rendering.\r\n\r\n\r\n      this._buffer.push(pageView);\r\n    };\r\n\r\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\r\n\r\n    this._onAfterDraw = evt => {\r\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\r\n        return;\r\n      }\r\n\r\n      this._onePageRenderedCapability.resolve();\r\n\r\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\r\n\r\n      this._onAfterDraw = null;\r\n    };\r\n\r\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw); // Fetch a single page so we can get a viewport that will be the default\r\n    // viewport for all pages\r\n\r\n\r\n    firstPagePromise.then(firstPdfPage => {\r\n      this._firstPageCapability.resolve(firstPdfPage);\r\n\r\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\r\n      const scale = this.currentScale;\r\n      const viewport = firstPdfPage.getViewport({\r\n        scale: scale * CSS_UNITS\r\n      });\r\n      const textLayerFactory = this.textLayerMode !== TextLayerMode.DISABLE ? this : null;\r\n      const xfaLayerFactory = isPureXfa ? this : null;\r\n\r\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\r\n        const pageView = new PDFPageView({\r\n          container: this._viewerElement,\r\n          eventBus: this.eventBus,\r\n          id: pageNum,\r\n          scale,\r\n          defaultViewport: viewport.clone(),\r\n          optionalContentConfigPromise,\r\n          renderingQueue: this.renderingQueue,\r\n          textLayerFactory,\r\n          textLayerMode: this.textLayerMode,\r\n          annotationLayerFactory: this,\r\n          xfaLayerFactory,\r\n          structTreeLayerFactory: this,\r\n          imageResourcesPath: this.imageResourcesPath,\r\n          renderInteractiveForms: this.renderInteractiveForms,\r\n          renderer: this.renderer,\r\n          useOnlyCssZoom: this.useOnlyCssZoom,\r\n          maxCanvasPixels: this.maxCanvasPixels,\r\n          l10n: this.l10n\r\n        });\r\n\r\n        this._pages.push(pageView);\r\n      } // Set the first `pdfPage` immediately, since it's already loaded,\r\n      // rather than having to repeat the `PDFDocumentProxy.getPage` call in\r\n      // the `this._ensurePdfPageLoaded` method before rendering can start.\r\n\r\n\r\n      const firstPageView = this._pages[0];\r\n\r\n      if (firstPageView) {\r\n        firstPageView.setPdfPage(firstPdfPage);\r\n        this.linkService.cachePageRef(1, firstPdfPage.ref);\r\n      }\r\n\r\n      if (this._spreadMode !== SpreadMode.NONE) {\r\n        this._updateSpreadMode();\r\n      } // Fetch all the pages since the viewport is needed before printing\r\n      // starts to create the correct size canvas. Wait until one page is\r\n      // rendered so we don't tie up too many resources early on.\r\n\r\n\r\n      this._onePageRenderedOrForceFetch().then(() => {\r\n        if (this.findController) {\r\n          this.findController.setDocument(pdfDocument); // Enable searching.\r\n        }\r\n\r\n        if (this.enableScripting) {\r\n          this._scriptingManager.setDocument(pdfDocument);\r\n        } // In addition to 'disableAutoFetch' being set, also attempt to reduce\r\n        // resource usage when loading *very* long/large documents.\r\n\r\n\r\n        if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\r\n          // XXX: Printing is semi-broken with auto fetch disabled.\r\n          this._pagesCapability.resolve();\r\n\r\n          return;\r\n        }\r\n\r\n        let getPagesLeft = pagesCount - 1; // The first page was already loaded.\r\n\r\n        if (getPagesLeft <= 0) {\r\n          this._pagesCapability.resolve();\r\n\r\n          return;\r\n        }\r\n\r\n        for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\r\n          pdfDocument.getPage(pageNum).then(pdfPage => {\r\n            const pageView = this._pages[pageNum - 1];\r\n\r\n            if (!pageView.pdfPage) {\r\n              pageView.setPdfPage(pdfPage);\r\n            }\r\n\r\n            this.linkService.cachePageRef(pageNum, pdfPage.ref);\r\n\r\n            if (--getPagesLeft === 0) {\r\n              this._pagesCapability.resolve();\r\n            }\r\n          }, reason => {\r\n            console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\r\n\r\n            if (--getPagesLeft === 0) {\r\n              this._pagesCapability.resolve();\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      this.eventBus.dispatch(\"pagesinit\", {\r\n        source: this\r\n      });\r\n\r\n      if (this.defaultRenderingQueue) {\r\n        this.update();\r\n      }\r\n    }).catch(reason => {\r\n      console.error(\"Unable to initialize viewer\", reason);\r\n    });\r\n  }\r\n  /**\r\n   * @param {Array|null} labels\r\n   */\r\n\r\n\r\n  setPageLabels(labels) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    if (!labels) {\r\n      this._pageLabels = null;\r\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\r\n      this._pageLabels = null;\r\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\r\n    } else {\r\n      this._pageLabels = labels;\r\n    } // Update all the `PDFPageView` instances.\r\n\r\n\r\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\r\n      var _this$_pageLabels$i, _this$_pageLabels5;\r\n\r\n      this._pages[i].setPageLabel((_this$_pageLabels$i = (_this$_pageLabels5 = this._pageLabels) === null || _this$_pageLabels5 === void 0 ? void 0 : _this$_pageLabels5[i]) !== null && _this$_pageLabels$i !== void 0 ? _this$_pageLabels$i : null);\r\n    }\r\n  }\r\n\r\n  _resetView() {\r\n    this._pages = [];\r\n    this._currentPageNumber = 1;\r\n    this._currentScale = UNKNOWN_SCALE;\r\n    this._currentScaleValue = null;\r\n    this._pageLabels = null;\r\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\r\n    this._location = null;\r\n    this._pagesRotation = 0;\r\n    this._optionalContentConfigPromise = null;\r\n    this._pagesRequests = new WeakMap();\r\n    this._firstPageCapability = createPromiseCapability();\r\n    this._onePageRenderedCapability = createPromiseCapability();\r\n    this._pagesCapability = createPromiseCapability();\r\n    this._scrollMode = ScrollMode.VERTICAL;\r\n    this._spreadMode = SpreadMode.NONE;\r\n\r\n    if (this._onBeforeDraw) {\r\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\r\n\r\n      this._onBeforeDraw = null;\r\n    }\r\n\r\n    if (this._onAfterDraw) {\r\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\r\n\r\n      this._onAfterDraw = null;\r\n    } // Remove the pages from the DOM...\r\n\r\n\r\n    this.viewer.textContent = \"\"; // ... and reset the Scroll mode CSS class(es) afterwards.\r\n\r\n    this._updateScrollMode();\r\n  }\r\n\r\n  _scrollUpdate() {\r\n    if (this.pagesCount === 0) {\r\n      return;\r\n    }\r\n\r\n    this.update();\r\n  }\r\n\r\n  _scrollIntoView({\r\n    pageDiv,\r\n    pageSpot = null,\r\n    pageNumber = null\r\n  }) {\r\n    scrollIntoView(pageDiv, pageSpot);\r\n  }\r\n\r\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\r\n    this._currentScaleValue = newValue.toString();\r\n\r\n    if (isSameScale(this._currentScale, newScale)) {\r\n      if (preset) {\r\n        this.eventBus.dispatch(\"scalechanging\", {\r\n          source: this,\r\n          scale: newScale,\r\n          presetValue: newValue\r\n        });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\r\n      this._pages[i].update(newScale);\r\n    }\r\n\r\n    this._currentScale = newScale;\r\n\r\n    if (!noScroll) {\r\n      let page = this._currentPageNumber,\r\n          dest;\r\n\r\n      if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\r\n        page = this._location.pageNumber;\r\n        dest = [null, {\r\n          name: \"XYZ\"\r\n        }, this._location.left, this._location.top, null];\r\n      }\r\n\r\n      this.scrollPageIntoView({\r\n        pageNumber: page,\r\n        destArray: dest,\r\n        allowNegativeOffset: true\r\n      });\r\n    }\r\n\r\n    this.eventBus.dispatch(\"scalechanging\", {\r\n      source: this,\r\n      scale: newScale,\r\n      presetValue: preset ? newValue : undefined\r\n    });\r\n\r\n    if (this.defaultRenderingQueue) {\r\n      this.update();\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  get _pageWidthScaleFactor() {\r\n    if (this._spreadMode !== SpreadMode.NONE && this._scrollMode !== ScrollMode.HORIZONTAL && !this.isInPresentationMode) {\r\n      return 2;\r\n    }\r\n\r\n    return 1;\r\n  }\r\n\r\n  _setScale(value, noScroll = false) {\r\n    let scale = parseFloat(value);\r\n\r\n    if (scale > 0) {\r\n      this._setScaleUpdatePages(scale, value, noScroll,\r\n      /* preset = */\r\n      false);\r\n    } else {\r\n      const currentPage = this._pages[this._currentPageNumber - 1];\r\n\r\n      if (!currentPage) {\r\n        return;\r\n      }\r\n\r\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\r\n      let hPadding = noPadding ? 0 : SCROLLBAR_PADDING;\r\n      let vPadding = noPadding ? 0 : VERTICAL_PADDING;\r\n\r\n      if (!noPadding && this._isScrollModeHorizontal) {\r\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\r\n      }\r\n\r\n      const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale / this._pageWidthScaleFactor;\r\n      const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\r\n\r\n      switch (value) {\r\n        case \"page-actual\":\r\n          scale = 1;\r\n          break;\r\n\r\n        case \"page-width\":\r\n          scale = pageWidthScale;\r\n          break;\r\n\r\n        case \"page-height\":\r\n          scale = pageHeightScale;\r\n          break;\r\n\r\n        case \"page-fit\":\r\n          scale = Math.min(pageWidthScale, pageHeightScale);\r\n          break;\r\n\r\n        case \"auto\":\r\n          // For pages in landscape mode, fit the page height to the viewer\r\n          // *unless* the page would thus become too wide to fit horizontally.\r\n          const horizontalScale = isPortraitOrientation(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale);\r\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\r\n          break;\r\n\r\n        default:\r\n          console.error(`${this._name}._setScale: \"${value}\" is an unknown zoom value.`);\r\n          return;\r\n      }\r\n\r\n      this._setScaleUpdatePages(scale, value, noScroll,\r\n      /* preset = */\r\n      true);\r\n    }\r\n  }\r\n  /**\r\n   * Refreshes page view: scrolls to the current page and updates the scale.\r\n   * @private\r\n   */\r\n\r\n\r\n  _resetCurrentPageView() {\r\n    if (this.isInPresentationMode) {\r\n      // Fixes the case when PDF has different page sizes.\r\n      this._setScale(this._currentScaleValue, true);\r\n    }\r\n\r\n    const pageView = this._pages[this._currentPageNumber - 1];\r\n\r\n    this._scrollIntoView({\r\n      pageDiv: pageView.div\r\n    });\r\n  }\r\n  /**\r\n   * @param {string} label - The page label.\r\n   * @returns {number|null} The page number corresponding to the page label,\r\n   *   or `null` when no page labels exist and/or the input is invalid.\r\n   */\r\n\r\n\r\n  pageLabelToPageNumber(label) {\r\n    if (!this._pageLabels) {\r\n      return null;\r\n    }\r\n\r\n    const i = this._pageLabels.indexOf(label);\r\n\r\n    if (i < 0) {\r\n      return null;\r\n    }\r\n\r\n    return i + 1;\r\n  }\r\n  /**\r\n   * @typedef ScrollPageIntoViewParameters\r\n   * @property {number} pageNumber - The page number.\r\n   * @property {Array} [destArray] - The original PDF destination array, in the\r\n   *   format: <page-ref> </XYZ|/FitXXX> <args..>\r\n   * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\r\n   *   The default value is `false`.\r\n   * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\r\n   *   the destination array. The default value is `false`.\r\n   */\r\n\r\n  /**\r\n   * Scrolls page into view.\r\n   * @param {ScrollPageIntoViewParameters} params\r\n   */\r\n\r\n\r\n  scrollPageIntoView({\r\n    pageNumber,\r\n    destArray = null,\r\n    allowNegativeOffset = false,\r\n    ignoreDestinationZoom = false\r\n  }) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\r\n\r\n    if (!pageView) {\r\n      console.error(`${this._name}.scrollPageIntoView: ` + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\r\n      return;\r\n    }\r\n\r\n    if (this.isInPresentationMode || !destArray) {\r\n      this._setCurrentPageNumber(pageNumber,\r\n      /* resetCurrentPageView = */\r\n      true);\r\n\r\n      return;\r\n    }\r\n\r\n    let x = 0,\r\n        y = 0;\r\n    let width = 0,\r\n        height = 0,\r\n        widthScale,\r\n        heightScale;\r\n    const changeOrientation = pageView.rotation % 180 !== 0;\r\n    const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / CSS_UNITS;\r\n    const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / CSS_UNITS;\r\n    let scale = 0;\r\n\r\n    switch (destArray[1].name) {\r\n      case \"XYZ\":\r\n        x = destArray[2];\r\n        y = destArray[3];\r\n        scale = destArray[4]; // If x and/or y coordinates are not supplied, default to\r\n        // _top_ left of the page (not the obvious bottom left,\r\n        // since aligning the bottom of the intended page with the\r\n        // top of the window is rarely helpful).\r\n\r\n        x = x !== null ? x : 0;\r\n        y = y !== null ? y : pageHeight;\r\n        break;\r\n\r\n      case \"Fit\":\r\n      case \"FitB\":\r\n        scale = \"page-fit\";\r\n        break;\r\n\r\n      case \"FitH\":\r\n      case \"FitBH\":\r\n        y = destArray[2];\r\n        scale = \"page-width\"; // According to the PDF spec, section 12.3.2.2, a `null` value in the\r\n        // parameter should maintain the position relative to the new page.\r\n\r\n        if (y === null && this._location) {\r\n          x = this._location.left;\r\n          y = this._location.top;\r\n        } else if (typeof y !== \"number\") {\r\n          // The \"top\" value isn't optional, according to the spec, however some\r\n          // bad PDF generators will pretend that it is (fixes bug 1663390).\r\n          y = pageHeight;\r\n        }\r\n\r\n        break;\r\n\r\n      case \"FitV\":\r\n      case \"FitBV\":\r\n        x = destArray[2];\r\n        width = pageWidth;\r\n        height = pageHeight;\r\n        scale = \"page-height\";\r\n        break;\r\n\r\n      case \"FitR\":\r\n        x = destArray[2];\r\n        y = destArray[3];\r\n        width = destArray[4] - x;\r\n        height = destArray[5] - y;\r\n        const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\r\n        const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\r\n        widthScale = (this.container.clientWidth - hPadding) / width / CSS_UNITS;\r\n        heightScale = (this.container.clientHeight - vPadding) / height / CSS_UNITS;\r\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\r\n        break;\r\n\r\n      default:\r\n        console.error(`${this._name}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\r\n        return;\r\n    }\r\n\r\n    if (!ignoreDestinationZoom) {\r\n      if (scale && scale !== this._currentScale) {\r\n        this.currentScaleValue = scale;\r\n      } else if (this._currentScale === UNKNOWN_SCALE) {\r\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\r\n      }\r\n    }\r\n\r\n    if (scale === \"page-fit\" && !destArray[4]) {\r\n      this._scrollIntoView({\r\n        pageDiv: pageView.div,\r\n        pageNumber\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\r\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\r\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\r\n\r\n    if (!allowNegativeOffset) {\r\n      // Some bad PDF generators will create destinations with e.g. top values\r\n      // that exceeds the page height. Ensure that offsets are not negative,\r\n      // to prevent a previous page from becoming visible (fixes bug 874482).\r\n      left = Math.max(left, 0);\r\n      top = Math.max(top, 0);\r\n    }\r\n\r\n    this._scrollIntoView({\r\n      pageDiv: pageView.div,\r\n      pageSpot: {\r\n        left,\r\n        top\r\n      },\r\n      pageNumber\r\n    });\r\n  }\r\n\r\n  _updateLocation(firstPage) {\r\n    const currentScale = this._currentScale;\r\n    const currentScaleValue = this._currentScaleValue;\r\n    const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\r\n    const pageNumber = firstPage.id;\r\n    let pdfOpenParams = \"#page=\" + pageNumber;\r\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\r\n    const currentPageView = this._pages[pageNumber - 1];\r\n    const container = this.container;\r\n    const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\r\n    const intLeft = Math.round(topLeft[0]);\r\n    const intTop = Math.round(topLeft[1]);\r\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\r\n    this._location = {\r\n      pageNumber,\r\n      scale: normalizedScaleValue,\r\n      top: intTop,\r\n      left: intLeft,\r\n      rotation: this._pagesRotation,\r\n      pdfOpenParams\r\n    };\r\n  }\r\n\r\n  _updateHelper(visiblePages) {\r\n    throw new Error(\"Not implemented: _updateHelper\");\r\n  }\r\n\r\n  update() {\r\n    const visible = this._getVisiblePages();\r\n\r\n    const visiblePages = visible.views,\r\n          numVisiblePages = visiblePages.length;\r\n\r\n    if (numVisiblePages === 0) {\r\n      return;\r\n    }\r\n\r\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\r\n\r\n    this._buffer.resize(newCacheSize, visiblePages);\r\n\r\n    this.renderingQueue.renderHighestPriority(visible);\r\n\r\n    this._updateHelper(visiblePages); // Run any class-specific update code.\r\n\r\n\r\n    this._updateLocation(visible.first);\r\n\r\n    this.eventBus.dispatch(\"updateviewarea\", {\r\n      source: this,\r\n      location: this._location\r\n    });\r\n  }\r\n\r\n  containsElement(element) {\r\n    return this.container.contains(element);\r\n  }\r\n\r\n  focus() {\r\n    this.container.focus();\r\n  }\r\n\r\n  get _isScrollModeHorizontal() {\r\n    // Used to ensure that pre-rendering of the next/previous page works\r\n    // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\r\n    return this.isInPresentationMode ? false : this._scrollMode === ScrollMode.HORIZONTAL;\r\n  }\r\n\r\n  get _isContainerRtl() {\r\n    return getComputedStyle(this.container).direction === \"rtl\";\r\n  }\r\n\r\n  get isInPresentationMode() {\r\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\r\n  }\r\n\r\n  get isChangingPresentationMode() {\r\n    return this.presentationModeState === PresentationModeState.CHANGING;\r\n  }\r\n\r\n  get isHorizontalScrollbarEnabled() {\r\n    return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\r\n  }\r\n\r\n  get isVerticalScrollbarEnabled() {\r\n    return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight;\r\n  }\r\n  /**\r\n   * Helper method for `this._getVisiblePages`. Should only ever be used when\r\n   * the viewer can only display a single page at a time, for example in:\r\n   *  - `PDFSinglePageViewer`.\r\n   *  - `PDFViewer` with Presentation Mode active.\r\n   */\r\n\r\n\r\n  _getCurrentVisiblePage() {\r\n    if (!this.pagesCount) {\r\n      return {\r\n        views: []\r\n      };\r\n    }\r\n\r\n    const pageView = this._pages[this._currentPageNumber - 1]; // NOTE: Compute the `x` and `y` properties of the current view,\r\n    // since `this._updateLocation` depends of them being available.\r\n\r\n    const element = pageView.div;\r\n    const view = {\r\n      id: pageView.id,\r\n      x: element.offsetLeft + element.clientLeft,\r\n      y: element.offsetTop + element.clientTop,\r\n      view: pageView\r\n    };\r\n    return {\r\n      first: view,\r\n      last: view,\r\n      views: [view]\r\n    };\r\n  }\r\n\r\n  _getVisiblePages() {\r\n    return getVisibleElements({\r\n      scrollEl: this.container,\r\n      views: this._pages,\r\n      sortByVisibility: true,\r\n      horizontal: this._isScrollModeHorizontal,\r\n      rtl: this._isScrollModeHorizontal && this._isContainerRtl\r\n    });\r\n  }\r\n  /**\r\n   * @param {number} pageNumber\r\n   */\r\n\r\n\r\n  isPageVisible(pageNumber) {\r\n    if (!this.pdfDocument) {\r\n      return false;\r\n    }\r\n\r\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\r\n      console.error(`${this._name}.isPageVisible: \"${pageNumber}\" is not a valid page.`);\r\n      return false;\r\n    }\r\n\r\n    return this._getVisiblePages().views.some(function (view) {\r\n      return view.id === pageNumber;\r\n    });\r\n  }\r\n  /**\r\n   * @param {number} pageNumber\r\n   */\r\n\r\n\r\n  isPageCached(pageNumber) {\r\n    if (!this.pdfDocument || !this._buffer) {\r\n      return false;\r\n    }\r\n\r\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\r\n      console.error(`${this._name}.isPageCached: \"${pageNumber}\" is not a valid page.`);\r\n      return false;\r\n    }\r\n\r\n    const pageView = this._pages[pageNumber - 1];\r\n\r\n    if (!pageView) {\r\n      return false;\r\n    }\r\n\r\n    return this._buffer.has(pageView);\r\n  }\r\n\r\n  cleanup() {\r\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\r\n      if (this._pages[i] && this._pages[i].renderingState !== RenderingStates.FINISHED) {\r\n        this._pages[i].reset();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _cancelRendering() {\r\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\r\n      if (this._pages[i]) {\r\n        this._pages[i].cancelRendering();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @param {PDFPageView} pageView\r\n   * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\r\n   * @private\r\n   */\r\n\r\n\r\n  _ensurePdfPageLoaded(pageView) {\r\n    if (pageView.pdfPage) {\r\n      return Promise.resolve(pageView.pdfPage);\r\n    }\r\n\r\n    if (this._pagesRequests.has(pageView)) {\r\n      return this._pagesRequests.get(pageView);\r\n    }\r\n\r\n    const promise = this.pdfDocument.getPage(pageView.id).then(pdfPage => {\r\n      if (!pageView.pdfPage) {\r\n        pageView.setPdfPage(pdfPage);\r\n      }\r\n\r\n      this._pagesRequests.delete(pageView);\r\n\r\n      return pdfPage;\r\n    }).catch(reason => {\r\n      console.error(\"Unable to get page for page view\", reason); // Page error -- there is nothing that can be done.\r\n\r\n      this._pagesRequests.delete(pageView);\r\n    });\r\n\r\n    this._pagesRequests.set(pageView, promise);\r\n\r\n    return promise;\r\n  }\r\n\r\n  forceRendering(currentlyVisiblePages) {\r\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\r\n\r\n    const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\r\n    const pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, scrollAhead);\r\n\r\n    if (pageView) {\r\n      this._ensurePdfPageLoaded(pageView).then(() => {\r\n        this.renderingQueue.renderView(pageView);\r\n      });\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * @param {HTMLDivElement} textLayerDiv\r\n   * @param {number} pageIndex\r\n   * @param {PageViewport} viewport\r\n   * @param {boolean} enhanceTextSelection\r\n   * @param {EventBus} eventBus\r\n   * @returns {TextLayerBuilder}\r\n   */\r\n\r\n\r\n  createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\r\n    return new TextLayerBuilder({\r\n      textLayerDiv,\r\n      eventBus,\r\n      pageIndex,\r\n      viewport,\r\n      findController: this.isInPresentationMode ? null : this.findController,\r\n      enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\r\n    });\r\n  }\r\n  /**\r\n   * @param {HTMLDivElement} pageDiv\r\n   * @param {PDFPage} pdfPage\r\n   * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\r\n   *   data in forms.\r\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\r\n   *   for annotation icons. Include trailing slash.\r\n   * @param {boolean} renderInteractiveForms\r\n   * @param {IL10n} l10n\r\n   * @param {boolean} [enableScripting]\r\n   * @param {Promise<boolean>} [hasJSActionsPromise]\r\n   * @param {Object} [mouseState]\r\n   * @returns {AnnotationLayerBuilder}\r\n   */\r\n\r\n\r\n  createAnnotationLayerBuilder(pageDiv, pdfPage, annotationStorage = null, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = NullL10n, enableScripting = null, hasJSActionsPromise = null, mouseState = null) {\r\n    var _this$pdfDocument, _this$pdfDocument2, _this$_scriptingManag;\r\n\r\n    return new AnnotationLayerBuilder({\r\n      pageDiv,\r\n      pdfPage,\r\n      annotationStorage: annotationStorage || ((_this$pdfDocument = this.pdfDocument) === null || _this$pdfDocument === void 0 ? void 0 : _this$pdfDocument.annotationStorage),\r\n      imageResourcesPath,\r\n      renderInteractiveForms,\r\n      linkService: this.linkService,\r\n      downloadManager: this.downloadManager,\r\n      l10n,\r\n      enableScripting: enableScripting !== null && enableScripting !== void 0 ? enableScripting : this.enableScripting,\r\n      hasJSActionsPromise: hasJSActionsPromise || ((_this$pdfDocument2 = this.pdfDocument) === null || _this$pdfDocument2 === void 0 ? void 0 : _this$pdfDocument2.hasJSActions()),\r\n      mouseState: mouseState || ((_this$_scriptingManag = this._scriptingManager) === null || _this$_scriptingManag === void 0 ? void 0 : _this$_scriptingManag.mouseState)\r\n    });\r\n  }\r\n  /**\r\n   * @param {HTMLDivElement} pageDiv\r\n   * @param {PDFPage} pdfPage\r\n   * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\r\n   *   data in forms.\r\n   * @returns {XfaLayerBuilder}\r\n   */\r\n\r\n\r\n  createXfaLayerBuilder(pageDiv, pdfPage, annotationStorage = null) {\r\n    var _this$pdfDocument3;\r\n\r\n    return new XfaLayerBuilder({\r\n      pageDiv,\r\n      pdfPage,\r\n      annotationStorage: annotationStorage || ((_this$pdfDocument3 = this.pdfDocument) === null || _this$pdfDocument3 === void 0 ? void 0 : _this$pdfDocument3.annotationStorage)\r\n    });\r\n  }\r\n  /**\r\n   * @param {PDFPage} pdfPage\r\n   * @returns {StructTreeLayerBuilder}\r\n   */\r\n\r\n\r\n  createStructTreeLayerBuilder(pdfPage) {\r\n    return new StructTreeLayerBuilder({\r\n      pdfPage\r\n    });\r\n  }\r\n  /**\r\n   * @type {boolean} Whether all pages of the PDF document have identical\r\n   *   widths and heights.\r\n   */\r\n\r\n\r\n  get hasEqualPageSizes() {\r\n    const firstPageView = this._pages[0];\r\n\r\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\r\n      const pageView = this._pages[i];\r\n\r\n      if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * Returns sizes of the pages.\r\n   * @returns {Array} Array of objects with width/height/rotation fields.\r\n   */\r\n\r\n\r\n  getPagesOverview() {\r\n    return this._pages.map(pageView => {\r\n      const viewport = pageView.pdfPage.getViewport({\r\n        scale: 1\r\n      });\r\n\r\n      if (!this.enablePrintAutoRotate || isPortraitOrientation(viewport)) {\r\n        return {\r\n          width: viewport.width,\r\n          height: viewport.height,\r\n          rotation: viewport.rotation\r\n        };\r\n      } // Landscape orientation.\r\n\r\n\r\n      return {\r\n        width: viewport.height,\r\n        height: viewport.width,\r\n        rotation: (viewport.rotation - 90) % 360\r\n      };\r\n    });\r\n  }\r\n  /**\r\n   * @type {Promise<OptionalContentConfig | null>}\r\n   */\r\n\r\n\r\n  get optionalContentConfigPromise() {\r\n    if (!this.pdfDocument) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    if (!this._optionalContentConfigPromise) {\r\n      // Prevent issues if the getter is accessed *before* the `onePageRendered`\r\n      // promise has resolved; won't (normally) happen in the default viewer.\r\n      return this.pdfDocument.getOptionalContentConfig();\r\n    }\r\n\r\n    return this._optionalContentConfigPromise;\r\n  }\r\n  /**\r\n   * @param {Promise<OptionalContentConfig>} promise - A promise that is\r\n   *   resolved with an {@link OptionalContentConfig} instance.\r\n   */\r\n\r\n\r\n  set optionalContentConfigPromise(promise) {\r\n    if (!(promise instanceof Promise)) {\r\n      throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\r\n    }\r\n\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    if (!this._optionalContentConfigPromise) {\r\n      // Ignore the setter *before* the `onePageRendered` promise has resolved,\r\n      // since it'll be overwritten anyway; won't happen in the default viewer.\r\n      return;\r\n    }\r\n\r\n    this._optionalContentConfigPromise = promise;\r\n\r\n    for (const pageView of this._pages) {\r\n      pageView.update(pageView.scale, pageView.rotation, promise);\r\n    }\r\n\r\n    this.update();\r\n    this.eventBus.dispatch(\"optionalcontentconfigchanged\", {\r\n      source: this,\r\n      promise\r\n    });\r\n  }\r\n  /**\r\n   * @type {number} One of the values in {ScrollMode}.\r\n   */\r\n\r\n\r\n  get scrollMode() {\r\n    return this._scrollMode;\r\n  }\r\n  /**\r\n   * @param {number} mode - The direction in which the document pages should be\r\n   *   laid out within the scrolling container.\r\n   *   The constants from {ScrollMode} should be used.\r\n   */\r\n\r\n\r\n  set scrollMode(mode) {\r\n    if (this._scrollMode === mode) {\r\n      return; // The Scroll mode didn't change.\r\n    }\r\n\r\n    if (!isValidScrollMode(mode)) {\r\n      throw new Error(`Invalid scroll mode: ${mode}`);\r\n    }\r\n\r\n    this._scrollMode = mode;\r\n    this.eventBus.dispatch(\"scrollmodechanged\", {\r\n      source: this,\r\n      mode\r\n    });\r\n\r\n    this._updateScrollMode(\r\n    /* pageNumber = */\r\n    this._currentPageNumber);\r\n  }\r\n\r\n  _updateScrollMode(pageNumber = null) {\r\n    const scrollMode = this._scrollMode,\r\n          viewer = this.viewer;\r\n    viewer.classList.toggle(\"scrollHorizontal\", scrollMode === ScrollMode.HORIZONTAL);\r\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\r\n\r\n    if (!this.pdfDocument || !pageNumber) {\r\n      return;\r\n    } // Non-numeric scale values can be sensitive to the scroll orientation.\r\n    // Call this before re-scrolling to the current page, to ensure that any\r\n    // changes in scale don't move the current page.\r\n\r\n\r\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\r\n      this._setScale(this._currentScaleValue, true);\r\n    }\r\n\r\n    this._setCurrentPageNumber(pageNumber,\r\n    /* resetCurrentPageView = */\r\n    true);\r\n\r\n    this.update();\r\n  }\r\n  /**\r\n   * @type {number} One of the values in {SpreadMode}.\r\n   */\r\n\r\n\r\n  get spreadMode() {\r\n    return this._spreadMode;\r\n  }\r\n  /**\r\n   * @param {number} mode - Group the pages in spreads, starting with odd- or\r\n   *   even-number pages (unless `SpreadMode.NONE` is used).\r\n   *   The constants from {SpreadMode} should be used.\r\n   */\r\n\r\n\r\n  set spreadMode(mode) {\r\n    if (this._spreadMode === mode) {\r\n      return; // The Spread mode didn't change.\r\n    }\r\n\r\n    if (!isValidSpreadMode(mode)) {\r\n      throw new Error(`Invalid spread mode: ${mode}`);\r\n    }\r\n\r\n    this._spreadMode = mode;\r\n    this.eventBus.dispatch(\"spreadmodechanged\", {\r\n      source: this,\r\n      mode\r\n    });\r\n\r\n    this._updateSpreadMode(\r\n    /* pageNumber = */\r\n    this._currentPageNumber);\r\n  }\r\n\r\n  _updateSpreadMode(pageNumber = null) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    const viewer = this.viewer,\r\n          pages = this._pages; // Temporarily remove all the pages from the DOM.\r\n\r\n    viewer.textContent = \"\";\r\n\r\n    if (this._spreadMode === SpreadMode.NONE) {\r\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\r\n        viewer.appendChild(pages[i].div);\r\n      }\r\n    } else {\r\n      const parity = this._spreadMode - 1;\r\n      let spread = null;\r\n\r\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\r\n        if (spread === null) {\r\n          spread = document.createElement(\"div\");\r\n          spread.className = \"spread\";\r\n          viewer.appendChild(spread);\r\n        } else if (i % 2 === parity) {\r\n          spread = spread.cloneNode(false);\r\n          viewer.appendChild(spread);\r\n        }\r\n\r\n        spread.appendChild(pages[i].div);\r\n      }\r\n    }\r\n\r\n    if (!pageNumber) {\r\n      return;\r\n    }\r\n\r\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\r\n      this._setScale(this._currentScaleValue, true);\r\n    }\r\n\r\n    this._setCurrentPageNumber(pageNumber,\r\n    /* resetCurrentPageView = */\r\n    true);\r\n\r\n    this.update();\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _getPageAdvance(currentPageNumber, previous = false) {\r\n    if (this.isInPresentationMode) {\r\n      return 1;\r\n    }\r\n\r\n    switch (this._scrollMode) {\r\n      case ScrollMode.WRAPPED:\r\n        {\r\n          const {\r\n            views\r\n          } = this._getVisiblePages(),\r\n                pageLayout = new Map(); // Determine the current (visible) page layout.\r\n\r\n\r\n          for (const {\r\n            id,\r\n            y,\r\n            percent,\r\n            widthPercent\r\n          } of views) {\r\n            if (percent === 0 || widthPercent < 100) {\r\n              continue;\r\n            }\r\n\r\n            let yArray = pageLayout.get(y);\r\n\r\n            if (!yArray) {\r\n              pageLayout.set(y, yArray || (yArray = []));\r\n            }\r\n\r\n            yArray.push(id);\r\n          } // Find the row of the current page.\r\n\r\n\r\n          for (const yArray of pageLayout.values()) {\r\n            const currentIndex = yArray.indexOf(currentPageNumber);\r\n\r\n            if (currentIndex === -1) {\r\n              continue;\r\n            }\r\n\r\n            const numPages = yArray.length;\r\n\r\n            if (numPages === 1) {\r\n              break;\r\n            } // Handle documents with varying page sizes.\r\n\r\n\r\n            if (previous) {\r\n              for (let i = currentIndex - 1, ii = 0; i >= ii; i--) {\r\n                const currentId = yArray[i],\r\n                      expectedId = yArray[i + 1] - 1;\r\n\r\n                if (currentId < expectedId) {\r\n                  return currentPageNumber - expectedId;\r\n                }\r\n              }\r\n            } else {\r\n              for (let i = currentIndex + 1, ii = numPages; i < ii; i++) {\r\n                const currentId = yArray[i],\r\n                      expectedId = yArray[i - 1] + 1;\r\n\r\n                if (currentId > expectedId) {\r\n                  return expectedId - currentPageNumber;\r\n                }\r\n              }\r\n            } // The current row is \"complete\", advance to the previous/next one.\r\n\r\n\r\n            if (previous) {\r\n              const firstId = yArray[0];\r\n\r\n              if (firstId < currentPageNumber) {\r\n                return currentPageNumber - firstId + 1;\r\n              }\r\n            } else {\r\n              const lastId = yArray[numPages - 1];\r\n\r\n              if (lastId > currentPageNumber) {\r\n                return lastId - currentPageNumber + 1;\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case ScrollMode.HORIZONTAL:\r\n        {\r\n          break;\r\n        }\r\n\r\n      case ScrollMode.VERTICAL:\r\n        {\r\n          if (this._spreadMode === SpreadMode.NONE) {\r\n            break; // Normal vertical scrolling.\r\n          }\r\n\r\n          const parity = this._spreadMode - 1;\r\n\r\n          if (previous && currentPageNumber % 2 !== parity) {\r\n            break; // Left-hand side page.\r\n          } else if (!previous && currentPageNumber % 2 === parity) {\r\n            break; // Right-hand side page.\r\n          }\r\n\r\n          const {\r\n            views\r\n          } = this._getVisiblePages(),\r\n                expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1;\r\n\r\n          for (const {\r\n            id,\r\n            percent,\r\n            widthPercent\r\n          } of views) {\r\n            if (id !== expectedId) {\r\n              continue;\r\n            }\r\n\r\n            if (percent > 0 && widthPercent === 100) {\r\n              return 2;\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n          break;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n  }\r\n  /**\r\n   * Go to the next page, taking scroll/spread-modes into account.\r\n   * @returns {boolean} Whether navigation occured.\r\n   */\r\n\r\n\r\n  nextPage() {\r\n    const currentPageNumber = this._currentPageNumber,\r\n          pagesCount = this.pagesCount;\r\n\r\n    if (currentPageNumber >= pagesCount) {\r\n      return false;\r\n    }\r\n\r\n    const advance = this._getPageAdvance(currentPageNumber,\r\n    /* previous = */\r\n    false) || 1;\r\n    this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount);\r\n    return true;\r\n  }\r\n  /**\r\n   * Go to the previous page, taking scroll/spread-modes into account.\r\n   * @returns {boolean} Whether navigation occured.\r\n   */\r\n\r\n\r\n  previousPage() {\r\n    const currentPageNumber = this._currentPageNumber;\r\n\r\n    if (currentPageNumber <= 1) {\r\n      return false;\r\n    }\r\n\r\n    const advance = this._getPageAdvance(currentPageNumber,\r\n    /* previous = */\r\n    true) || 1;\r\n    this.currentPageNumber = Math.max(currentPageNumber - advance, 1);\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2014 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass PDFViewer extends BaseViewer {\r\n  get _viewerElement() {\r\n    return shadow(this, \"_viewerElement\", this.viewer);\r\n  }\r\n\r\n  _scrollIntoView({\r\n    pageDiv,\r\n    pageSpot = null,\r\n    pageNumber = null\r\n  }) {\r\n    if (!pageSpot && !this.isInPresentationMode) {\r\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\r\n      const right = left + pageDiv.clientWidth;\r\n      const {\r\n        scrollLeft,\r\n        clientWidth\r\n      } = this.container;\r\n\r\n      if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\r\n        pageSpot = {\r\n          left: 0,\r\n          top: 0\r\n        };\r\n      }\r\n    }\r\n\r\n    super._scrollIntoView({\r\n      pageDiv,\r\n      pageSpot,\r\n      pageNumber\r\n    });\r\n  }\r\n\r\n  _getVisiblePages() {\r\n    if (this.isInPresentationMode) {\r\n      // The algorithm in `getVisibleElements` doesn't work in all browsers and\r\n      // configurations (e.g. Chrome) when Presentation Mode is active.\r\n      return this._getCurrentVisiblePage();\r\n    }\r\n\r\n    return super._getVisiblePages();\r\n  }\r\n\r\n  _updateHelper(visiblePages) {\r\n    if (this.isInPresentationMode) {\r\n      return;\r\n    }\r\n\r\n    let currentId = this._currentPageNumber;\r\n    let stillFullyVisible = false;\r\n\r\n    for (const page of visiblePages) {\r\n      if (page.percent < 100) {\r\n        break;\r\n      }\r\n\r\n      if (page.id === currentId && this._scrollMode === ScrollMode.VERTICAL && this._spreadMode === SpreadMode.NONE) {\r\n        stillFullyVisible = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!stillFullyVisible) {\r\n      currentId = visiblePages[0].id;\r\n    }\r\n\r\n    this._setCurrentPageNumber(currentId);\r\n  }\r\n\r\n}\r\n\r\nexport { PDFViewer };\r\n", "import { parseQueryString } from './ui_utils.js';\r\n\r\n/* Copyright 2015 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @typedef {Object} PDFLinkServiceOptions\r\n * @property {EventBus} eventBus - The application event bus.\r\n * @property {number} [externalLinkTarget] - Specifies the `target` attribute\r\n *   for external links. Must use one of the values from {LinkTarget}.\r\n *   Defaults to using no target.\r\n * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\r\n *   external links. Defaults to stripping the referrer.\r\n * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\r\n *   thus preserving the current zoom level in the viewer, when navigating\r\n *   to internal destinations. The default value is `false`.\r\n */\r\n\r\n/**\r\n * Performs navigation functions inside PDF, such as opening specified page,\r\n * or destination.\r\n * @implements {IPDFLinkService}\r\n */\r\n\r\nclass PDFLinkService {\r\n  /**\r\n   * @param {PDFLinkServiceOptions} options\r\n   */\r\n  constructor({\r\n    eventBus,\r\n    externalLinkTarget = null,\r\n    externalLinkRel = null,\r\n    ignoreDestinationZoom = false\r\n  } = {}) {\r\n    this.eventBus = eventBus;\r\n    this.externalLinkTarget = externalLinkTarget;\r\n    this.externalLinkRel = externalLinkRel;\r\n    this.externalLinkEnabled = true;\r\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\r\n    this.baseUrl = null;\r\n    this.pdfDocument = null;\r\n    this.pdfViewer = null;\r\n    this.pdfHistory = null;\r\n    this._pagesRefCache = null;\r\n  }\r\n\r\n  setDocument(pdfDocument, baseUrl = null) {\r\n    this.baseUrl = baseUrl;\r\n    this.pdfDocument = pdfDocument;\r\n    this._pagesRefCache = Object.create(null);\r\n  }\r\n\r\n  setViewer(pdfViewer) {\r\n    this.pdfViewer = pdfViewer;\r\n  }\r\n\r\n  setHistory(pdfHistory) {\r\n    this.pdfHistory = pdfHistory;\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get pagesCount() {\r\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get page() {\r\n    return this.pdfViewer.currentPageNumber;\r\n  }\r\n  /**\r\n   * @param {number} value\r\n   */\r\n\r\n\r\n  set page(value) {\r\n    this.pdfViewer.currentPageNumber = value;\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get rotation() {\r\n    return this.pdfViewer.pagesRotation;\r\n  }\r\n  /**\r\n   * @param {number} value\r\n   */\r\n\r\n\r\n  set rotation(value) {\r\n    this.pdfViewer.pagesRotation = value;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _goToDestinationHelper(rawDest, namedDest = null, explicitDest) {\r\n    // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\r\n    const destRef = explicitDest[0];\r\n    let pageNumber;\r\n\r\n    if (typeof destRef === \"object\" && destRef !== null) {\r\n      pageNumber = this._cachedPageNumber(destRef);\r\n\r\n      if (pageNumber === null) {\r\n        // Fetch the page reference if it's not yet available. This could\r\n        // only occur during loading, before all pages have been resolved.\r\n        this.pdfDocument.getPageIndex(destRef).then(pageIndex => {\r\n          this.cachePageRef(pageIndex + 1, destRef);\r\n\r\n          this._goToDestinationHelper(rawDest, namedDest, explicitDest);\r\n        }).catch(() => {\r\n          console.error(`PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${rawDest}\".`);\r\n        });\r\n        return;\r\n      }\r\n    } else if (Number.isInteger(destRef)) {\r\n      pageNumber = destRef + 1;\r\n    } else {\r\n      console.error(`PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${rawDest}\".`);\r\n      return;\r\n    }\r\n\r\n    if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\r\n      console.error(`PDFLinkService._goToDestinationHelper: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${rawDest}\".`);\r\n      return;\r\n    }\r\n\r\n    if (this.pdfHistory) {\r\n      // Update the browser history before scrolling the new destination into\r\n      // view, to be able to accurately capture the current document position.\r\n      this.pdfHistory.pushCurrentPosition();\r\n      this.pdfHistory.push({\r\n        namedDest,\r\n        explicitDest,\r\n        pageNumber\r\n      });\r\n    }\r\n\r\n    this.pdfViewer.scrollPageIntoView({\r\n      pageNumber,\r\n      destArray: explicitDest,\r\n      ignoreDestinationZoom: this._ignoreDestinationZoom\r\n    });\r\n  }\r\n  /**\r\n   * This method will, when available, also update the browser history.\r\n   *\r\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\r\n   */\r\n\r\n\r\n  async goToDestination(dest) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    let namedDest, explicitDest;\r\n\r\n    if (typeof dest === \"string\") {\r\n      namedDest = dest;\r\n      explicitDest = await this.pdfDocument.getDestination(dest);\r\n    } else {\r\n      namedDest = null;\r\n      explicitDest = await dest;\r\n    }\r\n\r\n    if (!Array.isArray(explicitDest)) {\r\n      console.error(`PDFLinkService.goToDestination: \"${explicitDest}\" is not ` + `a valid destination array, for dest=\"${dest}\".`);\r\n      return;\r\n    }\r\n\r\n    this._goToDestinationHelper(dest, namedDest, explicitDest);\r\n  }\r\n  /**\r\n   * This method will, when available, also update the browser history.\r\n   *\r\n   * @param {number|string} val - The page number, or page label.\r\n   */\r\n\r\n\r\n  goToPage(val) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    const pageNumber = typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val) || val | 0;\r\n\r\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\r\n      console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\r\n      return;\r\n    }\r\n\r\n    if (this.pdfHistory) {\r\n      // Update the browser history before scrolling the new page into view,\r\n      // to be able to accurately capture the current document position.\r\n      this.pdfHistory.pushCurrentPosition();\r\n      this.pdfHistory.pushPage(pageNumber);\r\n    }\r\n\r\n    this.pdfViewer.scrollPageIntoView({\r\n      pageNumber\r\n    });\r\n  }\r\n  /**\r\n   * @param {string|Array} dest - The PDF destination object.\r\n   * @returns {string} The hyperlink to the PDF object.\r\n   */\r\n\r\n\r\n  getDestinationHash(dest) {\r\n    if (typeof dest === \"string\") {\r\n      if (dest.length > 0) {\r\n        return this.getAnchorUrl(\"#\" + escape(dest));\r\n      }\r\n    } else if (Array.isArray(dest)) {\r\n      const str = JSON.stringify(dest);\r\n\r\n      if (str.length > 0) {\r\n        return this.getAnchorUrl(\"#\" + escape(str));\r\n      }\r\n    }\r\n\r\n    return this.getAnchorUrl(\"\");\r\n  }\r\n  /**\r\n   * Prefix the full url on anchor links to make sure that links are resolved\r\n   * relative to the current URL instead of the one defined in <base href>.\r\n   * @param {string} anchor - The anchor hash, including the #.\r\n   * @returns {string} The hyperlink to the PDF object.\r\n   */\r\n\r\n\r\n  getAnchorUrl(anchor) {\r\n    return (this.baseUrl || \"\") + anchor;\r\n  }\r\n  /**\r\n   * @param {string} hash\r\n   */\r\n\r\n\r\n  setHash(hash) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    let pageNumber, dest;\r\n\r\n    if (hash.includes(\"=\")) {\r\n      const params = parseQueryString(hash);\r\n\r\n      if (\"search\" in params) {\r\n        this.eventBus.dispatch(\"findfromurlhash\", {\r\n          source: this,\r\n          query: params.search.replace(/\"/g, \"\"),\r\n          phraseSearch: params.phrase === \"true\"\r\n        });\r\n      } // borrowing syntax from \"Parameters for Opening PDF Files\"\r\n\r\n\r\n      if (\"page\" in params) {\r\n        pageNumber = params.page | 0 || 1;\r\n      }\r\n\r\n      if (\"zoom\" in params) {\r\n        // Build the destination array.\r\n        const zoomArgs = params.zoom.split(\",\"); // scale,left,top\r\n\r\n        const zoomArg = zoomArgs[0];\r\n        const zoomArgNumber = parseFloat(zoomArg);\r\n\r\n        if (!zoomArg.includes(\"Fit\")) {\r\n          // If the zoomArg is a number, it has to get divided by 100. If it's\r\n          // a string, it should stay as it is.\r\n          dest = [null, {\r\n            name: \"XYZ\"\r\n          }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\r\n        } else {\r\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\r\n            dest = [null, {\r\n              name: zoomArg\r\n            }];\r\n          } else if (zoomArg === \"FitH\" || zoomArg === \"FitBH\" || zoomArg === \"FitV\" || zoomArg === \"FitBV\") {\r\n            dest = [null, {\r\n              name: zoomArg\r\n            }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\r\n          } else if (zoomArg === \"FitR\") {\r\n            if (zoomArgs.length !== 5) {\r\n              console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\r\n            } else {\r\n              dest = [null, {\r\n                name: zoomArg\r\n              }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\r\n            }\r\n          } else {\r\n            console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + \"a valid zoom value.\");\r\n          }\r\n        }\r\n      }\r\n\r\n      if (dest) {\r\n        this.pdfViewer.scrollPageIntoView({\r\n          pageNumber: pageNumber || this.page,\r\n          destArray: dest,\r\n          allowNegativeOffset: true\r\n        });\r\n      } else if (pageNumber) {\r\n        this.page = pageNumber; // simple page\r\n      }\r\n\r\n      if (\"pagemode\" in params) {\r\n        this.eventBus.dispatch(\"pagemode\", {\r\n          source: this,\r\n          mode: params.pagemode\r\n        });\r\n      } // Ensure that this parameter is *always* handled last, in order to\r\n      // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\r\n\r\n\r\n      if (\"nameddest\" in params) {\r\n        this.goToDestination(params.nameddest);\r\n      }\r\n    } else {\r\n      // Named (or explicit) destination.\r\n      dest = unescape(hash);\r\n\r\n      try {\r\n        dest = JSON.parse(dest);\r\n\r\n        if (!Array.isArray(dest)) {\r\n          // Avoid incorrectly rejecting a valid named destination, such as\r\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\r\n          dest = dest.toString();\r\n        }\r\n      } catch (ex) {}\r\n\r\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\r\n        this.goToDestination(dest);\r\n        return;\r\n      }\r\n\r\n      console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + \"a valid destination.\");\r\n    }\r\n  }\r\n  /**\r\n   * @param {string} action\r\n   */\r\n\r\n\r\n  executeNamedAction(action) {\r\n    // See PDF reference, table 8.45 - Named action\r\n    switch (action) {\r\n      case \"GoBack\":\r\n        if (this.pdfHistory) {\r\n          this.pdfHistory.back();\r\n        }\r\n\r\n        break;\r\n\r\n      case \"GoForward\":\r\n        if (this.pdfHistory) {\r\n          this.pdfHistory.forward();\r\n        }\r\n\r\n        break;\r\n\r\n      case \"NextPage\":\r\n        this.pdfViewer.nextPage();\r\n        break;\r\n\r\n      case \"PrevPage\":\r\n        this.pdfViewer.previousPage();\r\n        break;\r\n\r\n      case \"LastPage\":\r\n        this.page = this.pagesCount;\r\n        break;\r\n\r\n      case \"FirstPage\":\r\n        this.page = 1;\r\n        break;\r\n      // No action according to spec\r\n    }\r\n\r\n    this.eventBus.dispatch(\"namedaction\", {\r\n      source: this,\r\n      action\r\n    });\r\n  }\r\n  /**\r\n   * @param {number} pageNum - page number.\r\n   * @param {Object} pageRef - reference to the page.\r\n   */\r\n\r\n\r\n  cachePageRef(pageNum, pageRef) {\r\n    if (!pageRef) {\r\n      return;\r\n    }\r\n\r\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\r\n    this._pagesRefCache[refStr] = pageNum;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _cachedPageNumber(pageRef) {\r\n    var _this$_pagesRefCache;\r\n\r\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\r\n    return ((_this$_pagesRefCache = this._pagesRefCache) === null || _this$_pagesRefCache === void 0 ? void 0 : _this$_pagesRefCache[refStr]) || null;\r\n  }\r\n  /**\r\n   * @param {number} pageNumber\r\n   */\r\n\r\n\r\n  isPageVisible(pageNumber) {\r\n    return this.pdfViewer.isPageVisible(pageNumber);\r\n  }\r\n  /**\r\n   * @param {number} pageNumber\r\n   */\r\n\r\n\r\n  isPageCached(pageNumber) {\r\n    return this.pdfViewer.isPageCached(pageNumber);\r\n  }\r\n\r\n}\r\n\r\nfunction isValidExplicitDestination(dest) {\r\n  if (!Array.isArray(dest)) {\r\n    return false;\r\n  }\r\n\r\n  const destLength = dest.length;\r\n\r\n  if (destLength < 2) {\r\n    return false;\r\n  }\r\n\r\n  const page = dest[0];\r\n\r\n  if (!(typeof page === \"object\" && Number.isInteger(page.num) && Number.isInteger(page.gen)) && !(Number.isInteger(page) && page >= 0)) {\r\n    return false;\r\n  }\r\n\r\n  const zoom = dest[1];\r\n\r\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\r\n    return false;\r\n  }\r\n\r\n  let allowNull = true;\r\n\r\n  switch (zoom.name) {\r\n    case \"XYZ\":\r\n      if (destLength !== 5) {\r\n        return false;\r\n      }\r\n\r\n      break;\r\n\r\n    case \"Fit\":\r\n    case \"FitB\":\r\n      return destLength === 2;\r\n\r\n    case \"FitH\":\r\n    case \"FitBH\":\r\n    case \"FitV\":\r\n    case \"FitBV\":\r\n      if (destLength !== 3) {\r\n        return false;\r\n      }\r\n\r\n      break;\r\n\r\n    case \"FitR\":\r\n      if (destLength !== 6) {\r\n        return false;\r\n      }\r\n\r\n      allowNull = false;\r\n      break;\r\n\r\n    default:\r\n      return false;\r\n  }\r\n\r\n  for (let i = 2; i < destLength; i++) {\r\n    const param = dest[i];\r\n\r\n    if (!(typeof param === \"number\" || allowNull && param === null)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n/**\r\n * @implements {IPDFLinkService}\r\n */\r\n\r\n\r\nclass SimpleLinkService {\r\n  constructor() {\r\n    this.externalLinkTarget = null;\r\n    this.externalLinkRel = null;\r\n    this.externalLinkEnabled = true;\r\n    this._ignoreDestinationZoom = false;\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get pagesCount() {\r\n    return 0;\r\n  }\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get page() {\r\n    return 0;\r\n  }\r\n  /**\r\n   * @param {number} value\r\n   */\r\n\r\n\r\n  set page(value) {}\r\n  /**\r\n   * @type {number}\r\n   */\r\n\r\n\r\n  get rotation() {\r\n    return 0;\r\n  }\r\n  /**\r\n   * @param {number} value\r\n   */\r\n\r\n\r\n  set rotation(value) {}\r\n  /**\r\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\r\n   */\r\n\r\n\r\n  async goToDestination(dest) {}\r\n  /**\r\n   * @param {number|string} val - The page number, or page label.\r\n   */\r\n\r\n\r\n  goToPage(val) {}\r\n  /**\r\n   * @param dest - The PDF destination object.\r\n   * @returns {string} The hyperlink to the PDF object.\r\n   */\r\n\r\n\r\n  getDestinationHash(dest) {\r\n    return \"#\";\r\n  }\r\n  /**\r\n   * @param hash - The PDF parameters/hash.\r\n   * @returns {string} The hyperlink to the PDF object.\r\n   */\r\n\r\n\r\n  getAnchorUrl(hash) {\r\n    return \"#\";\r\n  }\r\n  /**\r\n   * @param {string} hash\r\n   */\r\n\r\n\r\n  setHash(hash) {}\r\n  /**\r\n   * @param {string} action\r\n   */\r\n\r\n\r\n  executeNamedAction(action) {}\r\n  /**\r\n   * @param {number} pageNum - page number.\r\n   * @param {Object} pageRef - reference to the page.\r\n   */\r\n\r\n\r\n  cachePageRef(pageNum, pageRef) {}\r\n  /**\r\n   * @param {number} pageNumber\r\n   */\r\n\r\n\r\n  isPageVisible(pageNumber) {\r\n    return true;\r\n  }\r\n  /**\r\n   * @param {number} pageNumber\r\n   */\r\n\r\n\r\n  isPageCached(pageNumber) {\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport { PDFLinkService, SimpleLinkService };\r\n", "import { getOutputScale, watchScroll, getVisibleElements, scrollIntoView, isValidRotation } from './ui_utils.js';\r\nimport './pdf.js';\r\nimport { RenderingStates } from './pdf_rendering_queue.js';\r\nimport { R as RenderingCancelledException } from './display_utils.js';\r\nimport './util.js';\r\nimport './message_handler.js';\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DRAW_UPSCALE_FACTOR = 2; // See comment in `PDFThumbnailView.draw` below.\r\n\r\nconst MAX_NUM_SCALING_STEPS = 3;\r\nconst THUMBNAIL_CANVAS_BORDER_WIDTH = 1; // px\r\n\r\nconst THUMBNAIL_WIDTH = 98; // px\r\n\r\n/**\r\n * @typedef {Object} PDFThumbnailViewOptions\r\n * @property {HTMLDivElement} container - The viewer element.\r\n * @property {number} id - The thumbnail's unique ID (normally its number).\r\n * @property {PageViewport} defaultViewport - The page viewport.\r\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\r\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\r\n *   The default value is `null`.\r\n * @property {IPDFLinkService} linkService - The navigation/linking service.\r\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\r\n * @property {function} checkSetImageDisabled\r\n * @property {IL10n} l10n - Localization service.\r\n */\r\n\r\nconst TempImageFactory = function TempImageFactoryClosure() {\r\n  let tempCanvasCache = null;\r\n  return {\r\n    getCanvas(width, height) {\r\n      let tempCanvas = tempCanvasCache;\r\n\r\n      if (!tempCanvas) {\r\n        tempCanvas = document.createElement(\"canvas\");\r\n        tempCanvasCache = tempCanvas;\r\n      }\r\n\r\n      tempCanvas.width = width;\r\n      tempCanvas.height = height; // Since this is a temporary canvas, we need to fill it with a white\r\n      // background ourselves. `_getPageDrawContext` uses CSS rules for this.\r\n\r\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL || GENERIC\")) {\r\n        tempCanvas.mozOpaque = true;\r\n      }\r\n\r\n      const ctx = tempCanvas.getContext(\"2d\", {\r\n        alpha: false\r\n      });\r\n      ctx.save();\r\n      ctx.fillStyle = \"rgb(255, 255, 255)\";\r\n      ctx.fillRect(0, 0, width, height);\r\n      ctx.restore();\r\n      return [tempCanvas, tempCanvas.getContext(\"2d\")];\r\n    },\r\n\r\n    destroyCanvas() {\r\n      const tempCanvas = tempCanvasCache;\r\n\r\n      if (tempCanvas) {\r\n        // Zeroing the width and height causes Firefox to release graphics\r\n        // resources immediately, which can greatly reduce memory consumption.\r\n        tempCanvas.width = 0;\r\n        tempCanvas.height = 0;\r\n      }\r\n\r\n      tempCanvasCache = null;\r\n    }\r\n\r\n  };\r\n}();\r\n/**\r\n * @implements {IRenderableView}\r\n */\r\n\r\n\r\nclass PDFThumbnailView {\r\n  /**\r\n   * @param {PDFThumbnailViewOptions} options\r\n   */\r\n  constructor({\r\n    container,\r\n    id,\r\n    defaultViewport,\r\n    optionalContentConfigPromise,\r\n    linkService,\r\n    renderingQueue,\r\n    checkSetImageDisabled,\r\n    l10n\r\n  }) {\r\n    this.id = id;\r\n    this.renderingId = \"thumbnail\" + id;\r\n    this.pageLabel = null;\r\n    this.pdfPage = null;\r\n    this.rotation = 0;\r\n    this.viewport = defaultViewport;\r\n    this.pdfPageRotate = defaultViewport.rotation;\r\n    this._optionalContentConfigPromise = optionalContentConfigPromise || null;\r\n    this.linkService = linkService;\r\n    this.renderingQueue = renderingQueue;\r\n    this.renderTask = null;\r\n    this.renderingState = RenderingStates.INITIAL;\r\n    this.resume = null;\r\n\r\n    this._checkSetImageDisabled = checkSetImageDisabled || function () {\r\n      return false;\r\n    };\r\n\r\n    const pageWidth = this.viewport.width,\r\n          pageHeight = this.viewport.height,\r\n          pageRatio = pageWidth / pageHeight;\r\n    this.canvasWidth = THUMBNAIL_WIDTH;\r\n    this.canvasHeight = this.canvasWidth / pageRatio | 0;\r\n    this.scale = this.canvasWidth / pageWidth;\r\n    this.l10n = l10n;\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.href = linkService.getAnchorUrl(\"#page=\" + id);\r\n\r\n    this._thumbPageTitle.then(msg => {\r\n      anchor.title = msg;\r\n    });\r\n\r\n    anchor.onclick = function () {\r\n      linkService.goToPage(id);\r\n      return false;\r\n    };\r\n\r\n    this.anchor = anchor;\r\n    const div = document.createElement(\"div\");\r\n    div.className = \"thumbnail\";\r\n    div.setAttribute(\"data-page-number\", this.id);\r\n    this.div = div;\r\n    const ring = document.createElement(\"div\");\r\n    ring.className = \"thumbnailSelectionRing\";\r\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\r\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\r\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\r\n    this.ring = ring;\r\n    div.appendChild(ring);\r\n    anchor.appendChild(div);\r\n    container.appendChild(anchor);\r\n  }\r\n\r\n  setPdfPage(pdfPage) {\r\n    this.pdfPage = pdfPage;\r\n    this.pdfPageRotate = pdfPage.rotate;\r\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\r\n    this.viewport = pdfPage.getViewport({\r\n      scale: 1,\r\n      rotation: totalRotation\r\n    });\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    this.cancelRendering();\r\n    this.renderingState = RenderingStates.INITIAL;\r\n    const pageWidth = this.viewport.width,\r\n          pageHeight = this.viewport.height,\r\n          pageRatio = pageWidth / pageHeight;\r\n    this.canvasHeight = this.canvasWidth / pageRatio | 0;\r\n    this.scale = this.canvasWidth / pageWidth;\r\n    this.div.removeAttribute(\"data-loaded\");\r\n    const ring = this.ring;\r\n    ring.textContent = \"\"; // Remove the thumbnail from the DOM.\r\n\r\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\r\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\r\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\r\n\r\n    if (this.canvas) {\r\n      // Zeroing the width and height causes Firefox to release graphics\r\n      // resources immediately, which can greatly reduce memory consumption.\r\n      this.canvas.width = 0;\r\n      this.canvas.height = 0;\r\n      delete this.canvas;\r\n    }\r\n\r\n    if (this.image) {\r\n      this.image.removeAttribute(\"src\");\r\n      delete this.image;\r\n    }\r\n  }\r\n\r\n  update(rotation) {\r\n    if (typeof rotation !== \"undefined\") {\r\n      this.rotation = rotation;\r\n    }\r\n\r\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\r\n    this.viewport = this.viewport.clone({\r\n      scale: 1,\r\n      rotation: totalRotation\r\n    });\r\n    this.reset();\r\n  }\r\n  /**\r\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\r\n   *              rather than calling this one directly.\r\n   */\r\n\r\n\r\n  cancelRendering() {\r\n    if (this.renderTask) {\r\n      this.renderTask.cancel();\r\n      this.renderTask = null;\r\n    }\r\n\r\n    this.resume = null;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _getPageDrawContext(upscaleFactor = 1) {\r\n    // Keep the no-thumbnail outline visible, i.e. `data-loaded === false`,\r\n    // until rendering/image conversion is complete, to avoid display issues.\r\n    const canvas = document.createElement(\"canvas\");\r\n\r\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL || GENERIC\")) {\r\n      canvas.mozOpaque = true;\r\n    }\r\n\r\n    const ctx = canvas.getContext(\"2d\", {\r\n      alpha: false\r\n    });\r\n    const outputScale = getOutputScale(ctx);\r\n    canvas.width = upscaleFactor * this.canvasWidth * outputScale.sx | 0;\r\n    canvas.height = upscaleFactor * this.canvasHeight * outputScale.sy | 0;\r\n    const transform = outputScale.scaled ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0] : null;\r\n    return {\r\n      ctx,\r\n      canvas,\r\n      transform\r\n    };\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _convertCanvasToImage(canvas) {\r\n    if (this.renderingState !== RenderingStates.FINISHED) {\r\n      throw new Error(\"_convertCanvasToImage: Rendering has not finished.\");\r\n    }\r\n\r\n    const reducedCanvas = this._reduceImage(canvas);\r\n\r\n    const image = document.createElement(\"img\");\r\n    image.className = \"thumbnailImage\";\r\n\r\n    this._thumbPageCanvas.then(msg => {\r\n      image.setAttribute(\"aria-label\", msg);\r\n    });\r\n\r\n    image.style.width = this.canvasWidth + \"px\";\r\n    image.style.height = this.canvasHeight + \"px\";\r\n    image.src = reducedCanvas.toDataURL();\r\n    this.image = image;\r\n    this.div.setAttribute(\"data-loaded\", true);\r\n    this.ring.appendChild(image); // Zeroing the width and height causes Firefox to release graphics\r\n    // resources immediately, which can greatly reduce memory consumption.\r\n\r\n    reducedCanvas.width = 0;\r\n    reducedCanvas.height = 0;\r\n  }\r\n\r\n  draw() {\r\n    if (this.renderingState !== RenderingStates.INITIAL) {\r\n      console.error(\"Must be in new state before drawing\");\r\n      return Promise.resolve(undefined);\r\n    }\r\n\r\n    const {\r\n      pdfPage\r\n    } = this;\r\n\r\n    if (!pdfPage) {\r\n      this.renderingState = RenderingStates.FINISHED;\r\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\r\n    }\r\n\r\n    this.renderingState = RenderingStates.RUNNING;\r\n\r\n    const finishRenderTask = async (error = null) => {\r\n      // The renderTask may have been replaced by a new one, so only remove\r\n      // the reference to the renderTask if it matches the one that is\r\n      // triggering this callback.\r\n      if (renderTask === this.renderTask) {\r\n        this.renderTask = null;\r\n      }\r\n\r\n      if (error instanceof RenderingCancelledException) {\r\n        return;\r\n      }\r\n\r\n      this.renderingState = RenderingStates.FINISHED;\r\n\r\n      this._convertCanvasToImage(canvas);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    }; // Render the thumbnail at a larger size and downsize the canvas (similar\r\n    // to `setImage`), to improve consistency between thumbnails created by\r\n    // the `draw` and `setImage` methods (fixes issue 8233).\r\n    // NOTE: To primarily avoid increasing memory usage too much, but also to\r\n    //   reduce downsizing overhead, we purposely limit the up-scaling factor.\r\n\r\n\r\n    const {\r\n      ctx,\r\n      canvas,\r\n      transform\r\n    } = this._getPageDrawContext(DRAW_UPSCALE_FACTOR);\r\n\r\n    const drawViewport = this.viewport.clone({\r\n      scale: DRAW_UPSCALE_FACTOR * this.scale\r\n    });\r\n\r\n    const renderContinueCallback = cont => {\r\n      if (!this.renderingQueue.isHighestPriority(this)) {\r\n        this.renderingState = RenderingStates.PAUSED;\r\n\r\n        this.resume = () => {\r\n          this.renderingState = RenderingStates.RUNNING;\r\n          cont();\r\n        };\r\n\r\n        return;\r\n      }\r\n\r\n      cont();\r\n    };\r\n\r\n    const renderContext = {\r\n      canvasContext: ctx,\r\n      transform,\r\n      viewport: drawViewport,\r\n      optionalContentConfigPromise: this._optionalContentConfigPromise\r\n    };\r\n    const renderTask = this.renderTask = pdfPage.render(renderContext);\r\n    renderTask.onContinue = renderContinueCallback;\r\n    const resultPromise = renderTask.promise.then(function () {\r\n      return finishRenderTask(null);\r\n    }, function (error) {\r\n      return finishRenderTask(error);\r\n    });\r\n    resultPromise.finally(() => {\r\n      // Zeroing the width and height causes Firefox to release graphics\r\n      // resources immediately, which can greatly reduce memory consumption.\r\n      canvas.width = 0;\r\n      canvas.height = 0; // Only trigger cleanup, once rendering has finished, when the current\r\n      // pageView is *not* cached on the `BaseViewer`-instance.\r\n\r\n      const pageCached = this.linkService.isPageCached(this.id);\r\n\r\n      if (!pageCached) {\r\n        var _this$pdfPage;\r\n\r\n        (_this$pdfPage = this.pdfPage) === null || _this$pdfPage === void 0 ? void 0 : _this$pdfPage.cleanup();\r\n      }\r\n    });\r\n    return resultPromise;\r\n  }\r\n\r\n  setImage(pageView) {\r\n    if (this._checkSetImageDisabled()) {\r\n      return;\r\n    }\r\n\r\n    if (this.renderingState !== RenderingStates.INITIAL) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      canvas,\r\n      pdfPage\r\n    } = pageView;\r\n\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    if (!this.pdfPage) {\r\n      this.setPdfPage(pdfPage);\r\n    }\r\n\r\n    this.renderingState = RenderingStates.FINISHED;\r\n\r\n    this._convertCanvasToImage(canvas);\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _reduceImage(img) {\r\n    const {\r\n      ctx,\r\n      canvas\r\n    } = this._getPageDrawContext();\r\n\r\n    if (img.width <= 2 * canvas.width) {\r\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\r\n      return canvas;\r\n    } // drawImage does an awful job of rescaling the image, doing it gradually.\r\n\r\n\r\n    let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\r\n    let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\r\n    const [reducedImage, reducedImageCtx] = TempImageFactory.getCanvas(reducedWidth, reducedHeight);\r\n\r\n    while (reducedWidth > img.width || reducedHeight > img.height) {\r\n      reducedWidth >>= 1;\r\n      reducedHeight >>= 1;\r\n    }\r\n\r\n    reducedImageCtx.drawImage(img, 0, 0, img.width, img.height, 0, 0, reducedWidth, reducedHeight);\r\n\r\n    while (reducedWidth > 2 * canvas.width) {\r\n      reducedImageCtx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, reducedWidth >> 1, reducedHeight >> 1);\r\n      reducedWidth >>= 1;\r\n      reducedHeight >>= 1;\r\n    }\r\n\r\n    ctx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, canvas.width, canvas.height);\r\n    return canvas;\r\n  }\r\n\r\n  get _thumbPageTitle() {\r\n    var _this$pageLabel;\r\n\r\n    return this.l10n.get(\"thumb_page_title\", {\r\n      page: (_this$pageLabel = this.pageLabel) !== null && _this$pageLabel !== void 0 ? _this$pageLabel : this.id\r\n    });\r\n  }\r\n\r\n  get _thumbPageCanvas() {\r\n    var _this$pageLabel2;\r\n\r\n    return this.l10n.get(\"thumb_page_canvas\", {\r\n      page: (_this$pageLabel2 = this.pageLabel) !== null && _this$pageLabel2 !== void 0 ? _this$pageLabel2 : this.id\r\n    });\r\n  }\r\n  /**\r\n   * @param {string|null} label\r\n   */\r\n\r\n\r\n  setPageLabel(label) {\r\n    this.pageLabel = typeof label === \"string\" ? label : null;\r\n\r\n    this._thumbPageTitle.then(msg => {\r\n      this.anchor.title = msg;\r\n    });\r\n\r\n    if (this.renderingState !== RenderingStates.FINISHED) {\r\n      return;\r\n    }\r\n\r\n    this._thumbPageCanvas.then(msg => {\r\n      var _this$image;\r\n\r\n      (_this$image = this.image) === null || _this$image === void 0 ? void 0 : _this$image.setAttribute(\"aria-label\", msg);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst THUMBNAIL_SCROLL_MARGIN = -19;\r\nconst THUMBNAIL_SELECTED_CLASS = \"selected\";\r\n/**\r\n * @typedef {Object} PDFThumbnailViewerOptions\r\n * @property {HTMLDivElement} container - The container for the thumbnail\r\n *   elements.\r\n * @property {EventBus} eventBus - The application event bus.\r\n * @property {IPDFLinkService} linkService - The navigation/linking service.\r\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\r\n * @property {IL10n} l10n - Localization service.\r\n */\r\n\r\n/**\r\n * Viewer control to display thumbnails for pages in a PDF document.\r\n *\r\n * @implements {IRenderableView}\r\n */\r\n\r\nclass PDFThumbnailViewer {\r\n  /**\r\n   * @param {PDFThumbnailViewerOptions} options\r\n   */\r\n  constructor({\r\n    container,\r\n    eventBus,\r\n    linkService,\r\n    renderingQueue,\r\n    l10n\r\n  }) {\r\n    this.container = container;\r\n    this.linkService = linkService;\r\n    this.renderingQueue = renderingQueue;\r\n    this.l10n = l10n;\r\n    this.scroll = watchScroll(this.container, this._scrollUpdated.bind(this));\r\n\r\n    this._resetView();\r\n\r\n    eventBus._on(\"optionalcontentconfigchanged\", () => {\r\n      // Ensure that the thumbnails always render with the *default* optional\r\n      // content configuration.\r\n      this._setImageDisabled = true;\r\n    });\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _scrollUpdated() {\r\n    this.renderingQueue.renderHighestPriority();\r\n  }\r\n\r\n  getThumbnail(index) {\r\n    return this._thumbnails[index];\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _getVisibleThumbs() {\r\n    return getVisibleElements({\r\n      scrollEl: this.container,\r\n      views: this._thumbnails\r\n    });\r\n  }\r\n\r\n  scrollThumbnailIntoView(pageNumber) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    const thumbnailView = this._thumbnails[pageNumber - 1];\r\n\r\n    if (!thumbnailView) {\r\n      console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\r\n      return;\r\n    }\r\n\r\n    if (pageNumber !== this._currentPageNumber) {\r\n      const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1]; // Remove the highlight from the previous thumbnail...\r\n\r\n      prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS); // ... and add the highlight to the new thumbnail.\r\n\r\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\r\n    }\r\n\r\n    const visibleThumbs = this._getVisibleThumbs();\r\n\r\n    const numVisibleThumbs = visibleThumbs.views.length; // If the thumbnail isn't currently visible, scroll it into view.\r\n\r\n    if (numVisibleThumbs > 0) {\r\n      const first = visibleThumbs.first.id; // Account for only one thumbnail being visible.\r\n\r\n      const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\r\n      let shouldScroll = false;\r\n\r\n      if (pageNumber <= first || pageNumber >= last) {\r\n        shouldScroll = true;\r\n      } else {\r\n        visibleThumbs.views.some(function (view) {\r\n          if (view.id !== pageNumber) {\r\n            return false;\r\n          }\r\n\r\n          shouldScroll = view.percent < 100;\r\n          return true;\r\n        });\r\n      }\r\n\r\n      if (shouldScroll) {\r\n        scrollIntoView(thumbnailView.div, {\r\n          top: THUMBNAIL_SCROLL_MARGIN\r\n        });\r\n      }\r\n    }\r\n\r\n    this._currentPageNumber = pageNumber;\r\n  }\r\n\r\n  get pagesRotation() {\r\n    return this._pagesRotation;\r\n  }\r\n\r\n  set pagesRotation(rotation) {\r\n    if (!isValidRotation(rotation)) {\r\n      throw new Error(\"Invalid thumbnails rotation angle.\");\r\n    }\r\n\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    if (this._pagesRotation === rotation) {\r\n      return; // The rotation didn't change.\r\n    }\r\n\r\n    this._pagesRotation = rotation;\r\n\r\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\r\n      this._thumbnails[i].update(rotation);\r\n    }\r\n  }\r\n\r\n  cleanup() {\r\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\r\n      if (this._thumbnails[i] && this._thumbnails[i].renderingState !== RenderingStates.FINISHED) {\r\n        this._thumbnails[i].reset();\r\n      }\r\n    }\r\n\r\n    TempImageFactory.destroyCanvas();\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _resetView() {\r\n    this._thumbnails = [];\r\n    this._currentPageNumber = 1;\r\n    this._pageLabels = null;\r\n    this._pagesRotation = 0;\r\n    this._optionalContentConfigPromise = null;\r\n    this._pagesRequests = new WeakMap();\r\n    this._setImageDisabled = false; // Remove the thumbnails from the DOM.\r\n\r\n    this.container.textContent = \"\";\r\n  }\r\n\r\n  setDocument(pdfDocument) {\r\n    if (this.pdfDocument) {\r\n      this._cancelRendering();\r\n\r\n      this._resetView();\r\n    }\r\n\r\n    this.pdfDocument = pdfDocument;\r\n\r\n    if (!pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    const firstPagePromise = pdfDocument.getPage(1);\r\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\r\n    firstPagePromise.then(firstPdfPage => {\r\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\r\n      const pagesCount = pdfDocument.numPages;\r\n      const viewport = firstPdfPage.getViewport({\r\n        scale: 1\r\n      });\r\n\r\n      const checkSetImageDisabled = () => {\r\n        return this._setImageDisabled;\r\n      };\r\n\r\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\r\n        const thumbnail = new PDFThumbnailView({\r\n          container: this.container,\r\n          id: pageNum,\r\n          defaultViewport: viewport.clone(),\r\n          optionalContentConfigPromise,\r\n          linkService: this.linkService,\r\n          renderingQueue: this.renderingQueue,\r\n          checkSetImageDisabled,\r\n          l10n: this.l10n\r\n        });\r\n\r\n        this._thumbnails.push(thumbnail);\r\n      } // Set the first `pdfPage` immediately, since it's already loaded,\r\n      // rather than having to repeat the `PDFDocumentProxy.getPage` call in\r\n      // the `this._ensurePdfPageLoaded` method before rendering can start.\r\n\r\n\r\n      const firstThumbnailView = this._thumbnails[0];\r\n\r\n      if (firstThumbnailView) {\r\n        firstThumbnailView.setPdfPage(firstPdfPage);\r\n      } // Ensure that the current thumbnail is always highlighted on load.\r\n\r\n\r\n      const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\r\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\r\n    }).catch(reason => {\r\n      console.error(\"Unable to initialize thumbnail viewer\", reason);\r\n    });\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  _cancelRendering() {\r\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\r\n      if (this._thumbnails[i]) {\r\n        this._thumbnails[i].cancelRendering();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @param {Array|null} labels\r\n   */\r\n\r\n\r\n  setPageLabels(labels) {\r\n    if (!this.pdfDocument) {\r\n      return;\r\n    }\r\n\r\n    if (!labels) {\r\n      this._pageLabels = null;\r\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\r\n      this._pageLabels = null;\r\n      console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\");\r\n    } else {\r\n      this._pageLabels = labels;\r\n    } // Update all the `PDFThumbnailView` instances.\r\n\r\n\r\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\r\n      var _this$_pageLabels$i, _this$_pageLabels;\r\n\r\n      this._thumbnails[i].setPageLabel((_this$_pageLabels$i = (_this$_pageLabels = this._pageLabels) === null || _this$_pageLabels === void 0 ? void 0 : _this$_pageLabels[i]) !== null && _this$_pageLabels$i !== void 0 ? _this$_pageLabels$i : null);\r\n    }\r\n  }\r\n  /**\r\n   * @param {PDFThumbnailView} thumbView\r\n   * @returns {PDFPage}\r\n   * @private\r\n   */\r\n\r\n\r\n  _ensurePdfPageLoaded(thumbView) {\r\n    if (thumbView.pdfPage) {\r\n      return Promise.resolve(thumbView.pdfPage);\r\n    }\r\n\r\n    if (this._pagesRequests.has(thumbView)) {\r\n      return this._pagesRequests.get(thumbView);\r\n    }\r\n\r\n    const promise = this.pdfDocument.getPage(thumbView.id).then(pdfPage => {\r\n      if (!thumbView.pdfPage) {\r\n        thumbView.setPdfPage(pdfPage);\r\n      }\r\n\r\n      this._pagesRequests.delete(thumbView);\r\n\r\n      return pdfPage;\r\n    }).catch(reason => {\r\n      console.error(\"Unable to get page for thumb view\", reason); // Page error -- there is nothing that can be done.\r\n\r\n      this._pagesRequests.delete(thumbView);\r\n    });\r\n\r\n    this._pagesRequests.set(thumbView, promise);\r\n\r\n    return promise;\r\n  }\r\n\r\n  forceRendering() {\r\n    const visibleThumbs = this._getVisibleThumbs();\r\n\r\n    const thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this._thumbnails, this.scroll.down);\r\n\r\n    if (thumbView) {\r\n      this._ensurePdfPageLoaded(thumbView).then(() => {\r\n        this.renderingQueue.renderView(thumbView);\r\n      });\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport { PDFThumbnailViewer };\r\n", "import { PolymerElement, html } from '@polymer/polymer/polymer-element';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport '@vaadin/polymer-legacy-adapter/template-renderer.js';\r\nimport '@vaadin/text-field';\r\nimport '@vaadin/select';\r\nimport '@vaadin/item';\r\nimport '@vaadin/button';\r\nimport '@vaadin/icon';\r\nimport '@vaadin/tooltip';\r\n\r\nimport * as pdfjsLib from '../pdfjs/dist/pdf';\r\nimport * as pdfjsViewer from '../pdfjs/dist/pdf_viewer';\r\nimport * as pdfUtils from '../pdfjs/dist/ui_utils'\r\nimport * as pdfjsLinkService from '../pdfjs/dist/pdf_link_service';\r\nimport * as pdfjsThumbnailViewer from '../pdfjs/dist/pdf_thumbnail_viewer';\r\nimport * as pdfjsRenderingQueue from '../pdfjs/dist/pdf_rendering_queue';\r\nimport { NullL10n } from '../pdfjs/dist/l10n_utils';\r\nimport * as pdfjsWorker from '../pdfjs/dist/worker';\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\n/**\r\n * `<vcf-pdf-viewer>` is a Web Component for rendering PDF files without\r\n * the need of plugins. You can provide a pdf file to it through the src\r\n * attribute.\r\n *\r\n * ```\r\n * <vcf-pdf-viewer src=\"myfile.pdf\"></vcf-pdf-viewer>\r\n * ```\r\n *\r\n * @memberof Vaadin\r\n * @mixes Vaadin.ElementMixin\r\n * @mixes Vaadin.ThemableMixin\r\n * @demo demo/index.html\r\n */\r\nclass PdfViewerElement extends\r\n    ElementMixin(\r\n        ThemableMixin(PolymerElement)) {\r\n\r\n    static get template() {\r\n        return html`\r\n        <style>\r\n            :host {\r\n                display: flex;\r\n                flex-direction: column;\r\n                width: 100%;\r\n                height: 500px; \r\n            }\r\n\r\n            :host([hidden]) {\r\n                display: none !important;\r\n            }\r\n\r\n            [part~=\"toolbar\"] #currentPage,\r\n            [part~=\"toolbar\"] #pageSeparator,\r\n            [part~=\"toolbar\"] #totalPages,\r\n            [part~=\"toolbar\"] #previousPage,\r\n            [part~=\"toolbar\"] #nextPage,\r\n            [part~=\"toolbar\"] [part~=\"toolbar-zoom\"],\r\n            [part~=\"toolbar\"] [part~=\"toolbar-button-toogle-sidebar\"] {\r\n                display: none;\r\n            }\r\n\r\n            [part~=\"toolbar\"].ready #currentPage,\r\n            [part~=\"toolbar\"].ready #pageSeparator,\r\n            [part~=\"toolbar\"].ready #totalPages,\r\n            [part~=\"toolbar\"].ready #previousPage,\r\n            [part~=\"toolbar\"].ready #nextPage,\r\n            [part~=\"toolbar\"].ready [part~=\"toolbar-zoom\"],\r\n            [part~=\"toolbar\"].ready [part~=\"toolbar-button-toogle-sidebar\"] {\r\n                display: inherit;\r\n            }\r\n\r\n            [part~=\"outer-container\"] {\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n\r\n            [part~=\"main-container\"] {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                min-width: 320px;\r\n            }\r\n\r\n            [part~=\"viewer-container\"] {\r\n                position: absolute;\r\n                flex: 1;\r\n                overflow: auto;\r\n                width: 100%;\r\n                height: -moz-calc(100% - 45px); /* Firefox */\r\n                height: -webkit-calc(100% - 45px); /* Chrome, Safari */\r\n                height: calc(100% - 45px); /*all other browsers */\r\n            }\r\n\r\n            [part~=\"sidebar-container\"] {\r\n                position: absolute;\r\n                width: 200px;\r\n                top: 45px;\r\n                bottom: 0;\r\n                visibility: hidden;\r\n                height: -moz-calc(100% - 45px); /* Firefox */\r\n                height: -webkit-calc(100% - 45px); /* Chrome, Safari */\r\n                height: calc(100% - 45px); /*all other browsers */\r\n                z-index: 100;\r\n            }\r\n\r\n            [part~=\"sidebar-content\"] {\r\n                position: absolute;\r\n                top: 0;\r\n                bottom: 0;\r\n                overflow: auto;\r\n                width: 100%;\r\n                background-color: rgba(0, 0, 0, 0.1);\r\n            }\r\n\r\n            [part~=\"thumbnail-view\"] {\r\n                position: absolute;\r\n                width: calc(100% - 60px);\r\n                top: 0;\r\n                bottom: 0;\r\n                padding: 10px 30px 0;\r\n                overflow: auto;\r\n            }\r\n\r\n            [part~=\"toolbar\"] {\r\n                height: 44px;\r\n            }\r\n\r\n            .page {\r\n                position: relative;\r\n                margin: 0 auto;\r\n            }\r\n\r\n            .textLayer {\r\n                position: absolute;\r\n                left: 0;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                overflow: hidden;\r\n                line-height: 1;\r\n            }\r\n\r\n            .textLayer > span {\r\n                color: transparent;\r\n                position: absolute;\r\n                white-space: pre;\r\n                cursor: text;\r\n                -webkit-transform-origin: 0% 0%;\r\n                transform-origin: 0% 0%;\r\n            }\r\n\r\n            .textLayer .highlight {\r\n                margin: -1px;\r\n                padding: 1px;\r\n            }\r\n\r\n            .textLayer .highlight.begin {\r\n                border-radius: 4px 0 0 4px;\r\n            }\r\n\r\n            .textLayer .highlight.end {\r\n                border-radius: 0 4px 4px 0;\r\n            }\r\n\r\n            .textLayer .highlight.middle {\r\n                border-radius: 0;\r\n            }\r\n\r\n            .textLayer .endOfContent {\r\n                display: block;\r\n                position: absolute;\r\n                left: 0;\r\n                top: 100%;\r\n                right: 0;\r\n                bottom: 0;\r\n                z-index: -1;\r\n                cursor: default;\r\n                -webkit-user-select: none;\r\n                -moz-user-select: none;\r\n                -ms-user-select: none;\r\n                user-select: none;\r\n            }\r\n\r\n            .textLayer .endOfContent.active {\r\n                top: 0;\r\n            }\r\n\r\n            #header {\r\n                display: flex;\r\n                flex-direction: row;\r\n                align-items: baseline;\r\n            }\r\n\r\n            #currentPage {\r\n                align-self: baseline;\r\n            }\r\n\r\n            #outerContainer.sidebarOpen #viewerContainer {\r\n                transition-property: left;\r\n                left: 200px;\r\n                width: -moz-calc(100% - 200px); /* Firefox */\r\n                width: -webkit-calc(100% - 200px); /* Chrome, Safari */\r\n                width: calc(100% - 200px); /*all other browsers */\r\n            }\r\n\r\n            #outerContainer.sidebarOpen #sidebarContainer {\r\n                visibility: visible;\r\n            }\r\n\r\n            .thumbnail {\r\n                margin: 0 10px 5px;\r\n            }\r\n\r\n            .thumbnailImage {\r\n                border: 1px solid rgba(0, 0, 0, 0);\r\n                box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.5), 0 2px 8px rgba(0, 0, 0, 0.3);\r\n                opacity: 1.0;\r\n                z-index: 99;\r\n                background-color: rgba(255, 255, 255, 1);\r\n                background-clip: content-box;\r\n            }\r\n\r\n            .thumbnailSelectionRing {\r\n                border-radius: 2px;\r\n                padding: 7px;\r\n            }\r\n\r\n            .thumbnail.selected > .thumbnailSelectionRing {\r\n                background-color: rgba(0, 0, 0, 0.15);\r\n            }\r\n\r\n            #sidebarToggle {\r\n                margin-left: -10px;\r\n                margin-right: 15px;\r\n                border: 2px solid;\r\n                border-color: rgba(0, 0, 0, 0.5);\r\n                width: 40px;\r\n            }\r\n\r\n            #nextPage, #previousPage {\r\n                width: 30px;\r\n                margin: 0;\r\n            }\r\n\r\n            [part~=\"toolbar\"].ready [part~=\"toolbar-zoom\"].hide-zoom {\r\n                display: none;\r\n            }\r\n\r\n        </style>\r\n\r\n    <div id=\"outerContainer\" part=\"outer-container\" >\r\n        <div id=\"sidebarContainer\" part=\"sidebar-container\">\r\n            <div id=\"sidebarContent\" part=\"sidebar-content\">\r\n                <div id=\"thumbnailView\" part=\"thumbnail-view\"></div>\r\n            </div>            \r\n        </div>   \r\n        <div id=\"mainContainer\" part=\"main-container\">\r\n            <div id=\"toolbar\" part=\"toolbar\">\r\n                <vaadin-button id=\"sidebarToggle\" part=\"toolbar-button toolbar-button-toogle-sidebar\" theme=\"icon\" on-click=\"__toogleSidebar\" aria-label=\"Sidebar toggle\">\r\n                    <vaadin-icon part=\"toggle-button-icon\" slot=\"prefix\"></vaadin-icon>\r\n                    <vaadin-tooltip slot=\"tooltip\" text=\"{{sidebarToggleTooltip}}\"></vaadin-tooltip>\r\n                </vaadin-button>\r\n                <span id=\"title\" part=\"toolbar-text toolbar-title\">{{__title}}</span>\r\n                <vaadin-select id=\"zoom\" part=\"toolbar-zoom\" value=\"{{zoom}}\" items=\"[[__zoomItems]]\">\r\n                </vaadin-select>\r\n                <div part=\"toolbar-pages\">\r\n                    <vaadin-text-field id=\"currentPage\" part=\"toolbar-current-page\" value=\"{{currentPage}}\" on-change=\"__pageChange\"></vaadin-text-field>\r\n                    <span id=\"pageSeparator\" part=\"toolbar-text toolbar-page-separator\">/</span>\r\n                    <span id=\"totalPages\" part=\"toolbar-text toolbar-total-pages\">{{__totalPages}}</span>\r\n                    <vaadin-button id=\"previousPage\" part=\"toolbar-button toolbar-button-previous-page\" theme=\"icon\" on-click=\"__previousPage\" aria-label=\"Previous page\">\r\n                        <vaadin-icon part=\"previous-page-button-icon\" slot=\"prefix\"></vaadin-icon>\r\n                        <vaadin-tooltip slot=\"tooltip\" text=\"{{previousPageTooltip}}\"></vaadin-tooltip>\r\n                    </vaadin-button>\r\n                    <vaadin-button id=\"nextPage\" part=\"toolbar-button toolbar-button-next-page\" theme=\"icon\" on-click=\"__nextPage\" aria-label=\"Next page\">\r\n                        <vaadin-icon part=\"next-page-button-icon\" slot=\"prefix\"></vaadin-icon>\r\n                        <vaadin-tooltip slot=\"tooltip\" text=\"{{nextPageTooltip}}\"></vaadin-tooltip>\r\n                    </vaadin-button>\r\n                </div>\r\n                <slot></slot>\r\n            </div>\r\n            \r\n            <div id=\"viewerContainer\" part=\"viewer-container\" tabindex=\"0\">\r\n                <div id=\"viewer\" part=\"viewer\"></div>\r\n            </div>\r\n        </div>\r\n\r\n     </div>\r\n    `;\r\n    }\r\n\r\n    static get is() {\r\n        return 'vcf-pdf-viewer';\r\n    }\r\n\r\n    static get version() {\r\n        return '1.4.1';\r\n    }\r\n\r\n    static get properties() {\r\n        return {\r\n            /**\r\n             * You can set a pdf file that you want to render with src. Note that regular cross\r\n             * site scripting (XSS) rules apply. This means that the file should be on the same\r\n             * server as where the component is run, or that the server where the file is on should\r\n             * be configured to allow loading files from other sites.\r\n             */\r\n            src: {\r\n                type: String,\r\n                observer: '__srcChanged'\r\n            },\r\n\r\n            /**\r\n             * The viewer, which takes care of rendering content into a DOM element.\r\n             */\r\n            __viewer: Object,\r\n\r\n            /**\r\n             * The viewer for thumbnails.\r\n             */\r\n            __thumbnailViewer: Object,\r\n\r\n            /**\r\n             * The link service.\r\n             */\r\n            __linkService: Object,\r\n\r\n            /**\r\n             * A represenentation of a document that has been read in.\r\n             */\r\n            __document: Object,\r\n            /**\r\n             * The title for the PDF shown in the toolbar of component. It uses both the file name and\r\n             * the title in the PDF metadata if available.\r\n             */\r\n            __title: {\r\n                type: String,\r\n                value: 'PDF'\r\n            },\r\n            /**\r\n             * Relative filename\r\n             */\r\n            __filename: String,\r\n            /**\r\n             * The pdf metadata title\r\n             */\r\n            __pdfTitle: String,\r\n            /**\r\n             * The level of zoom on the document.\r\n             * Allowed values are\r\n             *  - Number, for zoom percentage. Eg. 1.5 means 150% zoom\r\n             *  - 'auto', default value\r\n             *  - 'page-fit', fit a full page into component\r\n             */\r\n            zoom: {\r\n                type: String,\r\n                value: 'auto',\r\n                observer: '__zoomChanged'\r\n            },\r\n            /**\r\n             * The current page visible viewed right now\r\n             */\r\n            currentPage: {\r\n                type: String,\r\n                value: \"1\"\r\n            },\r\n            /**\r\n             * Total amount of pages in an opened document\r\n             */\r\n            __totalPages: Number,\r\n\r\n            /**\r\n             *  Loading state\r\n             */\r\n            __loading: {\r\n                type: Boolean,\r\n                value: true\r\n            },\r\n\r\n            /**\r\n             * Whether sidebar is open after loading or not\r\n             */\r\n             __sidebarOpen: {\r\n                type: Boolean,\r\n                value: false\r\n            },\r\n\r\n            /**\r\n             * Flag to indicate if toolbar should only show filename as title\r\n             */\r\n            toolbarOnlyFilename: {\r\n                type: Boolean,\r\n                value: false\r\n            },\r\n\r\n            /**\r\n             * Property to define auto zoom label\r\n             */\r\n             autoZoomOptionLabel: {\r\n                type: String,\r\n                value: \"Automatic zoom\"\r\n            },\r\n\r\n            /**\r\n             * Property to define page fit zoom label\r\n             */\r\n            fitZoomOptionLabel: {\r\n                type: String,\r\n                value: \"Page fit\"\r\n            },\r\n\r\n            /**\r\n             * Property to define a custom title for the viewer\r\n             */\r\n             customTitle: {\r\n                type: String,\r\n                value: \"\"\r\n            },\r\n\r\n            /**\r\n             * Renders interactive form elements in the annotation layer (html) if true,\r\n             * renders values of form elements directly onto the canvas if false\r\n             */\r\n            renderInteractiveForms: {\r\n                type: Boolean,\r\n                value: true\r\n            },\r\n\r\n            /**\r\n             * Allows to hide the zoom dropdown. By default it's always shown.\r\n             */\r\n            hideZoom: {\r\n                type: Boolean,\r\n                value: false\r\n            },\r\n            __zoomItems: {\r\n                computed: '__computeZoomItems(autoZoomOptionLabel, fitZoomOptionLabel)'\r\n            },\r\n\r\n             /**\r\n             * Property to define a custom tooltip for the sidebar toggle button\r\n             */\r\n             sidebarToggleTooltip: {\r\n                type: String,\r\n                value: \"\"\r\n            },\r\n\r\n            /**\r\n             * Property to define a custom tooltip for the previous page button \r\n             */\r\n            previousPageTooltip: {\r\n                type: String,\r\n                value: \"\"\r\n            },\r\n\r\n            /**\r\n             * Property to define a custom tooltip for the next page button\r\n             */\r\n            nextPageTooltip: {\r\n                type: String,\r\n                value: \"\"\r\n            },\r\n        };\r\n    }\r\n\r\n    __computeZoomItems(autoZoomOptionLabel, fitZoomOptionLabel) {\r\n        return [\r\n            { label: autoZoomOptionLabel, value:'auto' },\r\n            { label: fitZoomOptionLabel, value:'page-fit' },\r\n            { label: '50%', value:'0.5' },\r\n            { label: '75%', value:'0.75' },\r\n            { label: '100%', value:'1.0' },\r\n            { label: '125%', value:'1.25' },\r\n            { label: '150%', value:'1.5' },\r\n            { label: '200%', value:'2.0' },\r\n            { label: '300%', value:'3.0' },\r\n            { label: '400%', value:'4.0' }\r\n        ]\r\n    }\r\n\r\n    static get observers() {\r\n        return [\r\n            '__setTitle(__pdfTitle, __filename)',\r\n            '__updateZoomVisibility()'\r\n        ];\r\n    }\r\n\r\n    __setTitle(pdfTitle, filename) {\r\n        if(this.customTitle){\r\n            this.__title = this.customTitle;\r\n        } else if(this.__viewer && this.toolbarOnlyFilename && filename) {\r\n            this.__title = filename;\r\n        } else if (pdfTitle && filename) {\r\n            this.__title = pdfTitle + ' - ' + filename;\r\n        } else if (pdfTitle) {\r\n            this.__title = pdfTitle;\r\n        } else if (filename) {\r\n            this.__title = filename;\r\n        } else {\r\n            this.__title = 'PDF';\r\n        }\r\n   }\r\n\r\n   __updateZoomVisibility() {\r\n        if(this.hideZoom) {\r\n            this.$.zoom.classList.add('hide-zoom');\r\n        } else {\r\n            this.$.zoom.classList.remove('hide-zoom');\r\n        }\r\n    }\r\n\r\n    ready() {\r\n        super.ready();\r\n        this.$.viewerContainer.addEventListener('focus', e => this.__setFocused(true), true);\r\n        this.$.viewerContainer.addEventListener('blur', e => this.__setFocused(false), true);\r\n        this.$.viewerContainer.addEventListener('mousedown', e => {\r\n            this._mousedown = true;\r\n            const mouseUpListener = () => {\r\n                this._mousedown = false;\r\n                document.removeEventListener('mouseup', mouseUpListener);\r\n            };\r\n            document.addEventListener('mouseup', mouseUpListener);\r\n        });\r\n\r\n        // options\r\n        const eventBus = new pdfUtils.EventBus();\r\n        this.__linkService = new pdfjsLinkService.PDFLinkService({\r\n            eventBus,\r\n        });\r\n        var pdfRenderingQueue = new pdfjsRenderingQueue.PDFRenderingQueue();\r\n        var l10n = NullL10n;\r\n\r\n        // pdfViewer\r\n        this.__viewer = new pdfjsViewer.PDFViewer({\r\n            container: this.$.viewerContainer,\r\n            textLayerMode: 2,\r\n            viewer: this.$.viewer,\r\n            eventBus: eventBus,\r\n            linkService: this.__linkService,\r\n            renderingQueue: pdfRenderingQueue,\r\n            l10n: l10n,\r\n            renderInteractiveForms: this.renderInteractiveForms\r\n        });\r\n\r\n        this.__linkService.setViewer(this.__viewer);\r\n        pdfRenderingQueue.setViewer(this.__viewer);\r\n\r\n        // thumbnailViewer\r\n        this.__thumbnailViewer = new pdfjsThumbnailViewer.PDFThumbnailViewer({\r\n            container: this.$.thumbnailView,\r\n            eventBus: eventBus,\r\n            linkService: this.__linkService,\r\n            renderingQueue: pdfRenderingQueue,\r\n            l10n: l10n\r\n        })\r\n\r\n        pdfRenderingQueue.setThumbnailViewer(this.__thumbnailViewer);\r\n\r\n        // listeners\r\n        eventBus.on('pagesinit', () => {\r\n            this.__viewer.currentScaleValue = this.zoom;\r\n            this.__loading = false;\r\n            this.__updateThumbnailViewer();\r\n            if(this.__sidebarOpen){\r\n                this.__openSidebar();\r\n            } else {\r\n                this.__closeSidebar();\r\n            }\r\n            this.__viewer.currentPage = this.setCurrentPage();\r\n        });\r\n        eventBus.on('pagechanging', (event) => {\r\n            this.__updateCurrentPageValue(event.pageNumber);\r\n            this.__updatePageNumberStates();\r\n            if(this.__thumbnailViewer && this.__thumbnailViewer.renderingQueue.isThumbnailViewEnabled){\r\n                this.__thumbnailViewer.scrollThumbnailIntoView(this.currentPage);\r\n            }\r\n        });\r\n\r\n        this.__resizeObserver = new ResizeObserver(() => {\r\n            requestAnimationFrame(() => this.__recalculateSizes());\r\n        });\r\n\r\n        this.__resizeObserver.observe(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.__recalculateSizes();\r\n    }\r\n\r\n    __updateCurrentPageValue(pageNumber){\r\n        this.currentPage = \"\" + pageNumber;\r\n        this.dispatchEvent(new CustomEvent('currentPage-changed'));\r\n    }\r\n\r\n    __recalculateSizes() {\r\n        if (this.offsetWidth < 600) {\r\n            this.classList.add('small-size');\r\n            this.$.toolbar.classList.add('small-size');\r\n        } else {\r\n            this.classList.remove('small-size');\r\n            this.$.toolbar.classList.remove('small-size');\r\n        }\r\n    }\r\n    __setFocused(focused) {\r\n        if (focused) {\r\n            this.$.viewerContainer.setAttribute('focused', '');\r\n            if (!this._mousedown) {\r\n                this.$.viewerContainer.setAttribute('focus-ring', '');\r\n            }\r\n        } else {\r\n            this.$.viewerContainer.removeAttribute('focused');\r\n            this.$.viewerContainer.removeAttribute('focus-ring');\r\n        }\r\n    }\r\n\r\n    __open(src) {\r\n        // Is there already a document loaded?\r\n        if (this.__document) {\r\n            // We need to close the current document\r\n            return this.__close().then(() => {\r\n                // and start over with opening the new one\r\n                return this.__open(src);\r\n            });\r\n        }\r\n        if (!src) {\r\n            // No file given, show nothing.\r\n            return;\r\n        }\r\n        this.__setFilename(src);\r\n        this.__document = pdfjsLib.getDocument(new URL(src, document.baseURI).href);\r\n        return this.__document.promise.then((pdfDocument) => {\r\n            // Document loaded, specifying document for the viewer.\r\n            this.__thumbnailViewer.setDocument(pdfDocument);\r\n            this.__viewer.setDocument(pdfDocument);\r\n            this.__linkService.setDocument(pdfDocument);\r\n\r\n            this.$.toolbar.classList.add('ready');\r\n            this.__totalPages = pdfDocument.numPages;\r\n            this.__updatePageNumberStates();\r\n            this.__setPdfTitleFromMetadata(pdfDocument).then(() => {\r\n                this.dispatchEvent(new CustomEvent('document-loaded', {\r\n                    detail: {\r\n                        document: pdfDocument\r\n                    }\r\n                }));\r\n            });\r\n        }, function (exception) {\r\n            console.error(exception && exception.message);\r\n        });\r\n    }\r\n\r\n    __srcChanged(newSrc) {\r\n        this.__open(newSrc);\r\n    }\r\n\r\n    /**\r\n     * Closes opened PDF document.\r\n     * @returns {Promise} - Returns the promise, which is resolved when all\r\n     *                      destruction is completed.\r\n     */\r\n    __close() {\r\n        this.$.toolbar.classList.remove('ready');\r\n        this.__filename = 'PDF';\r\n        if (!this.__document) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        var promise = this.__document.destroy();\r\n        if (this.__document) {\r\n            this.__document = null;\r\n            this.__viewer.setDocument(null);\r\n            this.__thumbnailViewer.setDocument(null);\r\n            this.__linkService.setDocument(null);\r\n        }\r\n        return promise;\r\n    }\r\n\r\n    __setFilename(src) {\r\n        let filename = pdfjsLib.getFilenameFromUrl(src) || src;\r\n        try {\r\n            filename = decodeURIComponent(filename);\r\n        } catch (e) {\r\n            // decodeURIComponent may throw URIError,\r\n            // fall back to using the unprocessed url in that case\r\n        }\r\n        this.__filename = filename;\r\n    }\r\n\r\n    __setPdfTitleFromMetadata(pdfDocument) {\r\n        return pdfDocument.getMetadata().then((data) => {\r\n            let pdfTitle;\r\n            const metadata = data.metadata;\r\n            if (metadata && metadata.has('dc:title')) {\r\n                const title = metadata.get('dc:title');\r\n                // Ghostscript sometimes returns 'Untitled', so prevent setting the\r\n                // title to 'Untitled'.\r\n                if (title !== 'Untitled') {\r\n                    pdfTitle = title;\r\n                }\r\n            }\r\n\r\n            const info = data.info;\r\n            if (!pdfTitle && info && info['Title']) {\r\n                pdfTitle = info['Title'];\r\n            }\r\n            this.__pdfTitle = pdfTitle;\r\n        });\r\n    }\r\n\r\n    __updatePageNumberStates() {\r\n        this.$.previousPage.disabled = (this.currentPage === \"1\");\r\n        this.$.nextPage.disabled = (this.currentPage === \"\" + this.__totalPages);\r\n    }\r\n\r\n    __zoomChanged(value) {\r\n        if (!this.__viewer || this.__loading) {\r\n            return;\r\n        }\r\n        // This logs error 'TextLayerBuilder._bindEvents: `this.cancel()` should have\r\n        // been called when the page was reset, or rendering cancelled.'\r\n        //\r\n        // There is a problem deep inside pdfjs viewer that causes an console.error()\r\n        // to be logged, but the component still works. It seems to be due to\r\n        // webcomponents/shadow dom messing with\r\n        // TODO: Fix the issue so that we get rid of the error in log\r\n        this.__viewer.currentScaleValue = value;\r\n    }\r\n\r\n    __pageChange(event) {\r\n        let pageNumber = parseInt(this.$.currentPage.value, 10);\r\n        if (isNaN(pageNumber)) {\r\n            pageNumber = this.__viewer.currentPageNumber;\r\n            this.$.currentPage.value = \"\" + pageNumber;\r\n        }\r\n        if (pageNumber < 1) {\r\n            pageNumber = 1;\r\n        }\r\n        if (pageNumber > this.__totalPages) {\r\n            pageNumber = this.__totalPages;\r\n        }\r\n        this.__viewer.currentPageNumber = pageNumber;\r\n    }\r\n\r\n    setCurrentPage(value) {\r\n        if (value != undefined) {\r\n            this.$.currentPage.value = \"\" + value;\r\n        }\r\n        this.__pageChange();\r\n    }\r\n\r\n    _getPage() {\r\n        return this.__viewer.currentPageNumber;\r\n    }\r\n\r\n    __previousPage() {\r\n        this.__viewer.currentPageNumber--;\r\n    }\r\n\r\n    __nextPage() {\r\n        this.__viewer.currentPageNumber++;\r\n    }\r\n\r\n    __toogleSidebar() {\r\n        if (this.$.outerContainer.classList.length == 0) {\r\n            this.__openSidebar();\r\n        } else {\r\n            this.__closeSidebar();\r\n        }\r\n    }\r\n\r\n    __openSidebar() {\r\n        if(!this.__thumbnailViewer ||this.__loading){\r\n            this.__sidebarOpen = true;\r\n        } else {\r\n            this.__thumbnailViewer.renderingQueue.isThumbnailViewEnabled = true;\r\n            this.__updateThumbnailViewer();\r\n            this.$.outerContainer.classList.add('sidebarOpen');\r\n        }\r\n    }\r\n\r\n    __closeSidebar() {\r\n        if(!this.__thumbnailViewer || this.__loading){\r\n            this.__sidebarOpen = false;\r\n        } else {\r\n            this.__thumbnailViewer.renderingQueue.isThumbnailViewEnabled = false;\r\n            this.$.outerContainer.classList.remove('sidebarOpen');\r\n        }\r\n    }\r\n\r\n    __updateThumbnailViewer() {\r\n        const pagesCount = this.__totalPages;\r\n        for (let i = 0; i < pagesCount; i++) {\r\n            const pageView = this.__viewer.getPageView(i);\r\n            if (pageView.renderingState === pdfjsRenderingQueue.RenderingStates.FINISHED) {\r\n                const thumbnailView = this.__thumbnailViewer.getThumbnail(i);\r\n                thumbnailView.setImage(pageView);\r\n            } else {\r\n                this.__thumbnailViewer.renderingQueue.renderHighestPriority();\r\n            }\r\n        }\r\n        var component = this;\r\n        for (let i = 0; i < this.__thumbnailViewer._thumbnails.length; i++) {\r\n            const thumbnailView = this.__thumbnailViewer.getThumbnail(i);\r\n            thumbnailView.anchor.onclick = function () {\r\n                const id = thumbnailView.id;\r\n                thumbnailView.linkService.goToPage(id);\r\n                component.dispatchEvent(new CustomEvent('thumbnail-clicked', {\r\n                    detail: {\r\n                        source: component,\r\n                        pageNumber: id\r\n                    }\r\n                }));\r\n                return false;\r\n              };\r\n        }\r\n        if(this.__thumbnailViewer && this.__thumbnailViewer.renderingQueue.isThumbnailViewEnabled){\r\n            this.__thumbnailViewer.scrollThumbnailIntoView(this.currentPage);\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define(PdfViewerElement.is, PdfViewerElement);\r\n\r\n/**\r\n * @namespace Vaadin\r\n */\r\nwindow.Vaadin.PdfViewerElement = PdfViewerElement;\r\n\r\n\r\n\r\n", "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\r\n\r\nimport '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\r\n\r\nimport '@vaadin/select/theme/lumo/vaadin-select-styles.js';\r\nimport '@vaadin/list-box/theme/lumo/vaadin-list-box-styles.js';\r\nimport '@vaadin/item/theme/lumo/vaadin-item-styles.js';\r\n\r\nregisterStyles(\r\n    'vcf-pdf-viewer',\r\n    css`\r\n        :host {\r\n        background-color: var(--lumo-base-color);\r\n        border: 1px solid var(--lumo-contrast-10pct);\r\n        border-radius: var(--lumo-border-radius, var(--lumo-border-radius-m));\r\n        font-family: var(--lumo-font-family);\r\n        position: relative;\r\n      }\r\n\r\n      [part~=\"viewer-container\"] {\r\n        background-color: var(--lumo-contrast-5pct);\r\n        outline: none;\r\n      }\r\n\r\n      [part~=\"viewer-container\"][focus-ring] {\r\n        box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\r\n      }\r\n\r\n      [part~=\"toolbar\"] {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        border-bottom: 1px solid var(--lumo-contrast-10pct);\r\n        padding: 0 var(--lumo-space-m);\r\n        z-index: 2;\r\n      }\r\n\r\n      [part~=\"toolbar-pages\"] {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex: 1;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n      }\r\n\r\n      [part~=\"toolbar-current-page\"] {\r\n        width: 3.25em;\r\n      }\r\n\r\n      [part~=\"toolbar-page-separator\"] {\r\n        padding: 0 var(--lumo-space-xs);\r\n      }\r\n\r\n      [part~=\"toolbar-total-pages\"] {\r\n        padding-right: var(--lumo-space-m);\r\n      }\r\n\r\n      [part~=\"toolbar-title\"] {\r\n        line-height: 2.25rem;\r\n        display: inline-block;\r\n        color: var(--lumo-contrast-80pct);\r\n        padding: var(--lumo-space-xs) 0;\r\n        flex: 1;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n\r\n      [part~=\"toolbar-button\"] {\r\n        height: var(--lumo-size-m);\r\n        border-radius: var(--lumo-border-radius, var(--lumo-border-radius-m));\r\n        color: var(--lumo-contrast-80pct);\r\n        transition: background-color 100ms, color 100ms;\r\n        margin: var(--lumo-space-xs);\r\n        background: transparent;\r\n        border: none;\r\n        padding-top: 0.2em;\r\n      }\r\n\r\n      [part~=\"toolbar-button\"][disabled] {\r\n        color: var(--lumo-contrast-40pct);\r\n      }\r\n\r\n      [part~=\"toolbar-button\"]:hover {\r\n        background-color: var(--lumo-contrast-5pct);\r\n        color: var(--lumo-contrast-80pct);\r\n      }\r\n\r\n      [part~=\"toolbar-button\"][disabled]:hover {\r\n        background-color: transparent;\r\n        color: var(--lumo-contrast-40pct);\r\n      }\r\n\r\n      [part~=\"toolbar-button\"]:focus {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\r\n      }\r\n\r\n      [part~=\"toolbar-button\"] {\r\n        font-family: 'lumo-icons';\r\n        font-size: var(--lumo-icon-size-m);\r\n      }\r\n\r\n      [part~=\"previous-page-button-icon\"]::before {\r\n        content: var(--lumo-icons-angle-up);\r\n      }\r\n\r\n      [part~=\"next-page-button-icon\"]::before {\r\n        content: var(--lumo-icons-angle-down);\r\n      }\r\n\r\n      [part~=\"toggle-button-icon\"]::before {\r\n        content: var(--lumo-icons-chevron-right);\r\n      }\r\n\r\n      #outerContainer.sidebarOpen [part~=\"toggle-button-icon\"]::before {\r\n        content: var(--lumo-icons-chevron-left);\r\n      }\r\n\r\n      .page {\r\n        padding: var(--lumo-space-m);\r\n        padding-bottom: 0;\r\n      }\r\n\r\n      .page:last-child {\r\n        padding-bottom: var(--lumo-space-m);\r\n      }\r\n\r\n      .textLayer {\r\n        top: var(--lumo-space-m);\r\n        right: var(--lumo-space-m);\r\n        bottom: var(--lumo-space-m);\r\n        left: var(--lumo-space-m);\r\n        opacity: 0.2;\r\n      }\r\n\r\n      .textLayer ::-moz-selection {\r\n        background: rgb(0, 0, 255);\r\n      }\r\n\r\n      .textLayer ::selection {\r\n        background: rgb(0, 0, 255);\r\n      }\r\n\r\n      .textLayer .highlight {\r\n        background-color: rgb(180, 0, 170);\r\n        border-radius: 4px;\r\n      }\r\n\r\n      .textLayer .highlight.selected {\r\n        background-color: rgb(0, 100, 0);\r\n      }\r\n\r\n      [part~=\"toolbar\"].small-size [part~=\"toolbar-pages\"] {\r\n        flex: none;\r\n      }\r\n\r\n      [part~=\"toolbar\"].small-size [part~=\"toolbar-zoom\"] {\r\n        position: absolute;\r\n        bottom: var(--lumo-space-s);\r\n        left: 50%;\r\n        margin-left: -100px;\r\n        background-color: white;\r\n        box-shadow: var(--lumo-box-shadow-m);\r\n        padding: var(--lumo-space-xs);\r\n        z-index: 99;\r\n      }\r\n     `,\r\n    { moduleId: 'lumo-vcf-pdf-viewer' }\r\n  );\r\n  "],
  "mappings": "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",
  "names": ["renderer", "data", "url", "css", "fs", "k", "CanvasGraphics", "worker", "PDFWorker", "PDFDocumentLoadingTask", "mainWorkerMessageHandler", "font", "InternalRenderTask", "convertImgDataToPng", "html", "PDFNodeStream", "args", "info"]
}
