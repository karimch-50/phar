import {
  themeRegistry
} from "./chunk-BBNA52CT.js";
import "./chunk-25Y4ITXF.js";
import {
  unsafeCSS
} from "./chunk-CMT2GIH3.js";
import "./chunk-QO3ZNG6F.js";
import {
  DomModule,
  stylesFromTemplate
} from "./chunk-FXP5WKMI.js";
import "./chunk-2IE6RYOR.js";
import "./chunk-6WL6DBHT.js";
import "./chunk-WGAPYIUP.js";

// node_modules/@vaadin/polymer-legacy-adapter/src/style-modules.js
var moduleIdIndex = 0;
function registerStyles(themeFor, styles = [], options = {}) {
  const themeId = options.moduleId || `custom-style-module-${moduleIdIndex}`;
  moduleIdIndex += 1;
  const module = document.createElement("dom-module");
  if (themeFor) {
    module.setAttribute("theme-for", themeFor);
  }
  const includeStylesToTemplate = !!(styles.length && options.moduleId);
  const moduleIncludes = [].concat(options.include || []);
  if (moduleIncludes.length === 0) {
    module.__allStyles = styles;
  } else if (!includeStylesToTemplate) {
    module.__partialStyles = styles;
  }
  module.innerHTML = `
    <template>
      ${moduleIncludes.map((include) => `<style include=${include}></style>`)}
      ${includeStylesToTemplate ? `<style>${styles.map((style) => style.cssText).join("\n")}</style>` : ""}
    </template>
  `;
  module.register(themeId);
}
function getModuleStyles(module) {
  return stylesFromTemplate(module.querySelector("template")).map((styleElement) => {
    return unsafeCSS(styleElement.textContent);
  });
}
function getAllThemes() {
  const domModule = DomModule;
  const modules = domModule.prototype.modules;
  return Object.keys(modules).map((moduleId) => {
    const module = modules[moduleId];
    const themeFor = module.getAttribute("theme-for");
    if (!module.__allStyles) {
      module.__allStyles = getModuleStyles(module).concat(module.__partialStyles || []);
    }
    return {
      themeFor,
      moduleId,
      styles: module.__allStyles
    };
  });
}
if (!window.Vaadin) {
  window.Vaadin = {};
}
window.Vaadin.styleModules = {
  getAllThemes,
  registerStyles
};
if (themeRegistry && themeRegistry.length > 0) {
  themeRegistry.forEach((theme) => {
    registerStyles(theme.themeFor, theme.styles, {
      moduleId: theme.moduleId,
      include: theme.include
    });
  });
  themeRegistry.length = 0;
}
/*! Bundled license information:

@vaadin/polymer-legacy-adapter/src/style-modules.js:
  (**
   * @license
   * Copyright (c) 2021 - 2023 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)

@vaadin/polymer-legacy-adapter/style-modules.js:
  (**
   * @license
   * Copyright (c) 2021 - 2023 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)
*/
//# sourceMappingURL=@vaadin_polymer-legacy-adapter_style-modules__js.js.map
