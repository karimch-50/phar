{
  "version": 3,
  "sources": ["../../@vaadin/message-list/theme/lumo/vaadin-message-styles.js", "../../@vaadin/message-list/theme/lumo/vaadin-message-list-styles.js", "../../@vaadin/message-list/src/vaadin-message.js", "../../@vaadin/message-list/src/vaadin-message-list.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/avatar/theme/lumo/vaadin-avatar-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-message',\n  css`\n    :host {\n      color: var(--lumo-body-text-color);\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-m);\n      padding: var(--lumo-space-s) var(--lumo-space-m);\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      -webkit-text-size-adjust: 100%;\n      --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\n      --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\n    }\n\n    :host([focus-ring]) {\n      box-shadow: inset 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\n    }\n\n    [part='header'] {\n      min-height: calc(var(--lumo-font-size-m) * var(--lumo-line-height-m));\n    }\n\n    [part='name'] {\n      margin-right: var(--lumo-space-s);\n    }\n\n    [part='name']:empty {\n      margin-right: 0;\n    }\n\n    :host([dir='rtl']) [part='name'] {\n      margin-left: var(--lumo-space-s);\n      margin-right: 0;\n    }\n\n    :host([dir='rtl']) [part='name']:empty {\n      margin-left: 0;\n    }\n\n    [part='time'] {\n      color: var(--lumo-secondary-text-color);\n      font-size: var(--lumo-font-size-s);\n    }\n\n    ::slotted([slot='avatar']) {\n      --vaadin-avatar-size: var(--lumo-size-m);\n      margin-top: calc(var(--lumo-space-s));\n      margin-inline-end: calc(var(--lumo-space-m));\n    }\n  `,\n  { moduleId: 'lumo-message' },\n);\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport './vaadin-message-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-message-list', css``, { moduleId: 'lumo-message-list' });\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/avatar/src/vaadin-avatar.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-message>` is a Web Component for showing a single message with an author, message and time.\n *\n * ```html\n * <vaadin-message time=\"2021-01-28 10:43\"\n *     user-name = \"Bob Ross\"\n *     user-abbr = \"BR\"\n *     user-img = \"/static/img/avatar.jpg\">There is no real ending. It's just the place where you stop the story.</vaadin-message>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------|----------------\n * `name`    | Author's name\n * `time`    | When the message was posted\n * `content` | The message itself as a slotted content\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `focus-ring` | Set when the message is focused using the keyboard.\n * `focused`    | Set when the message is focused.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes FocusMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass Message extends FocusMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get properties() {\n    return {\n      /**\n       * Time of sending the message. It is rendered as-is to the part='time' slot,\n       * so the formatting is up to you.\n       */\n      time: {\n        type: String,\n      },\n\n      /**\n       * The name of the user posting the message.\n       * It will be placed in the name part to indicate who has sent the message.\n       * It is also used as a tooltip for the avatar.\n       * Example: `message.userName = \"Jessica Jacobs\";`\n       * @attr {string} user-name\n       */\n      userName: {\n        type: String,\n      },\n\n      /**\n       * The abbreviation of the user.\n       * The abbreviation will be passed on to avatar of the message.\n       * If the user does not have an avatar picture set with `userImg`, `userAbbr` will be shown in the avatar.\n       * Example: `message.userAbbr = \"JJ\";`\n       * @attr {string} user-abbr\n       */\n      userAbbr: {\n        type: String,\n      },\n\n      /**\n       * An URL for a user image.\n       * The image will be used in the avatar component to show who has sent the message.\n       * Example: `message.userImg = \"/static/img/avatar.jpg\";`\n       * @attr {string} user-img\n       */\n      userImg: {\n        type: String,\n      },\n\n      /**\n       * A color index to be used to render the color of the avatar.\n       * With no `userColorIndex` set, the basic avatar color will be used.\n       * By setting a userColorIndex, the component will check if there exists a CSS variable defining the color, and uses it if there is one.\n       * If now CSS variable is found for the color index, the property for the color will not be set.\n       *\n       * Example:\n       * CSS:\n       * ```css\n       * html {\n       *   --vaadin-user-color-1: red;\n       * }\n       * ```\n       *\n       * JavaScript:\n       * ```js\n       * message.userColorIndex = 1;\n       * ```\n       * @attr {number} user-color-index\n       */\n      userColorIndex: {\n        type: Number,\n      },\n\n      /** @private */\n      _avatar: {\n        ttype: Object,\n      },\n    };\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: row;\n          outline: none;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='content'] {\n          display: flex;\n          flex-direction: column;\n          flex-grow: 1;\n        }\n\n        [part='header'] {\n          align-items: baseline;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n        }\n\n        [part='name'] {\n          font-weight: 500;\n        }\n\n        [part='message'] {\n          white-space: pre-wrap;\n        }\n\n        ::slotted([slot='avatar']) {\n          --vaadin-avatar-outline-width: 0px;\n          flex-shrink: 0;\n        }\n      </style>\n      <slot name=\"avatar\"></slot>\n      <div part=\"content\">\n        <div part=\"header\">\n          <span part=\"name\">[[userName]]</span>\n          <span part=\"time\">[[time]]</span>\n        </div>\n        <div part=\"message\"><slot></slot></div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-message';\n  }\n\n  static get observers() {\n    return ['__avatarChanged(_avatar, userName, userAbbr, userImg, userColorIndex)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._avatarController = new SlotController(this, 'avatar', 'vaadin-avatar', {\n      initializer: (avatar) => {\n        avatar.setAttribute('tabindex', '-1');\n        avatar.setAttribute('aria-hidden', 'true');\n        this._avatar = avatar;\n      },\n    });\n    this.addController(this._avatarController);\n  }\n\n  /** @private */\n  __avatarChanged(avatar, userName, userAbbr, userImg, userColorIndex) {\n    if (avatar) {\n      avatar.setProperties({\n        name: userName,\n        abbr: userAbbr,\n        img: userImg,\n        colorIndex: userColorIndex,\n      });\n    }\n  }\n}\n\ndefineCustomElement(Message);\n\nexport { Message };\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html as legacyHtml, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { html, render } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { KeyboardDirectionMixin } from '@vaadin/a11y-base/src/keyboard-direction-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { Message } from './vaadin-message.js';\n\n/**\n * `<vaadin-message-list>` is a Web Component for showing an ordered list of messages. The messages are rendered as <vaadin-message>\n *\n * ### Example\n *\n * To create a new message list, add the component to the page:\n *\n * ```html\n * <vaadin-message-list></vaadin-message-list>\n * ```\n *\n * Provide the messages to the message list with the [`items`](#/elements/vaadin-message-list#property-items) property.\n *\n * ```js\n * document.querySelector('vaadin-message-list').items = [\n *   { text: 'Hello list', time: 'yesterday', userName: 'Matt Mambo', userAbbr: 'MM', userColorIndex: 1 },\n *   { text: 'Another message', time: 'right now', userName: 'Linsey Listy', userAbbr: 'LL', userColorIndex: 2, userImg: '/static/img/avatar.jpg' }\n * ];\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------|----------------\n * `list`    | The container wrapping messages.\n *\n * See the [`<vaadin-message>`](#/elements/vaadin-message) documentation for the available\n * state attributes and stylable shadow parts of message elements.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes KeyboardDirectionMixin\n */\nclass MessageList extends KeyboardDirectionMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get is() {\n    return 'vaadin-message-list';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * An array of objects which will be rendered as messages.\n       * The message objects can have the following properties:\n       * ```js\n       * Array<{\n       *   text: string,\n       *   time: string,\n       *   userName: string,\n       *   userAbbr: string,\n       *   userImg: string,\n       *   userColorIndex: number,\n       *   className: string,\n       *   theme: string\n       * }>\n       * ```\n       */\n      items: {\n        type: Array,\n        value: () => [],\n        observer: '_itemsChanged',\n      },\n    };\n  }\n\n  static get template() {\n    return legacyHtml`\n      <style>\n        :host {\n          display: block;\n          overflow: auto;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n      <div part=\"list\" role=\"list\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  /** @protected */\n  get _messages() {\n    return [...this.querySelectorAll('vaadin-message')];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Make screen readers announce new messages\n    this.setAttribute('aria-relevant', 'additions');\n    this.setAttribute('role', 'log');\n  }\n\n  /**\n   * Override method inherited from `KeyboardDirectionMixin`\n   * to use the list of message elements as items.\n   *\n   * @return {Element[]}\n   * @protected\n   * @override\n   */\n  _getItems() {\n    return this._messages;\n  }\n\n  /** @private */\n  _itemsChanged(newVal, oldVal) {\n    const items = newVal || [];\n    const oldItems = oldVal || [];\n\n    if (items.length || oldItems.length) {\n      const focusedIndex = this._getIndexOfFocusableElement();\n      const closeToBottom = this.scrollHeight < this.clientHeight + this.scrollTop + 50;\n\n      this._renderMessages(items);\n      this._setTabIndexesByIndex(focusedIndex);\n\n      requestAnimationFrame(() => {\n        if (items.length > oldItems.length && closeToBottom) {\n          this._scrollToLastMessage();\n        }\n      });\n    }\n  }\n\n  /** @private */\n  _renderMessages(items) {\n    render(\n      html`\n        ${items.map(\n          (item) =>\n            html`\n              <vaadin-message\n                role=\"listitem\"\n                .time=\"${item.time}\"\n                .userAbbr=\"${item.userAbbr}\"\n                .userName=\"${item.userName}\"\n                .userImg=\"${item.userImg}\"\n                .userColorIndex=\"${item.userColorIndex}\"\n                theme=\"${ifDefined(item.theme)}\"\n                class=\"${ifDefined(item.className)}\"\n                @focusin=\"${this._onMessageFocusIn}\"\n                >${item.text}<vaadin-avatar slot=\"avatar\"></vaadin-avatar\n              ></vaadin-message>\n            `,\n        )}\n      `,\n      this,\n      { host: this },\n    );\n  }\n\n  /** @private */\n  _scrollToLastMessage() {\n    if (this.items.length > 0) {\n      this.scrollTop = this.scrollHeight - this.clientHeight;\n    }\n  }\n\n  /** @private */\n  _onMessageFocusIn(e) {\n    const target = e.composedPath().find((node) => node instanceof Message);\n    this._setTabIndexesByMessage(target);\n  }\n\n  /**\n   * @param {number} idx\n   * @protected\n   */\n  _setTabIndexesByIndex(index) {\n    const message = this._messages[index] || this._messages[0];\n    this._setTabIndexesByMessage(message);\n  }\n\n  /** @private */\n  _setTabIndexesByMessage(message) {\n    this._messages.forEach((e) => {\n      e.tabIndex = e === message ? 0 : -1;\n    });\n  }\n\n  /** @private */\n  _getIndexOfFocusableElement() {\n    const index = this._messages.findIndex((e) => e.tabIndex === 0);\n    return index !== -1 ? index : 0;\n  }\n}\n\ndefineCustomElement(MessageList);\n\nexport { MessageList };\n"],
  "mappings": "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",
  "names": ["html"]
}
