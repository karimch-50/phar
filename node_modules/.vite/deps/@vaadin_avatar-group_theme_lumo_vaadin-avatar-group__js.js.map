{
  "version": 3,
  "sources": ["../../@vaadin/avatar-group/theme/lumo/vaadin-avatar-group-styles.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-menu.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-menu-item.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-overlay.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { item } from '@vaadin/item/theme/lumo/vaadin-item-styles.js';\nimport { listBox } from '@vaadin/list-box/theme/lumo/vaadin-list-box-styles.js';\nimport { menuOverlayCore } from '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-avatar-group',\n  css`\n    :host {\n      --vaadin-avatar-size: var(--lumo-size-m);\n    }\n\n    :host([theme~='xlarge']) {\n      --vaadin-avatar-group-overlap: 12px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-xl);\n    }\n\n    :host([theme~='large']) {\n      --vaadin-avatar-group-overlap: 10px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-l);\n    }\n\n    :host([theme~='small']) {\n      --vaadin-avatar-group-overlap: 6px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='xsmall']) {\n      --vaadin-avatar-group-overlap: 4px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n  `,\n  { moduleId: 'lumo-avatar-group' },\n);\n\nconst avatarGroupOverlay = css`\n  :host {\n    --_lumo-list-box-item-selected-icon-display: none;\n    --_lumo-list-box-item-padding-left: calc(var(--lumo-space-m) + var(--lumo-border-radius-m) / 4);\n  }\n\n  [part='overlay'] {\n    outline: none;\n  }\n`;\n\nregisterStyles('vaadin-avatar-group-overlay', [overlay, menuOverlayCore, avatarGroupOverlay], {\n  moduleId: 'lumo-avatar-group-overlay',\n});\n\nregisterStyles('vaadin-avatar-group-menu', listBox, { moduleId: 'lumo-avatar-group-menu' });\n\nregisterStyles(\n  'vaadin-avatar-group-menu-item',\n  [\n    item,\n    css`\n      :host {\n        padding: var(--lumo-space-xs);\n        padding-inline-end: var(--lumo-space-m);\n      }\n\n      [part='content'] {\n        display: flex;\n        align-items: center;\n      }\n\n      [part='content'] ::slotted(vaadin-avatar) {\n        width: var(--lumo-size-xs);\n        height: var(--lumo-size-xs);\n        margin-inline-end: var(--lumo-space-s);\n      }\n    `,\n  ],\n  { moduleId: 'lumo-avatar-group-menu-item' },\n);\n", "/**\n * @license\n * Copyright (c) 2020 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ListMixin } from '@vaadin/a11y-base/src/list-mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes DirMixin\n * @mixes ListMixin\n * @mixes ThemableMixin\n * @protected\n */\nclass AvatarGroupMenu extends ListMixin(ThemableMixin(DirMixin(ControllerMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-avatar-group-menu';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='items'] {\n          height: 100%;\n          width: 100%;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n      </style>\n      <div part=\"items\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      // We don't need to define this property since super default is vertical,\n      // but we don't want it to be modified, or be shown in the API docs.\n      /** @private */\n      orientation: {\n        readOnly: true,\n      },\n    };\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   * @override\n   */\n  get _scrollerElement() {\n    return this.shadowRoot.querySelector('[part=\"items\"]');\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'menu');\n  }\n}\n\ndefineCustomElement(AvatarGroupMenu);\n\nexport { AvatarGroupMenu };\n", "/**\n * @license\n * Copyright (c) 2020 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ItemMixin } from '@vaadin/item/src/vaadin-item-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes DirMixin\n * @mixes ItemMixin\n * @mixes ThemableMixin\n * @protected\n */\nclass AvatarGroupMenuItem extends ItemMixin(ThemableMixin(DirMixin(PolymerElement))) {\n  static get is() {\n    return 'vaadin-avatar-group-menu-item';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'menuitem');\n  }\n}\n\ndefineCustomElement(AvatarGroupMenuItem);\n\nexport { AvatarGroupMenuItem };\n", "/**\n * @license\n * Copyright (c) 2020 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { OverlayMixin } from '@vaadin/overlay/src/vaadin-overlay-mixin.js';\nimport { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';\nimport { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-avatar-group-overlay', [overlayStyles], {\n  moduleId: 'vaadin-avatar-group-overlay-styles',\n});\n\n/**\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes PositionMixin\n * @mixes OverlayMixin\n * @mixes DirMixin\n * @mixes ThemableMixin\n * @private\n */\nclass AvatarGroupOverlay extends PositionMixin(OverlayMixin(DirMixin(ThemableMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-avatar-group-overlay';\n  }\n\n  static get template() {\n    return html`\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n        <div part=\"content\" id=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndefineCustomElement(AvatarGroupOverlay);\n", "/**\n * @license\n * Copyright (c) 2020 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/avatar/src/vaadin-avatar.js';\nimport './vaadin-avatar-group-menu.js';\nimport './vaadin-avatar-group-menu-item.js';\nimport './vaadin-avatar-group-overlay.js';\nimport { calculateSplices } from '@polymer/polymer/lib/utils/array-splice.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { html as legacyHtml, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { html, render } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { announce } from '@vaadin/a11y-base/src/announce.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst MINIMUM_DISPLAYED_AVATARS = 2;\n\n/**\n * `<vaadin-avatar-group>` is a Web Component providing avatar group displaying functionality.\n *\n * To create the avatar group, first add the component to the page:\n *\n * ```\n * <vaadin-avatar-group></vaadin-avatar-group>\n * ```\n *\n * And then use [`items`](#/elements/vaadin-avatar-group#property-items) property to initialize the structure:\n *\n * ```\n * document.querySelector('vaadin-avatar-group').items = [\n *   {name: 'John Doe'},\n *   {abbr: 'AB'}\n * ];\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name   | Description\n * ----------- | ---------------\n * `container` | The container element\n *\n * See the [`<vaadin-avatar>`](#/elements/vaadin-avatar) documentation for the available\n * state attributes and stylable shadow parts of avatar elements.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * ### Internal components\n *\n * In addition to `<vaadin-avatar-group>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-avatar-group-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\n * - `<vaadin-avatar-group-menu>` - has the same API as [`<vaadin-list-box>`](#/elements/vaadin-list-box).\n * - `<vaadin-avatar-group-menu-item>` - has the same API as [`<vaadin-item>`](#/elements/vaadin-item).\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes ElementMixin\n * @mixes OverlayClassMixin\n * @mixes ThemableMixin\n * @mixes ResizeMixin\n */\nclass AvatarGroup extends ResizeMixin(OverlayClassMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement))))) {\n  static get template() {\n    return legacyHtml`\n      <style>\n        :host {\n          display: block;\n          width: 100%; /* prevent collapsing inside non-stretching column flex */\n          --vaadin-avatar-group-overlap: 8px;\n          --vaadin-avatar-group-overlap-border: 2px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='container'] {\n          display: flex;\n          position: relative;\n          width: 100%;\n          flex-wrap: nowrap;\n        }\n\n        ::slotted(vaadin-avatar:not(:first-child)) {\n          -webkit-mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          -webkit-mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n          mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n        }\n\n        ::slotted(vaadin-avatar:not([dir='rtl']):not(:first-child)) {\n          margin-left: calc(var(--vaadin-avatar-group-overlap) * -1 - var(--vaadin-avatar-outline-width));\n          -webkit-mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n          mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n        }\n\n        ::slotted(vaadin-avatar[dir='rtl']:not(:first-child)) {\n          margin-right: calc(var(--vaadin-avatar-group-overlap) * -1);\n          -webkit-mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n          mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n        }\n      </style>\n      <div id=\"container\" part=\"container\">\n        <slot></slot>\n        <slot name=\"overflow\"></slot>\n      </div>\n      <vaadin-avatar-group-overlay\n        id=\"overlay\"\n        opened=\"{{_opened}}\"\n        position-target=\"[[_overflow]]\"\n        no-vertical-overlap\n        on-vaadin-overlay-close=\"_onVaadinOverlayClose\"\n      ></vaadin-avatar-group-overlay>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-avatar-group';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * An array containing the items which will be stamped as avatars.\n       *\n       * The items objects allow to configure [`name`](#/elements/vaadin-avatar#property-name),\n       * [`abbr`](#/elements/vaadin-avatar#property-abbr), [`img`](#/elements/vaadin-avatar#property-img)\n       * and [`colorIndex`](#/elements/vaadin-avatar#property-colorIndex) properties on the\n       * stamped avatars, and set `className` to provide CSS class names.\n       *\n       * #### Example\n       *\n       * ```js\n       * group.items = [\n       *   {\n       *     name: 'User name',\n       *     img: 'url-to-image.png',\n       *     className: 'even'\n       *   },\n       *   {\n       *     abbr: 'JD',\n       *     colorIndex: 1,\n       *     className: 'odd'\n       *   },\n       * ];\n       * ```\n       *\n       * @type {!Array<!AvatarGroupItem> | undefined}\n       */\n      items: {\n        type: Array,\n      },\n\n      /**\n       * The maximum number of avatars to display. By default, all the avatars are displayed.\n       * When _maxItemsVisible_ is set, the overflowing avatars are grouped into one avatar with\n       * a dropdown. Setting 0 or 1 has no effect so there are always at least two avatars visible.\n       * @attr {number} max-items-visible\n       */\n      maxItemsVisible: {\n        type: Number,\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure and default values:\n       * ```\n       * {\n       *   // Translation of the anonymous user avatar tooltip.\n       *   anonymous: 'anonymous',\n       *   // Translation of the avatar group accessible label.\n       *   // {count} is replaced with the actual count of users.\n       *   activeUsers: {\n       *     one: 'Currently one active user',\n       *     many: 'Currently {count} active users'\n       *   },\n       *   // Screen reader announcement when user joins group.\n       *   // {user} is replaced with the name or abbreviation.\n       *   // When neither is set, \"anonymous\" is used instead.\n       *   joined: '{user} joined',\n       *   // Screen reader announcement when user leaves group.\n       *   // {user} is replaced with the name or abbreviation.\n       *   // When neither is set, \"anonymous\" is used instead.\n       *   left: '{user} left'\n       * }\n       * ```\n       * @type {!AvatarGroupI18n}\n       * @default {English/US}\n       */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            anonymous: 'anonymous',\n            activeUsers: {\n              one: 'Currently one active user',\n              many: 'Currently {count} active users',\n            },\n            joined: '{user} joined',\n            left: '{user} left',\n          };\n        },\n      },\n\n      /** @private */\n      _avatars: {\n        type: Array,\n        value: () => [],\n      },\n\n      /** @private */\n      __maxReached: {\n        type: Boolean,\n        computed: '__computeMaxReached(items.length, maxItemsVisible)',\n      },\n\n      /** @private */\n      __items: {\n        type: Array,\n      },\n\n      /** @private */\n      __itemsInView: {\n        type: Number,\n        value: null,\n      },\n\n      /** @private */\n      _overflow: {\n        type: Object,\n      },\n\n      /** @private */\n      _overflowItems: {\n        type: Array,\n        observer: '__overflowItemsChanged',\n        computed: '__computeOverflowItems(items.*, __itemsInView, maxItemsVisible)',\n      },\n\n      /** @private */\n      _overflowTooltip: {\n        type: Object,\n      },\n\n      /** @private */\n      _opened: {\n        type: Boolean,\n        observer: '__openedChanged',\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      '__itemsChanged(items.splices, items.*)',\n      '__i18nItemsChanged(i18n.*, items.length)',\n      '__updateAvatarsTheme(_overflow, _avatars, _theme)',\n      '__updateAvatars(items.*, __itemsInView, maxItemsVisible, _overflow, i18n)',\n      '__updateOverflowAbbr(_overflow, items.length, __itemsInView, maxItemsVisible)',\n      '__updateOverflowHidden(_overflow, items.length, __itemsInView, __maxReached)',\n      '__updateOverflowTooltip(_overflowTooltip, items.length, __itemsInView, maxItemsVisible)',\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._overflowController = new SlotController(this, 'overflow', 'vaadin-avatar', {\n      initializer: (overflow) => {\n        overflow.setAttribute('aria-haspopup', 'menu');\n        overflow.setAttribute('aria-expanded', 'false');\n        overflow.addEventListener('click', (e) => this._onOverflowClick(e));\n        overflow.addEventListener('keydown', (e) => this._onOverflowKeyDown(e));\n\n        const tooltip = document.createElement('vaadin-tooltip');\n        tooltip.setAttribute('slot', 'tooltip');\n        overflow.appendChild(tooltip);\n\n        this._overflow = overflow;\n        this._overflowTooltip = tooltip;\n      },\n    });\n    this.addController(this._overflowController);\n\n    const overlay = this.$.overlay;\n    overlay.renderer = this.__overlayRenderer.bind(this);\n    this._overlayElement = overlay;\n\n    afterNextRender(this, () => {\n      this.__setItemsInView();\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._opened = false;\n  }\n\n  /** @private */\n  __getMessage(user, action) {\n    return action.replace('{user}', user.name || user.abbr || this.i18n.anonymous);\n  }\n\n  /**\n   * Renders items when they are provided by the `items` property and clears the content otherwise.\n   * @param {!HTMLElement} root\n   * @param {!Select} _select\n   * @private\n   */\n  __overlayRenderer(root) {\n    let menu = root.firstElementChild;\n    if (!menu) {\n      menu = document.createElement('vaadin-avatar-group-menu');\n      menu.addEventListener('keydown', (event) => this._onListKeyDown(event));\n      root.appendChild(menu);\n    }\n\n    menu.textContent = '';\n\n    if (!this._overflowItems) {\n      return;\n    }\n\n    this._overflowItems.forEach((item) => {\n      menu.appendChild(this.__createItemElement(item));\n    });\n  }\n\n  /** @private */\n  __createItemElement(item) {\n    const itemElement = document.createElement('vaadin-avatar-group-menu-item');\n\n    const avatar = document.createElement('vaadin-avatar');\n    itemElement.appendChild(avatar);\n\n    avatar.setAttribute('aria-hidden', 'true');\n    avatar.setAttribute('tabindex', '-1');\n    avatar.i18n = this.i18n;\n\n    if (this._theme) {\n      avatar.setAttribute('theme', this._theme);\n    }\n\n    avatar.name = item.name;\n    avatar.abbr = item.abbr;\n    avatar.img = item.img;\n    avatar.colorIndex = item.colorIndex;\n    if (item.className) {\n      avatar.className = item.className;\n    }\n\n    if (item.name) {\n      const text = document.createTextNode(item.name);\n      itemElement.appendChild(text);\n    }\n\n    return itemElement;\n  }\n\n  /** @private */\n  _onOverflowClick(e) {\n    e.stopPropagation();\n    if (this._opened) {\n      this.$.overlay.close();\n    } else if (!e.defaultPrevented) {\n      this._opened = true;\n    }\n  }\n\n  /** @private */\n  _onOverflowKeyDown(e) {\n    if (!this._opened) {\n      if (/^(Enter|SpaceBar|\\s)$/u.test(e.key)) {\n        e.preventDefault();\n        this._opened = true;\n      }\n    }\n  }\n\n  /** @private */\n  _onListKeyDown(event) {\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      this._opened = false;\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _onResize() {\n    this.__setItemsInView();\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(e) {\n    if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().includes(this)) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  __renderAvatars(items) {\n    render(\n      html`\n        ${items.map(\n          (item) =>\n            html`\n              <vaadin-avatar\n                .name=\"${item.name}\"\n                .abbr=\"${item.abbr}\"\n                .img=\"${item.img}\"\n                .colorIndex=\"${item.colorIndex}\"\n                .i18n=\"${this.i18n}\"\n                class=\"${ifDefined(item.className)}\"\n                with-tooltip\n              ></vaadin-avatar>\n            `,\n        )}\n      `,\n      this,\n      { renderBefore: this._overflow },\n    );\n  }\n\n  /** @private */\n  __updateAvatars(arr, itemsInView, maxItemsVisible, overflow) {\n    if (!overflow) {\n      return;\n    }\n\n    const items = arr.base || [];\n    const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\n\n    this.__renderAvatars(limit ? items.slice(0, limit) : items);\n\n    this._avatars = [...this.querySelectorAll('vaadin-avatar')];\n  }\n\n  /** @private */\n  __computeOverflowItems(arr, itemsInView, maxItemsVisible) {\n    const items = arr.base || [];\n    const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\n    return limit ? items.slice(limit) : [];\n  }\n\n  /** @private */\n  __computeMaxReached(items, maxItemsVisible) {\n    return maxItemsVisible != null && items > this.__getMax(maxItemsVisible);\n  }\n\n  /** @private */\n  __updateOverflowAbbr(overflow, items, itemsInView, maxItemsVisible) {\n    if (overflow) {\n      overflow.abbr = `+${items - this.__getLimit(items, itemsInView, maxItemsVisible)}`;\n    }\n  }\n\n  /** @private */\n  __updateOverflowHidden(overflow, items, itemsInView, maxReached) {\n    if (overflow) {\n      overflow.toggleAttribute('hidden', !maxReached && !(itemsInView && itemsInView < items));\n    }\n  }\n\n  /** @private */\n  __updateAvatarsTheme(overflow, avatars, theme) {\n    if (overflow) {\n      [overflow, ...avatars].forEach((avatar) => {\n        if (theme) {\n          avatar.setAttribute('theme', theme);\n        } else {\n          avatar.removeAttribute('theme');\n        }\n      });\n    }\n  }\n\n  /** @private */\n  __updateOverflowTooltip(tooltip, items, itemsInView, maxItemsVisible) {\n    if (!tooltip) {\n      return;\n    }\n\n    const limit = this.__getLimit(items, itemsInView, maxItemsVisible);\n    if (limit == null) {\n      return;\n    }\n\n    const result = [];\n    for (let i = limit; i < items; i++) {\n      const item = this.items[i];\n      if (item) {\n        result.push(item.name || item.abbr || 'anonymous');\n      }\n    }\n\n    tooltip.text = result.join('\\n');\n  }\n\n  /** @private */\n  __getLimit(items, itemsInView, maxItemsVisible) {\n    let limit = null;\n    // Handle max set to 0 or 1\n    const adjustedMax = this.__getMax(maxItemsVisible);\n    if (maxItemsVisible != null && adjustedMax < items) {\n      limit = adjustedMax - 1;\n    } else if (itemsInView && itemsInView < items) {\n      limit = itemsInView;\n    }\n\n    return Math.min(limit, this.__calculateAvatarsFitWidth());\n  }\n\n  /** @private */\n  __getMax(maxItemsVisible) {\n    return Math.max(maxItemsVisible, MINIMUM_DISPLAYED_AVATARS);\n  }\n\n  /** @private */\n  __itemsChanged(splices, itemsChange) {\n    const items = itemsChange.base;\n    this.__setItemsInView();\n\n    // Mutation using group.splice('items')\n    if (splices && Array.isArray(splices.indexSplices)) {\n      splices.indexSplices.forEach((mutation) => {\n        this.__announceItemsChange(items, mutation);\n      });\n    } else if (Array.isArray(items) && Array.isArray(this.__oldItems)) {\n      // Mutation using group.set('items')\n      const diff = calculateSplices(items, this.__oldItems);\n      diff.forEach((mutation) => {\n        this.__announceItemsChange(items, mutation);\n      });\n    }\n\n    this.__oldItems = items;\n  }\n\n  /** @private */\n  __announceItemsChange(items, mutation) {\n    const { addedCount, index, removed } = mutation;\n    let addedMsg = [];\n    let removedMsg = [];\n    if (addedCount) {\n      addedMsg = items\n        .slice(index, index + addedCount)\n        .map((user) => this.__getMessage(user, this.i18n.joined || '{user} joined'));\n    }\n\n    if (removed) {\n      removedMsg = removed.map((user) => this.__getMessage(user, this.i18n.left || '{user} left'));\n    }\n\n    const messages = removedMsg.concat(addedMsg);\n    if (messages.length > 0) {\n      announce(messages.join(', '));\n    }\n  }\n\n  /** @private */\n  __i18nItemsChanged(i18n, items) {\n    const { base } = i18n;\n    if (base && base.activeUsers) {\n      const field = items === 1 ? 'one' : 'many';\n      if (base.activeUsers[field]) {\n        this.setAttribute('aria-label', base.activeUsers[field].replace('{count}', items || 0));\n      }\n\n      this._avatars.forEach((avatar) => {\n        avatar.i18n = base;\n      });\n    }\n  }\n\n  /** @private */\n  __openedChanged(opened, wasOpened) {\n    if (opened) {\n      if (!this._menuElement) {\n        this._menuElement = this.$.overlay.querySelector('vaadin-avatar-group-menu');\n      }\n\n      this._openedWithFocusRing = this._overflow.hasAttribute('focus-ring');\n\n      this._menuElement.focus();\n    } else if (wasOpened) {\n      this._overflow.focus();\n      if (this._openedWithFocusRing) {\n        this._overflow.setAttribute('focus-ring', '');\n      }\n    }\n    this._overflow.setAttribute('aria-expanded', opened === true);\n  }\n\n  /** @private */\n  __overflowItemsChanged(items, oldItems) {\n    if (items || oldItems) {\n      this.$.overlay.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __setItemsInView() {\n    const avatars = this._avatars;\n    const items = this.items;\n\n    // Always show at least two avatars\n    if (!items || !avatars || avatars.length < 3) {\n      return;\n    }\n\n    let result = this.__calculateAvatarsFitWidth();\n\n    // Only show overlay if two or more avatars don't fit\n    if (result === items.length - 1) {\n      result = items.length;\n    }\n\n    // Close overlay if all avatars become visible\n    if (result >= items.length && this._opened) {\n      this.$.overlay.close();\n      // FIXME: hack to avoid jump before closing\n      this.$.overlay._flushAnimation('closing');\n    }\n\n    // Reserve space for overflow avatar\n    this.__itemsInView = result;\n  }\n\n  /** @private */\n  __calculateAvatarsFitWidth() {\n    if (!this.shadowRoot || this._avatars.length < MINIMUM_DISPLAYED_AVATARS) {\n      return MINIMUM_DISPLAYED_AVATARS;\n    }\n\n    const avatars = this._avatars;\n\n    // Assume all the avatars have the same width\n    const avatarWidth = avatars[0].clientWidth;\n\n    // Take negative margin into account\n    const { marginLeft, marginRight } = getComputedStyle(avatars[1]);\n\n    const offset = this.__isRTL\n      ? parseInt(marginRight, 0) - parseInt(marginLeft, 0)\n      : parseInt(marginLeft, 0) - parseInt(marginRight, 0);\n\n    return Math.floor((this.$.container.offsetWidth - avatarWidth) / (avatarWidth + offset));\n  }\n}\n\ndefineCustomElement(AvatarGroup);\n\nexport { AvatarGroup };\n"],
  "mappings": "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",
  "names": ["overlay", "item", "html"]
}
