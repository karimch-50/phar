{
  "version": 3,
  "sources": ["../../@vaadin/upload/theme/lumo/vaadin-upload-styles.js", "../../@vaadin/upload/src/vaadin-upload-icon.js", "../../@vaadin/upload/src/vaadin-upload-icons.js", "../../@vaadin/upload/src/vaadin-upload-file-mixin.js", "../../@vaadin/upload/src/vaadin-upload-file-styles.js", "../../@vaadin/upload/src/vaadin-upload-file.js", "../../@vaadin/upload/src/vaadin-upload-file-list-mixin.js", "../../@vaadin/upload/src/vaadin-upload-file-list.js", "../../@vaadin/upload/src/vaadin-upload-mixin.js", "../../@vaadin/upload/src/vaadin-upload.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/button/theme/lumo/vaadin-button.js';\nimport '@vaadin/progress-bar/theme/lumo/vaadin-progress-bar.js';\nimport { fieldButton } from '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-upload',\n  css`\n    :host {\n      line-height: var(--lumo-line-height-m);\n    }\n\n    :host(:not([nodrop])) {\n      overflow: hidden;\n      border: 1px dashed var(--lumo-contrast-20pct);\n      border-radius: var(--lumo-border-radius-l);\n      padding: var(--lumo-space-m);\n      transition: background-color 0.6s, border-color 0.6s;\n    }\n\n    [part='drop-label'] {\n      display: inline-block;\n      white-space: normal;\n      padding: 0 var(--lumo-space-s);\n      color: var(--lumo-secondary-text-color);\n      font-family: var(--lumo-font-family);\n    }\n\n    :host([dragover-valid]) {\n      border-color: var(--lumo-primary-color-50pct);\n      background: var(--lumo-primary-color-10pct);\n      transition: background-color 0.1s, border-color 0.1s;\n    }\n\n    :host([dragover-valid]) [part='drop-label'] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    :host([max-files-reached]) [part='drop-label'] {\n      color: var(--lumo-disabled-text-color);\n    }\n  `,\n  { moduleId: 'lumo-upload' },\n);\n\nregisterStyles(\n  'vaadin-upload-icon',\n  css`\n    :host::before {\n      content: var(--lumo-icons-upload);\n      font-family: lumo-icons;\n      font-size: var(--lumo-icon-size-m);\n      line-height: 1;\n      vertical-align: -0.25em;\n    }\n  `,\n  { moduleId: 'lumo-upload-icon' },\n);\n\nregisterStyles(\n  'vaadin-upload-file-list',\n  css`\n    ::slotted(li:not(:first-of-type)) {\n      border-top: 1px solid var(--lumo-contrast-10pct);\n    }\n  `,\n  { moduleId: 'lumo-upload-file-list' },\n);\n\nconst uploadFile = css`\n  :host {\n    padding: var(--lumo-space-s) 0;\n    outline: none;\n    --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\n    --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\n  }\n\n  :host([focus-ring]) [part='row'] {\n    border-radius: var(--lumo-border-radius-s);\n    box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\n  }\n\n  [part='row'] {\n    display: flex;\n    align-items: baseline;\n    justify-content: space-between;\n  }\n\n  [part='status'],\n  [part='error'] {\n    color: var(--lumo-secondary-text-color);\n    font-size: var(--lumo-font-size-s);\n  }\n\n  [part='info'] {\n    display: flex;\n    align-items: baseline;\n    flex: auto;\n  }\n\n  [part='meta'] {\n    width: 0.001px;\n    flex: 1 1 auto;\n  }\n\n  [part='name'] {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  [part='commands'] {\n    display: flex;\n    align-items: baseline;\n    flex: none;\n  }\n\n  [part$='icon'] {\n    margin-right: var(--lumo-space-xs);\n    font-size: var(--lumo-icon-size-m);\n    font-family: 'lumo-icons';\n    line-height: 1;\n  }\n\n  /* When both icons are hidden, let us keep space for one */\n  [part='done-icon'][hidden] + [part='warning-icon'][hidden] {\n    display: block !important;\n    visibility: hidden;\n  }\n\n  [part$='button'] {\n    flex: none;\n    margin-left: var(--lumo-space-xs);\n    cursor: var(--lumo-clickable-cursor);\n  }\n\n  [part$='button']:focus {\n    outline: none;\n    border-radius: var(--lumo-border-radius-s);\n    box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\n  }\n\n  [part$='icon']::before,\n  [part$='button']::before {\n    vertical-align: -0.25em;\n  }\n\n  [part='done-icon']::before {\n    content: var(--lumo-icons-checkmark);\n    color: var(--lumo-primary-text-color);\n  }\n\n  [part='warning-icon']::before {\n    content: var(--lumo-icons-error);\n    color: var(--lumo-error-text-color);\n  }\n\n  [part='start-button']::before {\n    content: var(--lumo-icons-play);\n  }\n\n  [part='retry-button']::before {\n    content: var(--lumo-icons-reload);\n  }\n\n  [part='remove-button']::before {\n    content: var(--lumo-icons-cross);\n  }\n\n  [part='error'] {\n    color: var(--lumo-error-text-color);\n  }\n\n  ::slotted([slot='progress']) {\n    width: auto;\n    margin-left: calc(var(--lumo-icon-size-m) + var(--lumo-space-xs));\n    margin-right: calc(var(--lumo-icon-size-m) + var(--lumo-space-xs));\n  }\n`;\n\nregisterStyles('vaadin-upload-file', [fieldButton, uploadFile], { moduleId: 'lumo-upload-file' });\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * An element used internally by `<vaadin-upload>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @private\n */\nclass UploadIcon extends ThemableMixin(PolymerElement) {\n  static get is() {\n    return 'vaadin-upload-icon';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n    `;\n  }\n}\n\ndefineCustomElement(UploadIcon);\n\nexport { UploadIcon };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'vaadin-upload-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild(template.content);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * @polymerMixin\n * @mixes FocusMixin\n */\nexport const UploadFileMixin = (superClass) =>\n  class UploadFileMixin extends FocusMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * True if uploading is completed, false otherwise.\n         */\n        complete: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Error message returned by the server, if any.\n         */\n        errorMessage: {\n          type: String,\n          value: '',\n          observer: '_errorMessageChanged',\n        },\n\n        /**\n         * The object representing a file.\n         */\n        file: {\n          type: Object,\n        },\n\n        /**\n         * Name of the uploading file.\n         */\n        fileName: {\n          type: String,\n        },\n\n        /**\n         * True if uploading is not started, false otherwise.\n         */\n        held: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * True if remaining time is unknown, false otherwise.\n         */\n        indeterminate: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * The object used to localize this component.\n         */\n        i18n: {\n          type: Object,\n        },\n\n        /**\n         * Number representing the uploading progress.\n         */\n        progress: {\n          type: Number,\n        },\n\n        /**\n         * Uploading status.\n         */\n        status: {\n          type: String,\n        },\n\n        /**\n         * Indicates whether the element can be focused and where it participates in sequential keyboard navigation.\n         * @protected\n         */\n        tabindex: {\n          type: Number,\n          value: 0,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * True if uploading is in progress, false otherwise.\n         */\n        uploading: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /** @private */\n        _progress: {\n          type: Object,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['__updateProgress(_progress, progress, indeterminate)'];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(\n        new SlotController(this, 'progress', 'vaadin-progress-bar', {\n          initializer: (progress) => {\n            this._progress = progress;\n          },\n        }),\n      );\n\n      // Handle moving focus to the button on Tab.\n      this.shadowRoot.addEventListener('focusin', (e) => {\n        const target = e.composedPath()[0];\n\n        if (target.getAttribute('part').endsWith('button')) {\n          this._setFocused(false);\n        }\n      });\n\n      // Handle moving focus from the button on Shift Tab.\n      this.shadowRoot.addEventListener('focusout', (e) => {\n        if (e.relatedTarget === this) {\n          this._setFocused(true);\n        }\n      });\n    }\n\n    /**\n     * Override method inherited from `FocusMixin` to mark the file as focused\n     * only when the host is focused.\n     * @param {Event} event\n     * @return {boolean}\n     * @protected\n     */\n    _shouldSetFocus(event) {\n      return event.composedPath()[0] === this;\n    }\n\n    /** @private */\n    _errorMessageChanged(errorMessage) {\n      this.toggleAttribute('error', Boolean(errorMessage));\n    }\n\n    /** @private */\n    __updateProgress(progress, value, indeterminate) {\n      if (progress) {\n        progress.value = isNaN(value) ? 0 : value / 100;\n        progress.indeterminate = indeterminate;\n      }\n    }\n\n    /** @private */\n    _fireFileEvent(e) {\n      e.preventDefault();\n      return this.dispatchEvent(\n        new CustomEvent(e.target.getAttribute('file-event'), {\n          detail: { file: this.file },\n          bubbles: true,\n          composed: true,\n        }),\n      );\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const uploadFileStyles = css`\n  :host {\n    display: block;\n  }\n\n  [hidden] {\n    display: none;\n  }\n\n  [part='row'] {\n    list-style-type: none;\n  }\n\n  button {\n    background: transparent;\n    padding: 0;\n    border: none;\n    box-shadow: none;\n  }\n\n  :host([complete]) ::slotted([slot='progress']),\n  :host([error]) ::slotted([slot='progress']) {\n    display: none !important;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/progress-bar/src/vaadin-progress-bar.js';\nimport './vaadin-upload-icons.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { UploadFileMixin } from './vaadin-upload-file-mixin.js';\nimport { uploadFileStyles } from './vaadin-upload-file-styles.js';\n\nregisterStyles('vaadin-upload-file', uploadFileStyles, { moduleId: 'vaadin-upload-file-styles' });\n\n/**\n * `<vaadin-upload-file>` element represents a file in the file list of `<vaadin-upload>`.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name        | Description\n * -----------------|-------------\n * `row`            | File container\n * `info`           | Container for file status icon, file name, status and error messages\n * `done-icon`      | File done status icon\n * `warning-icon`   | File warning status icon\n * `meta`           | Container for file name, status and error messages\n * `name`           | File name\n * `error`          | Error message, shown when error happens\n * `status`         | Status message\n * `commands`       | Container for file command buttons\n * `start-button`   | Start file upload button\n * `retry-button`   | Retry file upload button\n * `remove-button`  | Remove file button\n *\n * The following state attributes are available for styling:\n *\n * Attribute        | Description\n * -----------------|-------------\n * `focus-ring`     | Set when the element is focused using the keyboard.\n * `focused`        | Set when the element is focused.\n * `error`          | An error has happened during uploading.\n * `indeterminate`  | Uploading is in progress, but the progress value is unknown.\n * `uploading`      | Uploading is in progress.\n * `complete`       | Uploading has finished successfully.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes UploadFileMixin\n * @mixes ThemableMixin\n */\nclass UploadFile extends UploadFileMixin(ThemableMixin(ControllerMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <div part=\"row\">\n        <div part=\"info\">\n          <div part=\"done-icon\" hidden$=\"[[!complete]]\" aria-hidden=\"true\"></div>\n          <div part=\"warning-icon\" hidden$=\"[[!errorMessage]]\" aria-hidden=\"true\"></div>\n\n          <div part=\"meta\">\n            <div part=\"name\" id=\"name\">[[fileName]]</div>\n            <div part=\"status\" hidden$=\"[[!status]]\" id=\"status\">[[status]]</div>\n            <div part=\"error\" id=\"error\" hidden$=\"[[!errorMessage]]\">[[errorMessage]]</div>\n          </div>\n        </div>\n        <div part=\"commands\">\n          <button\n            type=\"button\"\n            part=\"start-button\"\n            file-event=\"file-start\"\n            on-click=\"_fireFileEvent\"\n            hidden$=\"[[!held]]\"\n            aria-label$=\"[[i18n.file.start]]\"\n            aria-describedby=\"name\"\n          ></button>\n          <button\n            type=\"button\"\n            part=\"retry-button\"\n            file-event=\"file-retry\"\n            on-click=\"_fireFileEvent\"\n            hidden$=\"[[!errorMessage]]\"\n            aria-label$=\"[[i18n.file.retry]]\"\n            aria-describedby=\"name\"\n          ></button>\n          <button\n            type=\"button\"\n            part=\"remove-button\"\n            file-event=\"file-abort\"\n            on-click=\"_fireFileEvent\"\n            aria-label$=\"[[i18n.file.remove]]\"\n            aria-describedby=\"name\"\n          ></button>\n        </div>\n      </div>\n\n      <slot name=\"progress\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-upload-file';\n  }\n\n  /**\n   * Fired when the retry button is pressed. It is listened by `vaadin-upload`\n   * which will start a new upload process of this file.\n   *\n   * @event file-retry\n   * @param {Object} detail\n   * @param {Object} detail.file file to retry upload of\n   */\n\n  /**\n   * Fired when the start button is pressed. It is listened by `vaadin-upload`\n   * which will start a new upload process of this file.\n   *\n   * @event file-start\n   * @param {Object} detail\n   * @param {Object} detail.file file to start upload of\n   */\n\n  /**\n   * Fired when abort button is pressed. It is listened by `vaadin-upload` which\n   * will abort the upload in progress, and then remove the file from the list.\n   *\n   * @event file-abort\n   * @param {Object} detail\n   * @param {Object} detail.file file to abort upload of\n   */\n}\n\ndefineCustomElement(UploadFile);\n\nexport { UploadFile };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, render } from 'lit';\n\n/**\n * @polymerMixin\n */\nexport const UploadFileListMixin = (superClass) =>\n  class UploadFileListMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The array of files being processed, or already uploaded.\n         */\n        items: {\n          type: Array,\n        },\n\n        /**\n         * The object used to localize upload files.\n         */\n        i18n: {\n          type: Object,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['__updateItems(items, i18n)'];\n    }\n\n    /** @private */\n    __updateItems(items, i18n) {\n      if (items && i18n) {\n        this.requestContentUpdate();\n      }\n    }\n\n    /**\n     * Requests an update for the `vaadin-upload-file` elements.\n     *\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n     */\n    requestContentUpdate() {\n      const { items, i18n } = this;\n\n      render(\n        html`\n          ${items.map(\n            (file) => html`\n              <li>\n                <vaadin-upload-file\n                  .file=\"${file}\"\n                  .complete=\"${file.complete}\"\n                  .errorMessage=\"${file.error}\"\n                  .fileName=\"${file.name}\"\n                  .held=\"${file.held}\"\n                  .indeterminate=\"${file.indeterminate}\"\n                  .progress=\"${file.progress}\"\n                  .status=\"${file.status}\"\n                  .uploading=\"${file.uploading}\"\n                  .i18n=\"${i18n}\"\n                ></vaadin-upload-file>\n              </li>\n            `,\n          )}\n        `,\n        this,\n      );\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-upload-file.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { UploadFileListMixin } from './vaadin-upload-file-list-mixin.js';\n\n/**\n * An element used internally by `<vaadin-upload>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes UploadFileListMixin\n * @private\n */\nclass UploadFileList extends UploadFileListMixin(ThemableMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-upload-file-list';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='list'] {\n          padding: 0;\n          margin: 0;\n          list-style-type: none;\n        }\n      </style>\n      <ul part=\"list\">\n        <slot></slot>\n      </ul>\n    `;\n  }\n}\n\ndefineCustomElement(UploadFileList);\n\nexport { UploadFileList };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { announce } from '@vaadin/a11y-base/src/announce.js';\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\nclass AddButtonController extends SlotController {\n  constructor(host) {\n    super(host, 'add-button', 'vaadin-button');\n  }\n\n  /**\n   * Override method inherited from `SlotController`\n   * to add listeners to default and custom node.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initNode(node) {\n    // Needed by Flow counterpart to apply i18n to custom button\n    if (node._isDefault) {\n      this.defaultNode = node;\n    }\n\n    node.addEventListener('touchend', (e) => {\n      this.host._onAddFilesTouchEnd(e);\n    });\n\n    node.addEventListener('click', (e) => {\n      this.host._onAddFilesClick(e);\n    });\n\n    this.host._addButton = node;\n  }\n}\n\nclass DropLabelController extends SlotController {\n  constructor(host) {\n    super(host, 'drop-label', 'span');\n  }\n\n  /**\n   * Override method inherited from `SlotController`\n   * to add listeners to default and custom node.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initNode(node) {\n    // Needed by Flow counterpart to apply i18n to custom label\n    if (node._isDefault) {\n      this.defaultNode = node;\n    }\n    this.host._dropLabel = node;\n  }\n}\n\n/**\n * @polymerMixin\n */\nexport const UploadMixin = (superClass) =>\n  class UploadMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Define whether the element supports dropping files on it for uploading.\n         * By default it's enabled in desktop and disabled in touch devices\n         * because mobile devices do not support drag events in general. Setting\n         * it false means that drop is enabled even in touch-devices, and true\n         * disables drop in all devices.\n         *\n         * @type {boolean}\n         * @default true in touch-devices, false otherwise.\n         */\n        nodrop: {\n          type: Boolean,\n          reflectToAttribute: true,\n          value: isTouch,\n        },\n\n        /**\n         * The server URL. The default value is an empty string, which means that\n         * _window.location_ will be used.\n         * @type {string}\n         */\n        target: {\n          type: String,\n          value: '',\n        },\n\n        /**\n         * HTTP Method used to send the files. Only POST and PUT are allowed.\n         * @type {!UploadMethod}\n         */\n        method: {\n          type: String,\n          value: 'POST',\n        },\n\n        /**\n         * Key-Value map to send to the server. If you set this property as an\n         * attribute, use a valid JSON string, for example:\n         * ```\n         * <vaadin-upload headers='{\"X-Foo\": \"Bar\"}'></vaadin-upload>\n         * ```\n         * @type {object | string}\n         */\n        headers: {\n          type: Object,\n          value: {},\n        },\n\n        /**\n         * Max time in milliseconds for the entire upload process, if exceeded the\n         * request will be aborted. Zero means that there is no timeout.\n         * @type {number}\n         */\n        timeout: {\n          type: Number,\n          value: 0,\n        },\n\n        /** @private */\n        _dragover: {\n          type: Boolean,\n          value: false,\n          observer: '_dragoverChanged',\n        },\n\n        /**\n         * The array of files being processed, or already uploaded.\n         *\n         * Each element is a [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File)\n         * object with a number of extra properties  to track the upload process:\n         * - `uploadTarget`: The target URL used to upload this file.\n         * - `elapsed`: Elapsed time since the upload started.\n         * - `elapsedStr`: Human-readable elapsed time.\n         * - `remaining`: Number of seconds remaining for the upload to finish.\n         * - `remainingStr`: Human-readable remaining time for the upload to finish.\n         * - `progress`: Percentage of the file already uploaded.\n         * - `speed`: Upload speed in kB/s.\n         * - `size`: File size in bytes.\n         * - `totalStr`: Human-readable total size of the file.\n         * - `loaded`: Bytes transferred so far.\n         * - `loadedStr`: Human-readable uploaded size at the moment.\n         * - `status`: Status of the upload process.\n         * - `error`: Error message in case the upload failed.\n         * - `abort`: True if the file was canceled by the user.\n         * - `complete`: True when the file was transferred to the server.\n         * - `uploading`: True while transferring data to the server.\n         * @type {!Array<!UploadFile>}\n         */\n        files: {\n          type: Array,\n          notify: true,\n          value: () => [],\n          sync: true,\n        },\n\n        /**\n         * Limit of files to upload, by default it is unlimited. If the value is\n         * set to one, native file browser will prevent selecting multiple files.\n         * @attr {number} max-files\n         * @type {number}\n         */\n        maxFiles: {\n          type: Number,\n          value: Infinity,\n          sync: true,\n        },\n\n        /**\n         * Specifies if the maximum number of files have been uploaded\n         * @attr {boolean} max-files-reached\n         * @type {boolean}\n         */\n        maxFilesReached: {\n          type: Boolean,\n          value: false,\n          notify: true,\n          readOnly: true,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Specifies the types of files that the server accepts.\n         * Syntax: a comma-separated list of MIME type patterns (wildcards are\n         * allowed) or file extensions.\n         * Notice that MIME types are widely supported, while file extensions\n         * are only implemented in certain browsers, so avoid using it.\n         * Example: accept=\"video/*,image/tiff\" or accept=\".pdf,audio/mp3\"\n         * @type {string}\n         */\n        accept: {\n          type: String,\n          value: '',\n        },\n\n        /**\n         * Specifies the maximum file size in bytes allowed to upload.\n         * Notice that it is a client-side constraint, which will be checked before\n         * sending the request. Obviously you need to do the same validation in\n         * the server-side and be sure that they are aligned.\n         * @attr {number} max-file-size\n         * @type {number}\n         */\n        maxFileSize: {\n          type: Number,\n          value: Infinity,\n        },\n\n        /**\n         * Specifies if the dragover is validated with maxFiles and\n         * accept properties.\n         * @private\n         */\n        _dragoverValid: {\n          type: Boolean,\n          value: false,\n          observer: '_dragoverValidChanged',\n        },\n\n        /**\n         * Specifies the 'name' property at Content-Disposition\n         * @attr {string} form-data-name\n         * @type {string}\n         */\n        formDataName: {\n          type: String,\n          value: 'file',\n        },\n\n        /**\n         * Prevents upload(s) from immediately uploading upon adding file(s).\n         * When set, you must manually trigger uploads using the `uploadFiles` method\n         * @attr {boolean} no-auto\n         * @type {boolean}\n         */\n        noAuto: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Set the withCredentials flag on the request.\n         * @attr {boolean} with-credentials\n         * @type {boolean}\n         */\n        withCredentials: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Pass-through to input's capture attribute. Allows user to trigger device inputs\n         * such as camera or microphone immediately.\n         */\n        capture: String,\n\n        /**\n         * The object used to localize this component.\n         * For changing the default localization, change the entire\n         * _i18n_ object or just the property you want to modify.\n         *\n         * The object has the following JSON structure and default values:\n         *\n         * ```\n         * {\n         *   dropFiles: {\n         *     one: 'Drop file here',\n         *     many: 'Drop files here'\n         *   },\n         *   addFiles: {\n         *     one: 'Select File...',\n         *     many: 'Upload Files...'\n         *   },\n         *   error: {\n         *     tooManyFiles: 'Too Many Files.',\n         *     fileIsTooBig: 'File is Too Big.',\n         *     incorrectFileType: 'Incorrect File Type.'\n         *   },\n         *   uploading: {\n         *     status: {\n         *       connecting: 'Connecting...',\n         *       stalled: 'Stalled',\n         *       processing: 'Processing File...',\n         *       held: 'Queued'\n         *     },\n         *     remainingTime: {\n         *       prefix: 'remaining time: ',\n         *       unknown: 'unknown remaining time'\n         *     },\n         *     error: {\n         *       serverUnavailable: 'Server Unavailable',\n         *       unexpectedServerError: 'Unexpected Server Error',\n         *       forbidden: 'Forbidden'\n         *     }\n         *   },\n         *   file: {\n         *     retry: 'Retry',\n         *     start: 'Start',\n         *     remove: 'Remove'\n         *   },\n         *   units: {\n         *     size: ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n         *     sizeBase: 1000\n         *   },\n         *   formatSize: function(bytes) {\n         *     // returns the size followed by the best suitable unit\n         *   },\n         *   formatTime: function(seconds, [secs, mins, hours]) {\n         *     // returns a 'HH:MM:SS' string\n         *   }\n         * }\n         * ```\n         *\n         * @type {!UploadI18n}\n         * @default {English}\n         */\n        i18n: {\n          type: Object,\n          value() {\n            return {\n              dropFiles: {\n                one: 'Drop file here',\n                many: 'Drop files here',\n              },\n              addFiles: {\n                one: 'Upload File...',\n                many: 'Upload Files...',\n              },\n              error: {\n                tooManyFiles: 'Too Many Files.',\n                fileIsTooBig: 'File is Too Big.',\n                incorrectFileType: 'Incorrect File Type.',\n              },\n              uploading: {\n                status: {\n                  connecting: 'Connecting...',\n                  stalled: 'Stalled',\n                  processing: 'Processing File...',\n                  held: 'Queued',\n                },\n                remainingTime: {\n                  prefix: 'remaining time: ',\n                  unknown: 'unknown remaining time',\n                },\n                error: {\n                  serverUnavailable: 'Upload failed, please try again later',\n                  unexpectedServerError: 'Upload failed due to server error',\n                  forbidden: 'Upload forbidden',\n                },\n              },\n              file: {\n                retry: 'Retry',\n                start: 'Start',\n                remove: 'Remove',\n              },\n              units: {\n                size: ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n              },\n            };\n          },\n        },\n\n        /** @private */\n        _addButton: {\n          type: Object,\n        },\n\n        /** @private */\n        _dropLabel: {\n          type: Object,\n        },\n\n        /** @private */\n        _fileList: {\n          type: Object,\n        },\n\n        /** @private */\n        _files: {\n          type: Array,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '__updateAddButton(_addButton, maxFiles, i18n, maxFilesReached)',\n        '__updateDropLabel(_dropLabel, maxFiles, i18n)',\n        '__updateFileList(_fileList, files, i18n)',\n        '__updateMaxFilesReached(maxFiles, files)',\n      ];\n    }\n\n    /** @private */\n    get __acceptRegexp() {\n      if (!this.accept) {\n        return null;\n      }\n      const processedTokens = this.accept.split(',').map((token) => {\n        let processedToken = token.trim();\n        // Escape regex operators common to mime types\n        processedToken = processedToken.replace(/[+.]/gu, '\\\\$&');\n        // Make extension patterns match the end of the file name\n        if (processedToken.startsWith('\\\\.')) {\n          processedToken = `.*${processedToken}$`;\n        }\n        // Handle star (*) wildcards\n        return processedToken.replace(/\\/\\*/gu, '/.*');\n      });\n      // Create accept regex\n      return new RegExp(`^(${processedTokens.join('|')})$`, 'iu');\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.addEventListener('dragover', this._onDragover.bind(this));\n      this.addEventListener('dragleave', this._onDragleave.bind(this));\n      this.addEventListener('drop', this._onDrop.bind(this));\n      this.addEventListener('file-retry', this._onFileRetry.bind(this));\n      this.addEventListener('file-abort', this._onFileAbort.bind(this));\n      this.addEventListener('file-start', this._onFileStart.bind(this));\n      this.addEventListener('file-reject', this._onFileReject.bind(this));\n      this.addEventListener('upload-start', this._onUploadStart.bind(this));\n      this.addEventListener('upload-success', this._onUploadSuccess.bind(this));\n      this.addEventListener('upload-error', this._onUploadError.bind(this));\n\n      this._addButtonController = new AddButtonController(this);\n      this.addController(this._addButtonController);\n\n      this._dropLabelController = new DropLabelController(this);\n      this.addController(this._dropLabelController);\n\n      this.addController(\n        new SlotController(this, 'file-list', 'vaadin-upload-file-list', {\n          initializer: (list) => {\n            this._fileList = list;\n          },\n        }),\n      );\n\n      this.addController(new SlotController(this, 'drop-label-icon', 'vaadin-upload-icon'));\n    }\n\n    /** @private */\n    _formatSize(bytes) {\n      if (typeof this.i18n.formatSize === 'function') {\n        return this.i18n.formatSize(bytes);\n      }\n\n      // https://wiki.ubuntu.com/UnitsPolicy\n      const base = this.i18n.units.sizeBase || 1000;\n      const unit = ~~(Math.log(bytes) / Math.log(base));\n      const dec = Math.max(0, Math.min(3, unit - 1));\n      const size = parseFloat((bytes / base ** unit).toFixed(dec));\n      return `${size} ${this.i18n.units.size[unit]}`;\n    }\n\n    /** @private */\n    _splitTimeByUnits(time) {\n      const unitSizes = [60, 60, 24, Infinity];\n      const timeValues = [0];\n\n      for (let i = 0; i < unitSizes.length && time > 0; i++) {\n        timeValues[i] = time % unitSizes[i];\n        time = Math.floor(time / unitSizes[i]);\n      }\n\n      return timeValues;\n    }\n\n    /** @private */\n    _formatTime(seconds, split) {\n      if (typeof this.i18n.formatTime === 'function') {\n        return this.i18n.formatTime(seconds, split);\n      }\n\n      // Fill HH:MM:SS with leading zeros\n      while (split.length < 3) {\n        split.push(0);\n      }\n\n      return split\n        .reverse()\n        .map((number) => {\n          return (number < 10 ? '0' : '') + number;\n        })\n        .join(':');\n    }\n\n    /** @private */\n    _formatFileProgress(file) {\n      const remainingTime =\n        file.loaded > 0\n          ? this.i18n.uploading.remainingTime.prefix + file.remainingStr\n          : this.i18n.uploading.remainingTime.unknown;\n\n      return `${file.totalStr}: ${file.progress}% (${remainingTime})`;\n    }\n\n    /** @private */\n    __updateMaxFilesReached(maxFiles, files) {\n      this._setMaxFilesReached(maxFiles >= 0 && files.length >= maxFiles);\n    }\n\n    /** @private */\n    __updateAddButton(addButton, maxFiles, i18n, maxFilesReached) {\n      if (addButton) {\n        addButton.disabled = maxFilesReached;\n\n        // Only update text content for the default button element\n        if (addButton === this._addButtonController.defaultNode) {\n          addButton.textContent = this._i18nPlural(maxFiles, i18n.addFiles);\n        }\n      }\n    }\n\n    /** @private */\n    __updateDropLabel(dropLabel, maxFiles, i18n) {\n      // Only update text content for the default label element\n      if (dropLabel && dropLabel === this._dropLabelController.defaultNode) {\n        dropLabel.textContent = this._i18nPlural(maxFiles, i18n.dropFiles);\n      }\n    }\n\n    /** @private */\n    __updateFileList(list, files, i18n) {\n      if (list) {\n        list.items = [...files];\n        list.i18n = i18n;\n      }\n    }\n\n    /** @private */\n    _onDragover(event) {\n      event.preventDefault();\n      if (!this.nodrop && !this._dragover) {\n        this._dragoverValid = !this.maxFilesReached;\n        this._dragover = true;\n      }\n      event.dataTransfer.dropEffect = !this._dragoverValid || this.nodrop ? 'none' : 'copy';\n    }\n\n    /** @private */\n    _onDragleave(event) {\n      event.preventDefault();\n      if (this._dragover && !this.nodrop) {\n        this._dragover = this._dragoverValid = false;\n      }\n    }\n\n    /** @private */\n    _onDrop(event) {\n      if (!this.nodrop) {\n        event.preventDefault();\n        this._dragover = this._dragoverValid = false;\n        this._addFiles(event.dataTransfer.files);\n      }\n    }\n\n    /** @private */\n    _createXhr() {\n      return new XMLHttpRequest();\n    }\n\n    /** @private */\n    _configureXhr(xhr) {\n      if (typeof this.headers === 'string') {\n        try {\n          this.headers = JSON.parse(this.headers);\n        } catch (e) {\n          this.headers = undefined;\n        }\n      }\n      Object.entries(this.headers).forEach(([key, value]) => {\n        xhr.setRequestHeader(key, value);\n      });\n      if (this.timeout) {\n        xhr.timeout = this.timeout;\n      }\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    /** @private */\n    _setStatus(file, total, loaded, elapsed) {\n      file.elapsed = elapsed;\n      file.elapsedStr = this._formatTime(file.elapsed, this._splitTimeByUnits(file.elapsed));\n      file.remaining = Math.ceil(elapsed * (total / loaded - 1));\n      file.remainingStr = this._formatTime(file.remaining, this._splitTimeByUnits(file.remaining));\n      file.speed = ~~(total / elapsed / 1024);\n      file.totalStr = this._formatSize(total);\n      file.loadedStr = this._formatSize(loaded);\n      file.status = this._formatFileProgress(file);\n    }\n\n    /**\n     * Triggers the upload of any files that are not completed\n     *\n     * @param {!UploadFile | !Array<!UploadFile>=} files - Files being uploaded. Defaults to all outstanding files\n     */\n    uploadFiles(files = this.files) {\n      if (files && !Array.isArray(files)) {\n        files = [files];\n      }\n      files = files.filter((file) => !file.complete);\n      Array.prototype.forEach.call(files, this._uploadFile.bind(this));\n    }\n\n    /** @private */\n    _uploadFile(file) {\n      if (file.uploading) {\n        return;\n      }\n\n      const ini = Date.now();\n      const xhr = (file.xhr = this._createXhr());\n\n      let stalledId, last;\n      // Onprogress is called always after onreadystatechange\n      xhr.upload.onprogress = (e) => {\n        clearTimeout(stalledId);\n\n        last = Date.now();\n        const elapsed = (last - ini) / 1000;\n        const loaded = e.loaded,\n          total = e.total,\n          progress = ~~((loaded / total) * 100);\n        file.loaded = loaded;\n        file.progress = progress;\n        file.indeterminate = loaded <= 0 || loaded >= total;\n\n        if (file.error) {\n          file.indeterminate = file.status = undefined;\n        } else if (!file.abort) {\n          if (progress < 100) {\n            this._setStatus(file, total, loaded, elapsed);\n            stalledId = setTimeout(() => {\n              file.status = this.i18n.uploading.status.stalled;\n              this._renderFileList();\n            }, 2000);\n          } else {\n            file.loadedStr = file.totalStr;\n            file.status = this.i18n.uploading.status.processing;\n          }\n        }\n\n        this._renderFileList();\n        this.dispatchEvent(new CustomEvent('upload-progress', { detail: { file, xhr } }));\n      };\n\n      // More reliable than xhr.onload\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          clearTimeout(stalledId);\n          file.indeterminate = file.uploading = false;\n          if (file.abort) {\n            return;\n          }\n          file.status = '';\n          // Custom listener can modify the default behavior either\n          // preventing default, changing the xhr, or setting the file error\n          const evt = this.dispatchEvent(\n            new CustomEvent('upload-response', {\n              detail: { file, xhr },\n              cancelable: true,\n            }),\n          );\n\n          if (!evt) {\n            return;\n          }\n          if (xhr.status === 0) {\n            file.error = this.i18n.uploading.error.serverUnavailable;\n          } else if (xhr.status >= 500) {\n            file.error = this.i18n.uploading.error.unexpectedServerError;\n          } else if (xhr.status >= 400) {\n            file.error = this.i18n.uploading.error.forbidden;\n          }\n\n          file.complete = !file.error;\n          this.dispatchEvent(\n            new CustomEvent(`upload-${file.error ? 'error' : 'success'}`, {\n              detail: { file, xhr },\n            }),\n          );\n          this._renderFileList();\n        }\n      };\n\n      const formData = new FormData();\n\n      file.uploadTarget = file.uploadTarget || this.target || '';\n      file.formDataName = this.formDataName;\n\n      const evt = this.dispatchEvent(\n        new CustomEvent('upload-before', {\n          detail: { file, xhr },\n          cancelable: true,\n        }),\n      );\n      if (!evt) {\n        return;\n      }\n\n      formData.append(file.formDataName, file, file.name);\n\n      xhr.open(this.method, file.uploadTarget, true);\n      this._configureXhr(xhr);\n\n      file.status = this.i18n.uploading.status.connecting;\n      file.uploading = file.indeterminate = true;\n      file.complete = file.abort = file.error = file.held = false;\n\n      xhr.upload.onloadstart = () => {\n        this.dispatchEvent(\n          new CustomEvent('upload-start', {\n            detail: { file, xhr },\n          }),\n        );\n        this._renderFileList();\n      };\n\n      // Custom listener could modify the xhr just before sending it\n      // preventing default\n      const uploadEvt = this.dispatchEvent(\n        new CustomEvent('upload-request', {\n          detail: { file, xhr, formData },\n          cancelable: true,\n        }),\n      );\n      if (uploadEvt) {\n        xhr.send(formData);\n      }\n    }\n\n    /** @private */\n    _retryFileUpload(file) {\n      const evt = this.dispatchEvent(\n        new CustomEvent('upload-retry', {\n          detail: { file, xhr: file.xhr },\n          cancelable: true,\n        }),\n      );\n      if (evt) {\n        this._uploadFile(file);\n      }\n    }\n\n    /** @private */\n    _abortFileUpload(file) {\n      const evt = this.dispatchEvent(\n        new CustomEvent('upload-abort', {\n          detail: { file, xhr: file.xhr },\n          cancelable: true,\n        }),\n      );\n      if (evt) {\n        file.abort = true;\n        if (file.xhr) {\n          file.xhr.abort();\n        }\n        this._removeFile(file);\n      }\n    }\n\n    /** @private */\n    _renderFileList() {\n      if (this._fileList) {\n        this._fileList.requestContentUpdate();\n      }\n    }\n\n    /** @private */\n    _addFiles(files) {\n      Array.prototype.forEach.call(files, this._addFile.bind(this));\n    }\n\n    /**\n     * Add the file for uploading. Called internally for each file after picking files from dialog or dropping files.\n     *\n     * @param {!UploadFile} file File being added\n     * @protected\n     */\n    _addFile(file) {\n      if (this.maxFilesReached) {\n        this.dispatchEvent(\n          new CustomEvent('file-reject', {\n            detail: { file, error: this.i18n.error.tooManyFiles },\n          }),\n        );\n        return;\n      }\n      if (this.maxFileSize >= 0 && file.size > this.maxFileSize) {\n        this.dispatchEvent(\n          new CustomEvent('file-reject', {\n            detail: { file, error: this.i18n.error.fileIsTooBig },\n          }),\n        );\n        return;\n      }\n      const re = this.__acceptRegexp;\n      if (re && !(re.test(file.type) || re.test(file.name))) {\n        this.dispatchEvent(\n          new CustomEvent('file-reject', {\n            detail: { file, error: this.i18n.error.incorrectFileType },\n          }),\n        );\n        return;\n      }\n      file.loaded = 0;\n      file.held = true;\n      file.status = this.i18n.uploading.status.held;\n      this.files = [file, ...this.files];\n\n      if (!this.noAuto) {\n        this._uploadFile(file);\n      }\n    }\n\n    /**\n     * Remove file from upload list. Called internally if file upload was canceled.\n     * @param {!UploadFile} file File to remove\n     * @protected\n     */\n    _removeFile(file) {\n      if (this.files.indexOf(file) > -1) {\n        this.files = this.files.filter((i) => i !== file);\n\n        this.dispatchEvent(\n          new CustomEvent('file-remove', {\n            detail: { file },\n            bubbles: true,\n            composed: true,\n          }),\n        );\n      }\n    }\n\n    /** @private */\n    _onAddFilesTouchEnd(e) {\n      // Cancel the event to avoid the following click event\n      e.preventDefault();\n      this._onAddFilesClick(e);\n    }\n\n    /** @private */\n    _onAddFilesClick(e) {\n      if (this.maxFilesReached) {\n        return;\n      }\n\n      e.stopPropagation();\n      this.$.fileInput.value = '';\n      this.$.fileInput.click();\n    }\n\n    /** @private */\n    _onFileInputChange(event) {\n      this._addFiles(event.target.files);\n    }\n\n    /** @private */\n    _onFileStart(event) {\n      this._uploadFile(event.detail.file);\n    }\n\n    /** @private */\n    _onFileRetry(event) {\n      this._retryFileUpload(event.detail.file);\n    }\n\n    /** @private */\n    _onFileAbort(event) {\n      this._abortFileUpload(event.detail.file);\n    }\n\n    /** @private */\n    _onFileReject(event) {\n      announce(`${event.detail.file.name}: ${event.detail.error}`, { mode: 'alert' });\n    }\n\n    /** @private */\n    _onUploadStart(event) {\n      announce(`${event.detail.file.name}: 0%`, { mode: 'alert' });\n    }\n\n    /** @private */\n    _onUploadSuccess(event) {\n      announce(`${event.detail.file.name}: 100%`, { mode: 'alert' });\n    }\n\n    /** @private */\n    _onUploadError(event) {\n      announce(`${event.detail.file.name}: ${event.detail.file.error}`, { mode: 'alert' });\n    }\n\n    /** @private */\n    _dragoverChanged(dragover) {\n      if (dragover) {\n        this.setAttribute('dragover', dragover);\n      } else {\n        this.removeAttribute('dragover');\n      }\n    }\n\n    /** @private */\n    _dragoverValidChanged(dragoverValid) {\n      if (dragoverValid) {\n        this.setAttribute('dragover-valid', dragoverValid);\n      } else {\n        this.removeAttribute('dragover-valid');\n      }\n    }\n\n    /** @private */\n    _i18nPlural(value, plural) {\n      return value === 1 ? plural.one : plural.many;\n    }\n\n    /** @protected */\n    _isMultiple(maxFiles) {\n      return maxFiles !== 1;\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/button/src/vaadin-button.js';\nimport './vaadin-upload-icon.js';\nimport './vaadin-upload-icons.js';\nimport './vaadin-upload-file-list.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { UploadMixin } from './vaadin-upload-mixin.js';\n\n/**\n * `<vaadin-upload>` is a Web Component for uploading multiple files with drag and drop support.\n *\n * Example:\n *\n * ```\n * <vaadin-upload></vaadin-upload>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name          | Description\n * -------------------|-------------------------------------\n * `primary-buttons`  | Upload container\n * `drop-label`       | Element wrapping drop label and icon\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part name\n * ---|---|---\n * `nodrop` | Set when drag and drop is disabled (e. g., on touch devices) | `:host`\n * `dragover` | A file is being dragged over the element | `:host`\n * `dragover-valid` | A dragged file is valid with `maxFiles` and `accept` criteria | `:host`\n * `max-files-reached` | The maximum number of files that the user is allowed to add to the upload has been reached | `:host`\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @fires {CustomEvent} file-reject - Fired when a file cannot be added to the queue due to a constrain.\n * @fires {CustomEvent} files-changed - Fired when the `files` property changes.\n * @fires {CustomEvent} max-files-reached-changed - Fired when the `maxFilesReached` property changes.\n * @fires {CustomEvent} upload-before - Fired before the XHR is opened.\n * @fires {CustomEvent} upload-start - Fired when the XHR is sent.\n * @fires {CustomEvent} upload-progress - Fired as many times as the progress is updated.\n * @fires {CustomEvent} upload-success - Fired in case the upload process succeeded.\n * @fires {CustomEvent} upload-error - Fired in case the upload process failed.\n * @fires {CustomEvent} upload-request - Fired when the XHR has been opened but not sent yet.\n * @fires {CustomEvent} upload-response - Fired when on the server response before analyzing it.\n * @fires {CustomEvent} upload-retry - Fired when retry upload is requested.\n * @fires {CustomEvent} upload-abort - Fired when upload abort is requested.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes UploadMixin\n */\nclass Upload extends UploadMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          box-sizing: border-box;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n      </style>\n\n      <div part=\"primary-buttons\">\n        <slot name=\"add-button\"></slot>\n        <div part=\"drop-label\" hidden$=\"[[nodrop]]\" id=\"dropLabelContainer\" aria-hidden=\"true\">\n          <slot name=\"drop-label-icon\"></slot>\n          <slot name=\"drop-label\"></slot>\n        </div>\n      </div>\n      <slot name=\"file-list\"></slot>\n      <slot></slot>\n      <input\n        type=\"file\"\n        id=\"fileInput\"\n        hidden\n        on-change=\"_onFileInputChange\"\n        accept$=\"{{accept}}\"\n        multiple$=\"[[_isMultiple(maxFiles)]]\"\n        capture$=\"[[capture]]\"\n      />\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-upload';\n  }\n\n  /**\n   * Fired when a file cannot be added to the queue due to a constrain:\n   *  file-size, file-type or maxFiles\n   *\n   * @event file-reject\n   * @param {Object} detail\n   * @param {Object} detail.file the file added\n   * @param {string} detail.error the cause\n   */\n\n  /**\n   * Fired before the XHR is opened. Could be used for changing the request\n   * URL. If the default is prevented, then XHR would not be opened.\n   *\n   * @event upload-before\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   * @param {Object} detail.file.uploadTarget the upload request URL, initialized with the value of vaadin-upload `target` property\n   */\n\n  /**\n   * Fired when the XHR has been opened but not sent yet. Useful for appending\n   * data keys to the FormData object, for changing some parameters like\n   * headers, etc. If the event is defaultPrevented, `vaadin-upload` will not\n   * send the request allowing the user to do something on his own.\n   *\n   * @event upload-request\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   * @param {Object} detail.formData the FormData object\n   */\n\n  /**\n   * Fired when the XHR is sent.\n   *\n   * @event upload-start\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired as many times as the progress is updated.\n   *\n   * @event upload-progress\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded with loaded info\n   */\n\n  /**\n   * Fired when we have the actual server response, and before the component\n   * analyses it. It's useful for developers to make the upload fail depending\n   * on the server response. If the event is defaultPrevented the vaadin-upload\n   * will return allowing the user to do something on his own like retry the\n   * upload, etc. since he has full access to the `xhr` and `file` objects.\n   * Otherwise, if the event is not prevented default `vaadin-upload` continues\n   * with the normal workflow checking the `xhr.status` and `file.error`\n   * which also might be modified by the user to force a customized response.\n   *\n   * @event upload-response\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired in case the upload process succeed.\n   *\n   * @event upload-success\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded with loaded info\n   */\n\n  /**\n   * Fired in case the upload process failed.\n   *\n   * @event upload-error\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired when retry upload is requested. If the default is prevented, then\n   * retry would not be performed.\n   *\n   * @event upload-retry\n   * @param {Object} detail\n   * @param {Object} detail.xhr the previous upload xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired when retry abort is requested. If the default is prevented, then the\n   * file upload would not be aborted.\n   *\n   * @event upload-abort\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n}\n\ndefineCustomElement(Upload);\n\nexport { Upload };\n"],
  "mappings": "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",
  "names": ["html", "evt"]
}
