{
  "version": 3,
  "sources": ["../../@vaadin/scroller/theme/lumo/vaadin-scroller-styles.js", "../../@vaadin/scroller/src/vaadin-scroller.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst scroller = css`\n  :host {\n    outline: none;\n    --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\n    --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\n  }\n\n  :host([focus-ring]) {\n    box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\n  }\n\n  /* Show dividers when content overflows */\n\n  :host([theme~='overflow-indicators'])::before,\n  :host([theme~='overflow-indicators'])::after {\n    content: '';\n    display: none;\n    position: sticky;\n    inset: 0;\n    z-index: 9999;\n    height: 1px;\n    margin-bottom: -1px;\n    background: var(--lumo-contrast-10pct);\n  }\n\n  :host([theme~='overflow-indicators'])::after {\n    margin-bottom: 0;\n    margin-top: -1px;\n  }\n\n  :host([theme~='overflow-indicators'][overflow~='top'])::before,\n  :host([theme~='overflow-indicators'][overflow~='bottom'])::after {\n    display: block;\n  }\n`;\n\nregisterStyles('vaadin-scroller', scroller, { moduleId: 'lumo-scroller' });\n\nexport { scroller };\n", "/**\n * @license\n * Copyright (c) 2020 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { OverflowController } from '@vaadin/component-base/src/overflow-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-scroller>` provides a simple way to enable scrolling when its content is overflowing.\n *\n * ```\n * <vaadin-scroller>\n *   <div>Content</div>\n * </vaadin-scroller>\n * ```\n * The following attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------| -----------\n * `focus-ring` | Set when the element is focused using the keyboard.\n * `focused`    | Set when the element is focused.\n * `overflow`   | Set to `top`, `bottom`, `start`, `end`, all of them, or none.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ControllerMixin\n * @mixes ElementMixin\n * @mixes FocusMixin\n */\nclass Scroller extends FocusMixin(ElementMixin(ControllerMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host {\n          display: block;\n          overflow: auto;\n        }\n\n        :host([scroll-direction='vertical']) {\n          overflow-x: hidden;\n        }\n\n        :host([scroll-direction='horizontal']) {\n          overflow-y: hidden;\n        }\n\n        :host([scroll-direction='none']) {\n          overflow: hidden;\n        }\n      </style>\n\n      <slot></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-scroller';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * This property indicates the scroll direction. Supported values are `vertical`, `horizontal`, `none`.\n       * When `scrollDirection` is undefined scrollbars will be shown in both directions.\n       * @attr {string} scroll-direction\n       */\n      scrollDirection: {\n        type: String,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Indicates whether the element can be focused and where it participates in sequential keyboard navigation.\n       * @protected\n       */\n      tabindex: {\n        type: Number,\n        value: 0,\n        reflectToAttribute: true,\n      },\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.__overflowController = new OverflowController(this);\n    this.addController(this.__overflowController);\n  }\n\n  /**\n   * Override method inherited from `FocusMixin` to mark the scroller as focused\n   * only when the host is focused.\n   * @param {Event} event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldSetFocus(event) {\n    return event.target === this;\n  }\n}\n\ndefineCustomElement(Scroller);\n\nexport { Scroller };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCjB,eAAe,mBAAmB,UAAU,EAAE,UAAU,gBAAgB,CAAC;;;ACJzE,IAAM,WAAN,cAAuB,WAAW,aAAa,gBAAgB,cAAc,cAAc,CAAC,CAAC,CAAC,EAAE;AAAA,EAC9F,WAAW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BT;AAAA,EAEA,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,aAAa;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAML,iBAAiB;AAAA,QACf,MAAM;AAAA,QACN,oBAAoB;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,QACP,oBAAoB;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,uBAAuB,IAAI,mBAAmB,IAAI;AACvD,SAAK,cAAc,KAAK,oBAAoB;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,gBAAgB,OAAO;AACrB,WAAO,MAAM,WAAW;AAAA,EAC1B;AACF;AAEA,oBAAoB,QAAQ;",
  "names": []
}
