{
  "version": 3,
  "sources": ["../../@vaadin/overlay/src/vaadin-overlay-styles.js", "../../@vaadin/overlay/src/vaadin-overlay-focus-mixin.js", "../../@vaadin/overlay/src/vaadin-overlay-stack-mixin.js", "../../@vaadin/overlay/src/vaadin-overlay-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const overlayStyles = css`\n  :host {\n    z-index: 200;\n    position: fixed;\n\n    /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n    /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n    inset: 0;\n    bottom: var(--vaadin-overlay-viewport-bottom);\n\n    /* Use flexbox alignment for the overlay part. */\n    display: flex;\n    flex-direction: column; /* makes dropdowns sizing easier */\n    /* Align to center by default. */\n    align-items: center;\n    justify-content: center;\n\n    /* Allow centering when max-width/max-height applies. */\n    margin: auto;\n\n    /* The host is not clickable, only the overlay part is. */\n    pointer-events: none;\n\n    /* Remove tap highlight on touch devices. */\n    -webkit-tap-highlight-color: transparent;\n\n    /* CSS API for host */\n    --vaadin-overlay-viewport-bottom: 0;\n  }\n\n  :host([hidden]),\n  :host(:not([opened]):not([closing])),\n  :host(:not([opened]):not([closing])) [part='overlay'] {\n    display: none !important;\n  }\n\n  [part='overlay'] {\n    -webkit-overflow-scrolling: touch;\n    overflow: auto;\n    pointer-events: auto;\n\n    /* Prevent overflowing the host */\n    max-width: 100%;\n    box-sizing: border-box;\n\n    -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n  }\n\n  [part='backdrop'] {\n    z-index: -1;\n    content: '';\n    background: rgba(0, 0, 0, 0.5);\n    position: fixed;\n    inset: 0;\n    pointer-events: auto;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2017 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { AriaModalController } from '@vaadin/a11y-base/src/aria-modal-controller.js';\nimport { FocusRestorationController } from '@vaadin/a11y-base/src/focus-restoration-controller.js';\nimport { FocusTrapController } from '@vaadin/a11y-base/src/focus-trap-controller.js';\nimport { getDeepActiveElement } from '@vaadin/a11y-base/src/focus-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\n\n/**\n * @polymerMixin\n * @mixes ControllerMixin\n */\nexport const OverlayFocusMixin = (superClass) =>\n  class OverlayFocusMixin extends ControllerMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * When true, opening the overlay moves focus to the first focusable child,\n         * or to the overlay part with tabindex if there are no focusable children.\n         * @attr {boolean} focus-trap\n         */\n        focusTrap: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Set to true to enable restoring of focus when overlay is closed.\n         * @attr {boolean} restore-focus-on-close\n         */\n        restoreFocusOnClose: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Set to specify the element which should be focused on overlay close,\n         * if `restoreFocusOnClose` is set to true.\n         * @type {HTMLElement}\n         */\n        restoreFocusNode: {\n          type: HTMLElement,\n        },\n      };\n    }\n\n    constructor() {\n      super();\n\n      this.__ariaModalController = new AriaModalController(this);\n      this.__focusTrapController = new FocusTrapController(this);\n      this.__focusRestorationController = new FocusRestorationController();\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(this.__ariaModalController);\n      this.addController(this.__focusTrapController);\n      this.addController(this.__focusRestorationController);\n    }\n\n    /**\n     * Release focus and restore focus after the overlay is closed.\n     *\n     * @protected\n     */\n    _resetFocus() {\n      if (this.focusTrap) {\n        this.__ariaModalController.close();\n        this.__focusTrapController.releaseFocus();\n      }\n\n      if (this.restoreFocusOnClose && this._shouldRestoreFocus()) {\n        this.__focusRestorationController.restoreFocus();\n      }\n    }\n\n    /**\n     * Save the previously focused node when the overlay starts to open.\n     *\n     * @protected\n     */\n    _saveFocus() {\n      if (this.restoreFocusOnClose) {\n        this.__focusRestorationController.saveFocus(this.restoreFocusNode);\n      }\n    }\n\n    /**\n     * Trap focus within the overlay after opening has completed.\n     *\n     * @protected\n     */\n    _trapFocus() {\n      if (this.focusTrap) {\n        this.__ariaModalController.showModal();\n        this.__focusTrapController.trapFocus(this.$.overlay);\n      }\n    }\n\n    /**\n     * Returns true if focus is still inside the overlay or on the body element,\n     * otherwise false.\n     *\n     * Focus shouldn't be restored if it's been moved elsewhere by another\n     * component or as a result of a user interaction e.g. the user clicked\n     * on a button outside the overlay while the overlay was open.\n     *\n     * @protected\n     * @return {boolean}\n     */\n    _shouldRestoreFocus() {\n      const activeElement = getDeepActiveElement();\n      return activeElement === document.body || this._deepContains(activeElement);\n    }\n\n    /**\n     * Returns true if the overlay contains the given node,\n     * including those within shadow DOM trees.\n     *\n     * @param {Node} node\n     * @return {boolean}\n     * @protected\n     */\n    _deepContains(node) {\n      if (this.contains(node)) {\n        return true;\n      }\n      let n = node;\n      const doc = node.ownerDocument;\n      // Walk from node to `this` or `document`\n      while (n && n !== doc && n !== this) {\n        n = n.parentNode || n.host;\n      }\n      return n === this;\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns all attached overlays in visual stacking order.\n * @private\n */\nconst getAttachedInstances = () =>\n  Array.from(document.body.children)\n    .filter((el) => el instanceof HTMLElement && el._hasOverlayStackMixin && !el.hasAttribute('closing'))\n    .sort((a, b) => a.__zIndex - b.__zIndex || 0);\n\n/**\n * Returns true if the overlay is the last one in the opened overlays stack.\n * @param {HTMLElement} overlay\n * @return {boolean}\n * @protected\n */\nexport const isLastOverlay = (overlay) => overlay === getAttachedInstances().pop();\n\n/**\n * @polymerMixin\n */\nexport const OverlayStackMixin = (superClass) =>\n  class OverlayStackMixin extends superClass {\n    constructor() {\n      super();\n\n      this._hasOverlayStackMixin = true;\n    }\n\n    /**\n     * Returns true if this is the last one in the opened overlays stack.\n     *\n     * @return {boolean}\n     * @protected\n     */\n    get _last() {\n      return isLastOverlay(this);\n    }\n\n    /**\n     * Brings the overlay as visually the frontmost one.\n     */\n    bringToFront() {\n      let zIndex = '';\n      const frontmost = getAttachedInstances()\n        .filter((o) => o !== this)\n        .pop();\n      if (frontmost) {\n        const frontmostZIndex = frontmost.__zIndex;\n        zIndex = frontmostZIndex + 1;\n      }\n      this.style.zIndex = zIndex;\n      this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n    }\n\n    /** @protected */\n    _enterModalState() {\n      if (document.body.style.pointerEvents !== 'none') {\n        // Set body pointer-events to 'none' to disable mouse interactions with\n        // other document nodes.\n        this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n        document.body.style.pointerEvents = 'none';\n      }\n\n      // Disable pointer events in other attached overlays\n      getAttachedInstances().forEach((el) => {\n        if (el !== this) {\n          el.$.overlay.style.pointerEvents = 'none';\n        }\n      });\n    }\n\n    /** @protected */\n    _exitModalState() {\n      if (this._previousDocumentPointerEvents !== undefined) {\n        // Restore body pointer-events\n        document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n        delete this._previousDocumentPointerEvents;\n      }\n\n      // Restore pointer events in the previous overlay(s)\n      const instances = getAttachedInstances();\n\n      let el;\n      // Use instances.pop() to ensure the reverse order\n      while ((el = instances.pop())) {\n        if (el === this) {\n          // Skip the current instance\n          continue;\n        }\n        el.$.overlay.style.removeProperty('pointer-events');\n        if (!el.modeless) {\n          // Stop after the last modal\n          break;\n        }\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { OverlayFocusMixin } from './vaadin-overlay-focus-mixin.js';\nimport { OverlayStackMixin } from './vaadin-overlay-stack-mixin.js';\n\n/**\n * @polymerMixin\n * @mixes OverlayFocusMixin\n * @mixes OverlayStackMixin\n */\nexport const OverlayMixin = (superClass) =>\n  class OverlayMixin extends OverlayFocusMixin(OverlayStackMixin(superClass)) {\n    static get properties() {\n      return {\n        /**\n         * When true, the overlay is visible and attached to body.\n         */\n        opened: {\n          type: Boolean,\n          notify: true,\n          observer: '_openedChanged',\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Owner element passed with renderer function\n         * @type {HTMLElement}\n         */\n        owner: {\n          type: Object,\n        },\n\n        /**\n         * Object with properties that is passed to `renderer` function\n         */\n        model: {\n          type: Object,\n        },\n\n        /**\n         * Custom function for rendering the content of the overlay.\n         * Receives three arguments:\n         *\n         * - `root` The root container DOM element. Append your content to it.\n         * - `owner` The host element of the renderer function.\n         * - `model` The object with the properties related with rendering.\n         * @type {OverlayRenderer | null | undefined}\n         */\n        renderer: {\n          type: Object,\n        },\n\n        /**\n         * When true the overlay won't disable the main content, showing\n         * it doesn't change the functionality of the user interface.\n         * @type {boolean}\n         */\n        modeless: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_modelessChanged',\n        },\n\n        /**\n         * When set to true, the overlay is hidden. This also closes the overlay\n         * immediately in case there is a closing animation in progress.\n         * @type {boolean}\n         */\n        hidden: {\n          type: Boolean,\n          reflectToAttribute: true,\n          observer: '_hiddenChanged',\n        },\n\n        /**\n         * When true the overlay has backdrop on top of content when opened.\n         * @type {boolean}\n         */\n        withBackdrop: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_rendererOrDataChanged(renderer, owner, model, opened)'];\n    }\n\n    constructor() {\n      super();\n\n      this._boundMouseDownListener = this._mouseDownListener.bind(this);\n      this._boundMouseUpListener = this._mouseUpListener.bind(this);\n      this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n      this._boundKeydownListener = this._keydownListener.bind(this);\n\n      /* c8 ignore next 3 */\n      if (isIOS) {\n        this._boundIosResizeListener = () => this._detectIosNavbar();\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      // Need to add dummy click listeners to this and the backdrop or else\n      // the document click event listener (_outsideClickListener) may never\n      // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n      // and <vaadin-context-menu>).\n      this.addEventListener('click', () => {});\n      this.$.backdrop.addEventListener('click', () => {});\n\n      this.addEventListener('mouseup', () => {\n        // In Chrome, focus moves to body on overlay content mousedown\n        // See https://github.com/vaadin/flow-components/issues/5507\n        if (document.activeElement === document.body && this.$.overlay.getAttribute('tabindex') === '0') {\n          this.$.overlay.focus();\n        }\n      });\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      /* c8 ignore next 3 */\n      if (this._boundIosResizeListener) {\n        this._detectIosNavbar();\n        window.addEventListener('resize', this._boundIosResizeListener);\n      }\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      /* c8 ignore next 3 */\n      if (this._boundIosResizeListener) {\n        window.removeEventListener('resize', this._boundIosResizeListener);\n      }\n    }\n\n    /**\n     * Requests an update for the content of the overlay.\n     * While performing the update, it invokes the renderer passed in the `renderer` property.\n     *\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n     */\n    requestContentUpdate() {\n      if (this.renderer) {\n        this.renderer.call(this.owner, this, this.owner, this.model);\n      }\n    }\n\n    /**\n     * @param {Event=} sourceEvent\n     */\n    close(sourceEvent) {\n      const evt = new CustomEvent('vaadin-overlay-close', {\n        bubbles: true,\n        cancelable: true,\n        detail: { sourceEvent },\n      });\n      this.dispatchEvent(evt);\n      if (!evt.defaultPrevented) {\n        this.opened = false;\n      }\n    }\n\n    /** @private */\n    _detectIosNavbar() {\n      /* c8 ignore next 15 */\n      if (!this.opened) {\n        return;\n      }\n\n      const innerHeight = window.innerHeight;\n      const innerWidth = window.innerWidth;\n\n      const landscape = innerWidth > innerHeight;\n\n      const clientHeight = document.documentElement.clientHeight;\n\n      if (landscape && clientHeight > innerHeight) {\n        this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n      } else {\n        this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n      }\n    }\n\n    /** @private */\n    _addGlobalListeners() {\n      document.addEventListener('mousedown', this._boundMouseDownListener);\n      document.addEventListener('mouseup', this._boundMouseUpListener);\n      // Firefox leaks click to document on contextmenu even if prevented\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n      document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n    }\n\n    /** @private */\n    _removeGlobalListeners() {\n      document.removeEventListener('mousedown', this._boundMouseDownListener);\n      document.removeEventListener('mouseup', this._boundMouseUpListener);\n      document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n    }\n\n    /** @private */\n    _rendererOrDataChanged(renderer, owner, model, opened) {\n      const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n      this._oldModel = model;\n      this._oldOwner = owner;\n\n      const rendererChanged = this._oldRenderer !== renderer;\n      const hasOldRenderer = this._oldRenderer !== undefined;\n      this._oldRenderer = renderer;\n\n      const openedChanged = this._oldOpened !== opened;\n      this._oldOpened = opened;\n\n      if (rendererChanged && hasOldRenderer) {\n        this.innerHTML = '';\n        // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n        // When clearing the rendered content, this part needs to be manually disposed of.\n        // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n        delete this._$litPart$;\n      }\n\n      if (opened && renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n        this.requestContentUpdate();\n      }\n    }\n\n    /** @private */\n    _modelessChanged(modeless) {\n      if (!modeless) {\n        if (this.opened) {\n          this._addGlobalListeners();\n          this._enterModalState();\n        }\n      } else {\n        this._removeGlobalListeners();\n        this._exitModalState();\n      }\n    }\n\n    /** @private */\n    _openedChanged(opened, wasOpened) {\n      if (opened) {\n        this._saveFocus();\n\n        this._animatedOpening();\n\n        afterNextRender(this, () => {\n          this._trapFocus();\n\n          const evt = new CustomEvent('vaadin-overlay-open', { bubbles: true });\n          this.dispatchEvent(evt);\n        });\n\n        document.addEventListener('keydown', this._boundKeydownListener);\n\n        if (!this.modeless) {\n          this._addGlobalListeners();\n        }\n      } else if (wasOpened) {\n        this._resetFocus();\n\n        this._animatedClosing();\n\n        document.removeEventListener('keydown', this._boundKeydownListener);\n\n        if (!this.modeless) {\n          this._removeGlobalListeners();\n        }\n      }\n    }\n\n    /** @private */\n    _hiddenChanged(hidden) {\n      if (hidden && this.hasAttribute('closing')) {\n        this._flushAnimation('closing');\n      }\n    }\n\n    /**\n     * @return {boolean}\n     * @private\n     */\n    _shouldAnimate() {\n      const style = getComputedStyle(this);\n      const name = style.getPropertyValue('animation-name');\n      const hidden = style.getPropertyValue('display') === 'none';\n      return !hidden && name && name !== 'none';\n    }\n\n    /**\n     * @param {string} type\n     * @param {Function} callback\n     * @private\n     */\n    _enqueueAnimation(type, callback) {\n      const handler = `__${type}Handler`;\n      const listener = (event) => {\n        if (event && event.target !== this) {\n          return;\n        }\n        callback();\n        this.removeEventListener('animationend', listener);\n        delete this[handler];\n      };\n      this[handler] = listener;\n      this.addEventListener('animationend', listener);\n    }\n\n    /**\n     * @param {string} type\n     * @protected\n     */\n    _flushAnimation(type) {\n      const handler = `__${type}Handler`;\n      if (typeof this[handler] === 'function') {\n        this[handler]();\n      }\n    }\n\n    /** @private */\n    _animatedOpening() {\n      if (this.parentNode === document.body && this.hasAttribute('closing')) {\n        this._flushAnimation('closing');\n      }\n      this._attachOverlay();\n      if (!this.modeless) {\n        this._enterModalState();\n      }\n      this.setAttribute('opening', '');\n\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('opening', () => {\n          this._finishOpening();\n        });\n      } else {\n        this._finishOpening();\n      }\n    }\n\n    /** @private */\n    _attachOverlay() {\n      this._placeholder = document.createComment('vaadin-overlay-placeholder');\n      this.parentNode.insertBefore(this._placeholder, this);\n      document.body.appendChild(this);\n      this.bringToFront();\n    }\n\n    /** @private */\n    _finishOpening() {\n      this.removeAttribute('opening');\n    }\n\n    /** @private */\n    _finishClosing() {\n      this._detachOverlay();\n      this.$.overlay.style.removeProperty('pointer-events');\n      this.removeAttribute('closing');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closed'));\n    }\n\n    /** @private */\n    _animatedClosing() {\n      if (this.hasAttribute('opening')) {\n        this._flushAnimation('opening');\n      }\n      if (this._placeholder) {\n        this._exitModalState();\n        this.setAttribute('closing', '');\n        this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n\n        if (this._shouldAnimate()) {\n          this._enqueueAnimation('closing', () => {\n            this._finishClosing();\n          });\n        } else {\n          this._finishClosing();\n        }\n      }\n    }\n\n    /** @private */\n    _detachOverlay() {\n      this._placeholder.parentNode.insertBefore(this, this._placeholder);\n      this._placeholder.parentNode.removeChild(this._placeholder);\n    }\n\n    /** @private */\n    _mouseDownListener(event) {\n      this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n    }\n\n    /** @private */\n    _mouseUpListener(event) {\n      this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n    }\n\n    /**\n     * Whether to close the overlay on outside click or not.\n     * Override this method to customize the closing logic.\n     *\n     * @param {Event} _event\n     * @return {boolean}\n     * @protected\n     */\n    _shouldCloseOnOutsideClick(_event) {\n      return this._last;\n    }\n\n    /**\n     * Outside click listener used in capture phase to close the overlay before\n     * propagating the event to the listener on the element that triggered it.\n     * Otherwise, calling `open()` would result in closing and re-opening.\n     *\n     * @private\n     */\n    _outsideClickListener(event) {\n      if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n        this._mouseDownInside = false;\n        this._mouseUpInside = false;\n        return;\n      }\n\n      if (!this._shouldCloseOnOutsideClick(event)) {\n        return;\n      }\n\n      const evt = new CustomEvent('vaadin-overlay-outside-click', {\n        bubbles: true,\n        cancelable: true,\n        detail: { sourceEvent: event },\n      });\n      this.dispatchEvent(evt);\n\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n\n    /**\n     * Listener used to close whe overlay on Escape press, if it is the last one.\n     * @private\n     */\n    _keydownListener(event) {\n      if (!this._last) {\n        return;\n      }\n\n      // Only close modeless overlay on Esc press when it contains focus\n      if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n        return;\n      }\n\n      if (event.key === 'Escape') {\n        const evt = new CustomEvent('vaadin-overlay-escape-press', {\n          bubbles: true,\n          cancelable: true,\n          detail: { sourceEvent: event },\n        });\n        this.dispatchEvent(evt);\n\n        if (this.opened && !evt.defaultPrevented) {\n          this.close(event);\n        }\n      }\n    }\n  };\n"],
  "mappings": "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",
  "names": []
}
