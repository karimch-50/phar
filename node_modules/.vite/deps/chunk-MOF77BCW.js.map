{
  "version": 3,
  "sources": ["../../@vaadin/button/src/vaadin-button-base.js", "../../@vaadin/button/src/vaadin-button.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const buttonStyles = css`\n  :host {\n    display: inline-block;\n    position: relative;\n    outline: none;\n    white-space: nowrap;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  /* Aligns the button with form fields when placed on the same line.\n  Note, to make it work, the form fields should have the same \"::before\" pseudo-element. */\n  .vaadin-button-container::before {\n    content: '\\\\2003';\n    display: inline-block;\n    width: 0;\n    max-height: 100%;\n  }\n\n  .vaadin-button-container {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    min-height: inherit;\n    text-shadow: inherit;\n  }\n\n  [part='prefix'],\n  [part='suffix'] {\n    flex: none;\n  }\n\n  [part='label'] {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  @media (forced-colors: active) {\n    :host {\n      outline: 1px solid;\n      outline-offset: -1px;\n    }\n\n    :host([focused]) {\n      outline-width: 2px;\n    }\n\n    :host([disabled]) {\n      outline-color: GrayText;\n    }\n  }\n`;\n\nexport const buttonTemplate = (html) => html`\n  <div class=\"vaadin-button-container\">\n    <span part=\"prefix\" aria-hidden=\"true\">\n      <slot name=\"prefix\"></slot>\n    </span>\n    <span part=\"label\">\n      <slot></slot>\n    </span>\n    <span part=\"suffix\" aria-hidden=\"true\">\n      <slot name=\"suffix\"></slot>\n    </span>\n  </div>\n  <slot name=\"tooltip\"></slot>\n`;\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { buttonStyles, buttonTemplate } from './vaadin-button-base.js';\nimport { ButtonMixin } from './vaadin-button-mixin.js';\n\nregisterStyles('vaadin-button', buttonStyles, { moduleId: 'vaadin-button-styles' });\n\n/**\n * `<vaadin-button>` is an accessible and customizable button that allows users to perform actions.\n *\n * ```html\n * <vaadin-button>Press me</vaadin-button>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------|-------------\n * `label`   | The label (text) inside the button.\n * `prefix`  | A slot for content before the label (e.g. an icon).\n * `suffix`  | A slot for content after the label (e.g. an icon).\n *\n * The following attributes are available for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `active`     | Set when the button is pressed down, either with mouse, touch or the keyboard.\n * `disabled`   | Set when the button is disabled.\n * `focus-ring` | Set when the button is focused using the keyboard.\n * `focused`    | Set when the button is focused.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ButtonMixin\n * @mixes ControllerMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass Button extends ButtonMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-button';\n  }\n\n  static get template() {\n    return buttonTemplate(html);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n  }\n}\n\ndefineCustomElement(Button);\n\nexport { Button };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,IAAM,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DrB,IAAM,iBAAiB,CAACA,UAASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACvDxC,eAAe,iBAAiB,cAAc,EAAE,UAAU,uBAAuB,CAAC;AAqClF,IAAM,SAAN,cAAqB,YAAY,aAAa,cAAc,gBAAgB,cAAc,CAAC,CAAC,CAAC,EAAE;AAAA,EAC7F,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,WAAW;AACpB,WAAO,eAAe,IAAI;AAAA,EAC5B;AAAA;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,qBAAqB,IAAI,kBAAkB,IAAI;AACpD,SAAK,cAAc,KAAK,kBAAkB;AAAA,EAC5C;AACF;AAEA,oBAAoB,MAAM;",
  "names": ["html"]
}
