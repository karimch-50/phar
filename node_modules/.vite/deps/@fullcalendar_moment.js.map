{
  "version": 3,
  "sources": ["../../@fullcalendar/moment/index.js"],
  "sourcesContent": ["import { createPlugin } from '@fullcalendar/core/index.js';\nimport moment from 'moment';\nimport { CalendarImpl } from '@fullcalendar/core/internal.js';\n\nfunction toMoment(date, calendar) {\n    if (!(calendar instanceof CalendarImpl)) {\n        throw new Error('must supply a CalendarApi instance');\n    }\n    let { dateEnv } = calendar.getCurrentData();\n    return convertToMoment(date, dateEnv.timeZone, null, dateEnv.locale.codes[0]);\n}\nfunction toMomentDuration(fcDuration) {\n    return moment.duration(fcDuration); // moment accepts all the props that fc.Duration already has!\n}\n// Internal Utils\nfunction convertToMoment(input, timeZone, timeZoneOffset, locale) {\n    let mom;\n    if (timeZone === 'local') {\n        mom = moment(input);\n    }\n    else if (timeZone === 'UTC') {\n        mom = moment.utc(input);\n    }\n    else if (moment.tz) {\n        mom = moment.tz(input, timeZone);\n    }\n    else {\n        mom = moment.utc(input);\n        if (timeZoneOffset != null) {\n            mom.utcOffset(timeZoneOffset);\n        }\n    }\n    mom.locale(locale);\n    return mom;\n}\n\nfunction formatWithCmdStr(cmdStr, arg) {\n    let cmd = parseCmdStr(cmdStr);\n    if (arg.end) {\n        let startMom = convertToMoment(arg.start.array, arg.timeZone, arg.start.timeZoneOffset, arg.localeCodes[0]);\n        let endMom = convertToMoment(arg.end.array, arg.timeZone, arg.end.timeZoneOffset, arg.localeCodes[0]);\n        return formatRange(cmd, createMomentFormatFunc(startMom), createMomentFormatFunc(endMom), arg.defaultSeparator);\n    }\n    return convertToMoment(arg.date.array, arg.timeZone, arg.date.timeZoneOffset, arg.localeCodes[0]).format(cmd.whole); // TODO: test for this\n}\nfunction createMomentFormatFunc(mom) {\n    return (cmdStr) => (cmdStr ? mom.format(cmdStr) : '' // because calling with blank string results in ISO8601 :(\n    );\n}\nfunction parseCmdStr(cmdStr) {\n    let parts = cmdStr.match(/^(.*?)\\{(.*)\\}(.*)$/); // TODO: lookbehinds for escape characters\n    if (parts) {\n        let middle = parseCmdStr(parts[2]);\n        return {\n            head: parts[1],\n            middle,\n            tail: parts[3],\n            whole: parts[1] + middle.whole + parts[3],\n        };\n    }\n    return {\n        head: null,\n        middle: null,\n        tail: null,\n        whole: cmdStr,\n    };\n}\nfunction formatRange(cmd, formatStart, formatEnd, separator) {\n    if (cmd.middle) {\n        let startHead = formatStart(cmd.head);\n        let startMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n        let startTail = formatStart(cmd.tail);\n        let endHead = formatEnd(cmd.head);\n        let endMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n        let endTail = formatEnd(cmd.tail);\n        if (startHead === endHead && startTail === endTail) {\n            return startHead +\n                (startMiddle === endMiddle ? startMiddle : startMiddle + separator + endMiddle) +\n                startTail;\n        }\n    }\n    let startWhole = formatStart(cmd.whole);\n    let endWhole = formatEnd(cmd.whole);\n    if (startWhole === endWhole) {\n        return startWhole;\n    }\n    return startWhole + separator + endWhole;\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/moment',\n    cmdFormatter: formatWithCmdStr,\n});\n\nexport { index as default, toMoment, toMomentDuration };\n"],
  "mappings": "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",
  "names": []
}
