{
  "version": 3,
  "sources": ["../../@vaadin/tooltip/src/vaadin-tooltip-overlay-mixin.js", "../../@vaadin/tooltip/src/vaadin-tooltip-overlay-styles.js", "../../@vaadin/tooltip/src/vaadin-tooltip-overlay.js", "../../@vaadin/tooltip/src/vaadin-tooltip-mixin.js", "../../@vaadin/tooltip/src/vaadin-tooltip.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayMixin } from '@vaadin/overlay/src/vaadin-overlay-mixin.js';\nimport { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';\n\n/**\n * A mixin providing common tooltip overlay functionality.\n *\n * @polymerMixin\n * @mixes PositionMixin\n * @mixes OverlayMixin\n */\nexport const TooltipOverlayMixin = (superClass) =>\n  class TooltipOverlayMixinClass extends PositionMixin(OverlayMixin(superClass)) {\n    static get properties() {\n      return {\n        position: {\n          type: String,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    requestContentUpdate() {\n      super.requestContentUpdate();\n\n      this.toggleAttribute('hidden', this.textContent.trim() === '');\n\n      // Copy custom properties from the tooltip\n      if (this.positionTarget && this.owner) {\n        const style = getComputedStyle(this.owner);\n        ['top', 'bottom', 'start', 'end'].forEach((prop) => {\n          this.style.setProperty(\n            `--vaadin-tooltip-offset-${prop}`,\n            style.getPropertyValue(`--vaadin-tooltip-offset-${prop}`),\n          );\n        });\n      }\n    }\n\n    /**\n     * @protected\n     * @override\n     */\n    _updatePosition() {\n      super._updatePosition();\n\n      if (!this.positionTarget) {\n        return;\n      }\n\n      // Center the tooltip overlay horizontally\n      if (this.position === 'bottom' || this.position === 'top') {\n        const targetRect = this.positionTarget.getBoundingClientRect();\n        const overlayRect = this.$.overlay.getBoundingClientRect();\n\n        const offset = targetRect.width / 2 - overlayRect.width / 2;\n\n        if (this.style.left) {\n          const left = overlayRect.left + offset;\n          if (left > 0) {\n            this.style.left = `${left}px`;\n          }\n        }\n\n        if (this.style.right) {\n          const right = parseFloat(this.style.right) + offset;\n          if (right > 0) {\n            this.style.right = `${right}px`;\n          }\n        }\n      }\n\n      // Center the tooltip overlay vertically\n      if (this.position === 'start' || this.position === 'end') {\n        const targetRect = this.positionTarget.getBoundingClientRect();\n        const overlayRect = this.$.overlay.getBoundingClientRect();\n\n        const offset = targetRect.height / 2 - overlayRect.height / 2;\n        this.style.top = `${overlayRect.top + offset}px`;\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const tooltipOverlayStyles = css`\n  :host {\n    z-index: 1100;\n  }\n\n  [part='overlay'] {\n    max-width: 40ch;\n  }\n\n  :host([position^='top'][top-aligned]) [part='overlay'],\n  :host([position^='bottom'][top-aligned]) [part='overlay'] {\n    margin-top: var(--vaadin-tooltip-offset-top, 0);\n  }\n\n  :host([position^='top'][bottom-aligned]) [part='overlay'],\n  :host([position^='bottom'][bottom-aligned]) [part='overlay'] {\n    margin-bottom: var(--vaadin-tooltip-offset-bottom, 0);\n  }\n\n  :host([position^='start'][start-aligned]) [part='overlay'],\n  :host([position^='end'][start-aligned]) [part='overlay'] {\n    margin-inline-start: var(--vaadin-tooltip-offset-start, 0);\n  }\n\n  :host([position^='start'][end-aligned]) [part='overlay'],\n  :host([position^='end'][end-aligned]) [part='overlay'] {\n    margin-inline-end: var(--vaadin-tooltip-offset-end, 0);\n  }\n\n  @media (forced-colors: active) {\n    [part='overlay'] {\n      outline: 1px dashed;\n    }\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { TooltipOverlayMixin } from './vaadin-tooltip-overlay-mixin.js';\nimport { tooltipOverlayStyles } from './vaadin-tooltip-overlay-styles.js';\n\nregisterStyles('vaadin-tooltip-overlay', [overlayStyles, tooltipOverlayStyles], {\n  moduleId: 'vaadin-tooltip-overlay-styles',\n});\n\n/**\n * An element used internally by `<vaadin-tooltip>`. Not intended to be used separately.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes DirMixin\n * @mixes ThemableMixin\n * @mixes TooltipOverlayMixin\n * @private\n */\nclass TooltipOverlay extends TooltipOverlayMixin(DirMixin(ThemableMixin(PolymerElement))) {\n  static get is() {\n    return 'vaadin-tooltip-overlay';\n  }\n\n  static get template() {\n    return html`\n      <div id=\"backdrop\" part=\"backdrop\" hidden></div>\n      <div part=\"overlay\" id=\"overlay\">\n        <div part=\"content\" id=\"content\"><slot></slot></div>\n      </div>\n    `;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // When setting `manual` and `opened` attributes, the overlay is already moved to body\n    // by the time when `ready()` callback of the `vaadin-tooltip` is executed by Polymer,\n    // so querySelector() would return null. So we use this workaround to set properties.\n    this.owner = this.__dataHost;\n    this.owner._overlayElement = this;\n  }\n}\n\ndefineCustomElement(TooltipOverlay);\n", "/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isKeyboardActive } from '@vaadin/a11y-base/src/focus-utils.js';\nimport { microTask } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { addValueToAttribute, removeValueFromAttribute } from '@vaadin/component-base/src/dom-utils.js';\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\n\nconst DEFAULT_DELAY = 500;\n\nlet defaultFocusDelay = DEFAULT_DELAY;\nlet defaultHoverDelay = DEFAULT_DELAY;\nlet defaultHideDelay = DEFAULT_DELAY;\n\nconst closing = new Set();\n\nlet warmedUp = false;\nlet warmUpTimeout = null;\nlet cooldownTimeout = null;\n\n/**\n * Resets the global tooltip warmup and cooldown state.\n * Only for internal use in tests.\n * @private\n */\nexport function resetGlobalTooltipState() {\n  warmedUp = false;\n  clearTimeout(warmUpTimeout);\n  clearTimeout(cooldownTimeout);\n  closing.clear();\n}\n\n/**\n * Controller for handling tooltip opened state.\n */\nclass TooltipStateController {\n  constructor(host) {\n    this.host = host;\n  }\n\n  /** @private */\n  get openedProp() {\n    return this.host.manual ? 'opened' : '_autoOpened';\n  }\n\n  /** @private */\n  get focusDelay() {\n    const tooltip = this.host;\n    return tooltip.focusDelay != null && tooltip.focusDelay > 0 ? tooltip.focusDelay : defaultFocusDelay;\n  }\n\n  /** @private */\n  get hoverDelay() {\n    const tooltip = this.host;\n    return tooltip.hoverDelay != null && tooltip.hoverDelay > 0 ? tooltip.hoverDelay : defaultHoverDelay;\n  }\n\n  /** @private */\n  get hideDelay() {\n    const tooltip = this.host;\n    return tooltip.hideDelay != null && tooltip.hideDelay > 0 ? tooltip.hideDelay : defaultHideDelay;\n  }\n\n  /**\n   * Whether closing is currently in progress.\n   * @return {boolean}\n   */\n  get isClosing() {\n    return closing.has(this.host);\n  }\n\n  /**\n   * Schedule opening the tooltip.\n   * @param {Object} options\n   */\n  open(options = { immediate: false }) {\n    const { immediate, hover, focus } = options;\n    const isHover = hover && this.hoverDelay > 0;\n    const isFocus = focus && this.focusDelay > 0;\n\n    if (!immediate && (isHover || isFocus) && !this.__closeTimeout) {\n      this.__warmupTooltip(isFocus);\n    } else {\n      this.__showTooltip();\n    }\n  }\n\n  /**\n   * Schedule closing the tooltip.\n   * @param {boolean} immediate\n   */\n  close(immediate) {\n    if (!immediate && this.hideDelay > 0) {\n      this.__scheduleClose();\n    } else {\n      this.__abortClose();\n      this._setOpened(false);\n    }\n\n    this.__abortWarmUp();\n\n    if (warmedUp) {\n      // Re-start cooldown timer on each tooltip closing.\n      this.__abortCooldown();\n      this.__scheduleCooldown();\n    }\n  }\n\n  /** @private */\n  _isOpened() {\n    return this.host[this.openedProp];\n  }\n\n  /** @private */\n  _setOpened(opened) {\n    this.host[this.openedProp] = opened;\n  }\n\n  /** @private */\n  __flushClosingTooltips() {\n    closing.forEach((tooltip) => {\n      tooltip._stateController.close(true);\n      closing.delete(tooltip);\n    });\n  }\n\n  /** @private */\n  __showTooltip() {\n    this.__abortClose();\n    this.__flushClosingTooltips();\n\n    this._setOpened(true);\n    warmedUp = true;\n\n    // Abort previously scheduled timers.\n    this.__abortWarmUp();\n    this.__abortCooldown();\n  }\n\n  /** @private */\n  __warmupTooltip(isFocus) {\n    if (!this._isOpened()) {\n      // First tooltip is opened, warm up.\n      if (!warmedUp) {\n        this.__scheduleWarmUp(isFocus);\n      } else {\n        // Warmed up, show another tooltip.\n        this.__showTooltip();\n      }\n    }\n  }\n\n  /** @private */\n  __abortClose() {\n    if (this.__closeTimeout) {\n      clearTimeout(this.__closeTimeout);\n      this.__closeTimeout = null;\n    }\n  }\n\n  /** @private */\n  __abortCooldown() {\n    if (cooldownTimeout) {\n      clearTimeout(cooldownTimeout);\n      cooldownTimeout = null;\n    }\n  }\n\n  /** @private */\n  __abortWarmUp() {\n    if (warmUpTimeout) {\n      clearTimeout(warmUpTimeout);\n      warmUpTimeout = null;\n    }\n  }\n\n  /** @private */\n  __scheduleClose() {\n    if (this._isOpened()) {\n      closing.add(this.host);\n\n      this.__closeTimeout = setTimeout(() => {\n        closing.delete(this.host);\n        this.__closeTimeout = null;\n        this._setOpened(false);\n      }, this.hideDelay);\n    }\n  }\n\n  /** @private */\n  __scheduleCooldown() {\n    cooldownTimeout = setTimeout(() => {\n      cooldownTimeout = null;\n      warmedUp = false;\n    }, this.hideDelay);\n  }\n\n  /** @private */\n  __scheduleWarmUp(isFocus) {\n    const delay = isFocus ? this.focusDelay : this.hoverDelay;\n    warmUpTimeout = setTimeout(() => {\n      warmUpTimeout = null;\n      warmedUp = true;\n      this.__showTooltip();\n    }, delay);\n  }\n}\n\n/**\n * A mixin providing common tooltip functionality.\n *\n * @polymerMixin\n * @mixes OverlayClassMixin\n */\nexport const TooltipMixin = (superClass) =>\n  class TooltipMixinClass extends OverlayClassMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * Element used to link with the `aria-describedby`\n         * attribute. Supports array of multiple elements.\n         * When not set, defaults to `target`.\n         */\n        ariaTarget: {\n          type: Object,\n        },\n\n        /**\n         * Object with properties passed to `generator` and\n         * `shouldShow` functions for generating tooltip text\n         * or detecting whether to show the tooltip or not.\n         */\n        context: {\n          type: Object,\n          value: () => {\n            return {};\n          },\n        },\n\n        /**\n         * The delay in milliseconds before the tooltip\n         * is opened on keyboard focus, when not in manual mode.\n         * @attr {number} focus-delay\n         */\n        focusDelay: {\n          type: Number,\n        },\n\n        /**\n         * The id of the element used as a tooltip trigger.\n         * The element should be in the DOM by the time when\n         * the attribute is set, otherwise a warning is shown.\n         */\n        for: {\n          type: String,\n          observer: '__forChanged',\n        },\n\n        /**\n         * Function used to generate the tooltip content.\n         * When provided, it overrides the `text` property.\n         * Use the `context` property to provide argument\n         * that can be passed to the generator function.\n         */\n        generator: {\n          type: Object,\n        },\n\n        /**\n         * The delay in milliseconds before the tooltip\n         * is closed on losing hover, when not in manual mode.\n         * On blur, the tooltip is closed immediately.\n         * @attr {number} hide-delay\n         */\n        hideDelay: {\n          type: Number,\n        },\n\n        /**\n         * The delay in milliseconds before the tooltip\n         * is opened on hover, when not in manual mode.\n         * @attr {number} hover-delay\n         */\n        hoverDelay: {\n          type: Number,\n        },\n\n        /**\n         * When true, the tooltip is controlled programmatically\n         * instead of reacting to focus and mouse events.\n         */\n        manual: {\n          type: Boolean,\n          value: false,\n          sync: true,\n        },\n\n        /**\n         * When true, the tooltip is opened programmatically.\n         * Only works if `manual` is set to `true`.\n         */\n        opened: {\n          type: Boolean,\n          value: false,\n          sync: true,\n        },\n\n        /**\n         * Position of the tooltip with respect to its target.\n         * Supported values: `top-start`, `top`, `top-end`,\n         * `bottom-start`, `bottom`, `bottom-end`, `start-top`,\n         * `start`, `start-bottom`, `end-top`, `end`, `end-bottom`.\n         */\n        position: {\n          type: String,\n        },\n\n        /**\n         * Function used to detect whether to show the tooltip based on a condition,\n         * called every time the tooltip is about to be shown on hover and focus.\n         * The function takes two parameters: `target` and `context`, which contain\n         * values of the corresponding tooltip properties at the time of calling.\n         * The tooltip is only shown when the function invocation returns `true`.\n         */\n        shouldShow: {\n          type: Object,\n          value: () => {\n            return (_target, _context) => true;\n          },\n        },\n\n        /**\n         * Reference to the element used as a tooltip trigger.\n         * The target must be placed in the same shadow scope.\n         * Defaults to an element referenced with `for`.\n         */\n        target: {\n          type: Object,\n          observer: '__targetChanged',\n        },\n\n        /**\n         * String used as a tooltip content.\n         */\n        text: {\n          type: String,\n          observer: '__textChanged',\n        },\n\n        /**\n         * Set to true when the overlay is opened using auto-added\n         * event listeners: mouseenter and focusin (keyboard only).\n         * @protected\n         */\n        _autoOpened: {\n          type: Boolean,\n          observer: '__autoOpenedChanged',\n          sync: true,\n        },\n\n        /**\n         * Element used to link with the `aria-describedby`\n         * attribute. When not set, defaults to `target`.\n         * @protected\n         */\n        _effectiveAriaTarget: {\n          type: Object,\n          computed: '__computeAriaTarget(ariaTarget, target)',\n          observer: '__effectiveAriaTargetChanged',\n        },\n\n        /** @private */\n        __effectivePosition: {\n          type: String,\n          computed: '__computePosition(position, _position)',\n        },\n\n        /** @private */\n        __isTargetHidden: {\n          type: Boolean,\n          value: false,\n        },\n\n        /** @private */\n        _isConnected: {\n          type: Boolean,\n          sync: true,\n        },\n\n        /**\n         * Default value used when `position` property is not set.\n         * @protected\n         */\n        _position: {\n          type: String,\n          value: 'bottom',\n        },\n\n        /** @private */\n        _srLabel: {\n          type: Object,\n        },\n\n        /** @private */\n        _overlayContent: {\n          type: String,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '__generatorChanged(_overlayElement, generator, context)',\n        '__updateSrLabelText(_srLabel, _overlayContent)',\n      ];\n    }\n\n    /**\n     * Sets the default focus delay to be used by all tooltip instances,\n     * except for those that have focus delay configured using property.\n     *\n     * @param {number} delay\n     */\n    static setDefaultFocusDelay(focusDelay) {\n      defaultFocusDelay = focusDelay != null && focusDelay >= 0 ? focusDelay : DEFAULT_DELAY;\n    }\n\n    /**\n     * Sets the default hide delay to be used by all tooltip instances,\n     * except for those that have hide delay configured using property.\n     *\n     * @param {number} hideDelay\n     */\n    static setDefaultHideDelay(hideDelay) {\n      defaultHideDelay = hideDelay != null && hideDelay >= 0 ? hideDelay : DEFAULT_DELAY;\n    }\n\n    /**\n     * Sets the default hover delay to be used by all tooltip instances,\n     * except for those that have hover delay configured using property.\n     *\n     * @param {number} delay\n     */\n    static setDefaultHoverDelay(hoverDelay) {\n      defaultHoverDelay = hoverDelay != null && hoverDelay >= 0 ? hoverDelay : DEFAULT_DELAY;\n    }\n\n    constructor() {\n      super();\n\n      this._uniqueId = `vaadin-tooltip-${generateUniqueId()}`;\n      this._renderer = this.__tooltipRenderer.bind(this);\n\n      this.__onFocusin = this.__onFocusin.bind(this);\n      this.__onFocusout = this.__onFocusout.bind(this);\n      this.__onMouseDown = this.__onMouseDown.bind(this);\n      this.__onMouseEnter = this.__onMouseEnter.bind(this);\n      this.__onMouseLeave = this.__onMouseLeave.bind(this);\n      this.__onKeyDown = this.__onKeyDown.bind(this);\n      this.__onOverlayOpen = this.__onOverlayOpen.bind(this);\n\n      this.__targetVisibilityObserver = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => this.__onTargetVisibilityChange(entry.isIntersecting));\n        },\n        { threshold: 0 },\n      );\n\n      this._stateController = new TooltipStateController(this);\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      this._isConnected = true;\n\n      document.body.addEventListener('vaadin-overlay-open', this.__onOverlayOpen);\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      if (this._autoOpened) {\n        this._stateController.close(true);\n      }\n      this._isConnected = false;\n\n      document.body.removeEventListener('vaadin-overlay-open', this.__onOverlayOpen);\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this._srLabelController = new SlotController(this, 'sr-label', 'div', {\n        initializer: (element) => {\n          element.id = this._uniqueId;\n          element.setAttribute('role', 'tooltip');\n          this._srLabel = element;\n        },\n      });\n      this.addController(this._srLabelController);\n    }\n\n    /** @private */\n    __computeHorizontalAlign(position) {\n      return ['top-end', 'bottom-end', 'start-top', 'start', 'start-bottom'].includes(position) ? 'end' : 'start';\n    }\n\n    /** @private */\n    __computeNoHorizontalOverlap(position) {\n      return ['start-top', 'start', 'start-bottom', 'end-top', 'end', 'end-bottom'].includes(position);\n    }\n\n    /** @private */\n    __computeNoVerticalOverlap(position) {\n      return ['top-start', 'top-end', 'top', 'bottom-start', 'bottom', 'bottom-end'].includes(position);\n    }\n\n    /** @private */\n    __computeVerticalAlign(position) {\n      return ['top-start', 'top-end', 'top', 'start-bottom', 'end-bottom'].includes(position) ? 'bottom' : 'top';\n    }\n\n    /** @private */\n    __computeOpened(manual, opened, autoOpened, connected) {\n      return connected && (manual ? opened : autoOpened);\n    }\n\n    /** @private */\n    __computePosition(position, defaultPosition) {\n      return position || defaultPosition;\n    }\n\n    /** @private */\n    __autoOpenedChanged(opened, oldOpened) {\n      if (opened) {\n        document.addEventListener('keydown', this.__onKeyDown, true);\n      } else if (oldOpened) {\n        document.removeEventListener('keydown', this.__onKeyDown, true);\n      }\n    }\n\n    /** @private */\n    __forChanged(forId) {\n      if (forId) {\n        this.__setTargetByIdDebouncer = Debouncer.debounce(this.__setTargetByIdDebouncer, microTask, () =>\n          this.__setTargetById(forId),\n        );\n      }\n    }\n\n    /** @private */\n    __setTargetById(targetId) {\n      if (!this.isConnected) {\n        return;\n      }\n\n      const target = this.getRootNode().getElementById(targetId);\n\n      if (target) {\n        this.target = target;\n      } else {\n        console.warn(`No element with id=\"${targetId}\" found to show tooltip.`);\n      }\n    }\n\n    /** @private */\n    __targetChanged(target, oldTarget) {\n      if (oldTarget) {\n        oldTarget.removeEventListener('mouseenter', this.__onMouseEnter);\n        oldTarget.removeEventListener('mouseleave', this.__onMouseLeave);\n        oldTarget.removeEventListener('focusin', this.__onFocusin);\n        oldTarget.removeEventListener('focusout', this.__onFocusout);\n        oldTarget.removeEventListener('mousedown', this.__onMouseDown);\n\n        this.__targetVisibilityObserver.unobserve(oldTarget);\n      }\n\n      if (target) {\n        target.addEventListener('mouseenter', this.__onMouseEnter);\n        target.addEventListener('mouseleave', this.__onMouseLeave);\n        target.addEventListener('focusin', this.__onFocusin);\n        target.addEventListener('focusout', this.__onFocusout);\n        target.addEventListener('mousedown', this.__onMouseDown);\n\n        // Wait before observing to avoid Chrome issue.\n        requestAnimationFrame(() => {\n          this.__targetVisibilityObserver.observe(target);\n        });\n      }\n    }\n\n    /** @private */\n    __onFocusin(event) {\n      if (this.manual) {\n        return;\n      }\n\n      // Only open on keyboard focus.\n      if (!isKeyboardActive()) {\n        return;\n      }\n\n      // Do not re-open while focused if closed on Esc or mousedown.\n      if (this.target.contains(event.relatedTarget)) {\n        return;\n      }\n\n      if (!this.__isShouldShow()) {\n        return;\n      }\n\n      this.__focusInside = true;\n\n      if (!this.__isTargetHidden && (!this.__hoverInside || !this._autoOpened)) {\n        this._stateController.open({ focus: true });\n      }\n    }\n\n    /** @private */\n    __onFocusout(event) {\n      if (this.manual) {\n        return;\n      }\n\n      // Do not close when moving focus within a component.\n      if (this.target.contains(event.relatedTarget)) {\n        return;\n      }\n\n      this.__focusInside = false;\n\n      if (!this.__hoverInside) {\n        this._stateController.close(true);\n      }\n    }\n\n    /** @private */\n    __onKeyDown(event) {\n      if (event.key === 'Escape') {\n        event.stopPropagation();\n        this._stateController.close(true);\n      }\n    }\n\n    /** @private */\n    __onMouseDown() {\n      this._stateController.close(true);\n    }\n\n    /** @private */\n    __onMouseEnter() {\n      if (this.manual) {\n        return;\n      }\n\n      if (!this.__isShouldShow()) {\n        return;\n      }\n\n      if (this.__hoverInside) {\n        // Already hovering inside the element, do nothing.\n        return;\n      }\n\n      this.__hoverInside = true;\n\n      if (!this.__isTargetHidden && (!this.__focusInside || !this._autoOpened)) {\n        this._stateController.open({ hover: true });\n      }\n    }\n\n    /** @private */\n    __onMouseLeave(event) {\n      if (event.relatedTarget !== this._overlayElement) {\n        this.__handleMouseLeave();\n      }\n    }\n\n    /** @protected */\n    __onOverlayMouseEnter() {\n      // Retain opened state when moving pointer over the overlay.\n      // Closing can start due to an offset between the target and\n      // the overlay itself. If that's the case, re-open overlay.\n      // See https://github.com/vaadin/web-components/issues/6316\n      if (this._stateController.isClosing) {\n        this._stateController.open({ immediate: true });\n      }\n    }\n\n    /** @protected */\n    __onOverlayMouseLeave(event) {\n      if (event.relatedTarget !== this.target) {\n        this.__handleMouseLeave();\n      }\n    }\n\n    /** @private */\n    __handleMouseLeave() {\n      if (this.manual) {\n        return;\n      }\n\n      this.__hoverInside = false;\n\n      if (!this.__focusInside) {\n        this._stateController.close();\n      }\n    }\n\n    /** @private */\n    __onOverlayOpen() {\n      if (this.manual) {\n        return;\n      }\n\n      // Close tooltip if another overlay is opened on top of the tooltip's overlay\n      if (this._overlayElement.opened && !this._overlayElement._last) {\n        this._stateController.close(true);\n      }\n    }\n\n    /** @private */\n    __onTargetVisibilityChange(isVisible) {\n      const oldHidden = this.__isTargetHidden;\n      this.__isTargetHidden = !isVisible;\n\n      // Open the overlay when the target becomes visible and has focus or hover.\n      if (oldHidden && isVisible && (this.__focusInside || this.__hoverInside)) {\n        this._stateController.open({ immediate: true });\n        return;\n      }\n\n      // Close the overlay when the target is no longer fully visible.\n      if (!isVisible && this._autoOpened) {\n        this._stateController.close(true);\n      }\n    }\n\n    /** @private */\n    __isShouldShow() {\n      if (typeof this.shouldShow === 'function' && this.shouldShow(this.target, this.context) !== true) {\n        return false;\n      }\n\n      return true;\n    }\n\n    /** @private */\n    __textChanged(text, oldText) {\n      if (this._overlayElement && (text || oldText)) {\n        this._overlayElement.requestContentUpdate();\n      }\n    }\n\n    /** @private */\n    __tooltipRenderer(root) {\n      root.textContent = typeof this.generator === 'function' ? this.generator(this.context) : this.text;\n\n      // Update the sr-only label text content\n      this._overlayContent = root.textContent;\n    }\n\n    /** @private */\n    __computeAriaTarget(ariaTarget, target) {\n      const isElementNode = (el) => el && el.nodeType === Node.ELEMENT_NODE;\n      const isAriaTargetSet = Array.isArray(ariaTarget) ? ariaTarget.some(isElementNode) : ariaTarget;\n      return isAriaTargetSet ? ariaTarget : target;\n    }\n\n    /** @private */\n    __effectiveAriaTargetChanged(ariaTarget, oldAriaTarget) {\n      if (oldAriaTarget) {\n        [oldAriaTarget].flat().forEach((target) => {\n          removeValueFromAttribute(target, 'aria-describedby', this._uniqueId);\n        });\n      }\n\n      if (ariaTarget) {\n        [ariaTarget].flat().forEach((target) => {\n          addValueToAttribute(target, 'aria-describedby', this._uniqueId);\n        });\n      }\n    }\n\n    /** @private */\n    __generatorChanged(overlayElement, generator, context) {\n      if (overlayElement) {\n        if (generator !== this.__oldTextGenerator || context !== this.__oldContext) {\n          overlayElement.requestContentUpdate();\n        }\n\n        this.__oldTextGenerator = generator;\n        this.__oldContext = context;\n      }\n    }\n\n    /** @private */\n    __updateSrLabelText(srLabel, textContent) {\n      if (srLabel) {\n        srLabel.textContent = textContent;\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-tooltip-overlay.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport { TooltipMixin } from './vaadin-tooltip-mixin.js';\n\n/**\n * `<vaadin-tooltip>` is a Web Component for creating tooltips.\n *\n * ```html\n * <button id=\"confirm\">Confirm</button>\n * <vaadin-tooltip text=\"Click to save changes\" for=\"confirm\"></vaadin-tooltip>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-tooltip>` uses `<vaadin-tooltip-overlay>` internal\n * themable component as the actual visible overlay.\n *\n * See [`<vaadin-overlay>`](#/elements/vaadin-overlay) documentation\n * for `<vaadin-tooltip-overlay>` parts.\n *\n * The following state attributes are available for styling:\n *\n * Attribute        | Description\n * -----------------|----------------------------------------\n * `position`       | Reflects the `position` property value.\n *\n * Note: the `theme` attribute value set on `<vaadin-tooltip>` is\n * propagated to the internal `<vaadin-tooltip-overlay>` component.\n *\n * ### Custom CSS Properties\n *\n * The following custom CSS properties are available on the `<vaadin-tooltip>` element:\n *\n * Custom CSS property              | Description\n * ---------------------------------|-------------\n * `--vaadin-tooltip-offset-top`    | Used as an offset when the tooltip is aligned vertically below the target\n * `--vaadin-tooltip-offset-bottom` | Used as an offset when the tooltip is aligned vertically above the target\n * `--vaadin-tooltip-offset-start`  | Used as an offset when the tooltip is aligned horizontally after the target\n * `--vaadin-tooltip-offset-end`    | Used as an offset when the tooltip is aligned horizontally before the target\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes ElementMixin\n * @mixes ThemePropertyMixin\n * @mixes TooltipMixin\n */\nclass Tooltip extends TooltipMixin(ThemePropertyMixin(ElementMixin(ControllerMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-tooltip';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: none;\n        }\n      </style>\n      <vaadin-tooltip-overlay\n        renderer=\"[[_renderer]]\"\n        theme$=\"[[_theme]]\"\n        opened=\"[[__computeOpened(manual, opened, _autoOpened, _isConnected)]]\"\n        position-target=\"[[target]]\"\n        position=\"[[__effectivePosition]]\"\n        no-horizontal-overlap$=\"[[__computeNoHorizontalOverlap(__effectivePosition)]]\"\n        no-vertical-overlap$=\"[[__computeNoVerticalOverlap(__effectivePosition)]]\"\n        horizontal-align=\"[[__computeHorizontalAlign(__effectivePosition)]]\"\n        vertical-align=\"[[__computeVerticalAlign(__effectivePosition)]]\"\n        on-mouseenter=\"__onOverlayMouseEnter\"\n        on-mouseleave=\"__onOverlayMouseLeave\"\n        modeless\n      ></vaadin-tooltip-overlay>\n\n      <slot name=\"sr-label\"></slot>\n    `;\n  }\n}\n\ndefineCustomElement(Tooltip);\n\nexport { Tooltip };\n"],
  "mappings": "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",
  "names": []
}
