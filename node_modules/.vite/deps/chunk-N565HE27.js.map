{
  "version": 3,
  "sources": ["../../@vaadin/field-base/src/pattern-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { InputConstraintsMixin } from './input-constraints-mixin.js';\n\n/**\n * A mixin to provide `pattern` property.\n *\n * @polymerMixin\n * @mixes InputConstraintsMixin\n */\nexport const PatternMixin = (superclass) =>\n  class PatternMixinClass extends InputConstraintsMixin(superclass) {\n    static get properties() {\n      return {\n        /**\n         * A regular expression that the value is checked against.\n         * The pattern must match the entire value, not just some subset.\n         */\n        pattern: {\n          type: String,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'pattern'];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'pattern'];\n    }\n  };\n"],
  "mappings": ";;;;;AAaO,IAAM,eAAe,CAAC,eAC3B,MAAM,0BAA0B,sBAAsB,UAAU,EAAE;AAAA,EAChE,WAAW,aAAa;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKL,SAAS;AAAA,QACP,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAW,gBAAgB;AACzB,WAAO,CAAC,GAAG,MAAM,eAAe,SAAS;AAAA,EAC3C;AAAA,EAEA,WAAW,cAAc;AACvB,WAAO,CAAC,GAAG,MAAM,aAAa,SAAS;AAAA,EACzC;AACF;",
  "names": []
}
