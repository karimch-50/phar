{
  "version": 3,
  "sources": ["../../@vaadin/radio-group/theme/lumo/vaadin-radio-button-styles.js", "../../@vaadin/radio-group/src/vaadin-radio-button-mixin.js", "../../@vaadin/radio-group/src/vaadin-radio-button-styles.js", "../../@vaadin/radio-group/src/vaadin-radio-button.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-radio-button',\n  css`\n    :host {\n      color: var(--vaadin-radio-button-label-color, var(--lumo-body-text-color));\n      font-size: var(--vaadin-radio-button-label-font-size, var(--lumo-font-size-m));\n      font-family: var(--lumo-font-family);\n      line-height: var(--lumo-line-height-s);\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n      cursor: default;\n      outline: none;\n      --_radio-button-size: var(--vaadin-radio-button-size, calc(var(--lumo-size-m) / 2));\n      --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\n      --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\n      --_selection-color: var(--vaadin-selection-color, var(--lumo-primary-color));\n    }\n\n    :host([has-label]) ::slotted(label) {\n      padding: var(\n        --vaadin-radio-button-label-padding,\n        var(--lumo-space-xs) var(--lumo-space-s) var(--lumo-space-xs) var(--lumo-space-xs)\n      );\n    }\n\n    [part='radio'] {\n      width: var(--_radio-button-size);\n      height: var(--_radio-button-size);\n      margin: var(--lumo-space-xs);\n      position: relative;\n      border-radius: 50%;\n      background: var(--vaadin-radio-button-background, var(--lumo-contrast-20pct));\n      transition: transform 0.2s cubic-bezier(0.12, 0.32, 0.54, 2), background-color 0.15s;\n      will-change: transform;\n      cursor: var(--lumo-clickable-cursor);\n      /* Default field border color */\n      --_input-border-color: var(--vaadin-input-field-border-color, var(--lumo-contrast-50pct));\n    }\n\n    /* Used for activation \"halo\" */\n    [part='radio']::before {\n      pointer-events: none;\n      color: transparent;\n      width: 100%;\n      height: 100%;\n      line-height: var(--_radio-button-size);\n      border-radius: inherit;\n      background-color: inherit;\n      transform: scale(1.4);\n      opacity: 0;\n      transition: transform 0.1s, opacity 0.8s;\n      will-change: transform, opacity;\n    }\n\n    /* Used for the dot */\n    [part='radio']::after {\n      content: '';\n      pointer-events: none;\n      width: 0;\n      height: 0;\n      border: var(--vaadin-radio-button-dot-size, 3px) solid\n        var(--vaadin-radio-button-dot-color, var(--lumo-primary-contrast-color));\n      border-radius: 50%;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%) scale(0);\n      transition: 0.25s transform;\n      will-change: transform;\n      background-clip: content-box;\n    }\n\n    :host([checked]) {\n      --vaadin-input-field-border-color: transparent;\n    }\n\n    :host([checked]) [part='radio'] {\n      background-color: var(--_selection-color);\n    }\n\n    :host([checked]) [part='radio']::after {\n      transform: translate(-50%, -50%) scale(1);\n    }\n\n    :host(:not([checked]):not([disabled]):hover) [part='radio'] {\n      background: var(--vaadin-radio-button-background-hover, var(--lumo-contrast-30pct));\n    }\n\n    :host([active]) [part='radio'] {\n      transform: scale(0.9);\n      transition-duration: 0.05s;\n    }\n\n    :host([active][checked]) [part='radio'] {\n      transform: scale(1.1);\n    }\n\n    :host([active]:not([checked])) [part='radio']::before {\n      transition-duration: 0.01s, 0.01s;\n      transform: scale(0);\n      opacity: 0.4;\n    }\n\n    :host([focus-ring]) [part='radio'] {\n      box-shadow: 0 0 0 1px var(--lumo-base-color), 0 0 0 calc(var(--_focus-ring-width) + 1px) var(--_focus-ring-color),\n        inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\n    }\n\n    :host([disabled]) {\n      pointer-events: none;\n      color: var(--lumo-disabled-text-color);\n      --vaadin-input-field-border-color: var(--lumo-contrast-20pct);\n    }\n\n    :host([disabled]) ::slotted(label) {\n      color: inherit;\n    }\n\n    :host([disabled]) [part='radio'] {\n      background-color: var(--lumo-contrast-10pct);\n    }\n\n    :host([disabled]) [part='radio']::after {\n      border-color: var(--lumo-contrast-30pct);\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl'][has-label]) ::slotted(label) {\n      padding: var(--lumo-space-xs) var(--lumo-space-xs) var(--lumo-space-xs) var(--lumo-space-s);\n    }\n  `,\n  { moduleId: 'lumo-radio-button' },\n);\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ActiveMixin } from '@vaadin/a11y-base/src/active-mixin.js';\nimport { DelegateFocusMixin } from '@vaadin/a11y-base/src/delegate-focus-mixin.js';\nimport { CheckedMixin } from '@vaadin/field-base/src/checked-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelMixin } from '@vaadin/field-base/src/label-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\n\n/**\n * A mixin providing common radio-button functionality.\n *\n * @polymerMixin\n * @mixes ActiveMixin\n * @mixes CheckedMixin\n * @mixes DelegateFocusMixin\n * @mixes LabelMixin\n */\nexport const RadioButtonMixin = (superclass) =>\n  class RadioButtonMixinClass extends LabelMixin(CheckedMixin(DelegateFocusMixin(ActiveMixin(superclass)))) {\n    static get properties() {\n      return {\n        /**\n         * The name of the radio button.\n         *\n         * @type {string}\n         */\n        name: {\n          type: String,\n          value: '',\n        },\n\n        /**\n         * Indicates whether the element can be focused and where it participates in sequential keyboard navigation.\n         *\n         * @override\n         * @protected\n         */\n        tabindex: {\n          type: Number,\n          value: 0,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    /** @override */\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'name'];\n    }\n\n    constructor() {\n      super();\n\n      this._setType('radio');\n\n      // Set the string \"on\" as the default value for the radio button following the HTML specification:\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      this.value = 'on';\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(\n        new InputController(this, (input) => {\n          this._setInputElement(input);\n          this._setFocusElement(input);\n          this.stateTarget = input;\n          this.ariaTarget = input;\n        }),\n      );\n      this.addController(new LabelledInputController(this.inputElement, this._labelController));\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const radioButtonStyles = css`\n  :host {\n    display: inline-block;\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  :host([disabled]) {\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  .vaadin-radio-button-container {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: baseline;\n  }\n\n  [part='radio'],\n  ::slotted(input),\n  ::slotted(label) {\n    grid-row: 1;\n  }\n\n  [part='radio'],\n  ::slotted(input) {\n    grid-column: 1;\n  }\n\n  [part='radio'] {\n    width: var(--vaadin-radio-button-size, 1em);\n    height: var(--vaadin-radio-button-size, 1em);\n    --_input-border-width: var(--vaadin-input-field-border-width, 0);\n    --_input-border-color: var(--vaadin-input-field-border-color, transparent);\n    box-shadow: inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\n  }\n\n  [part='radio']::before {\n    display: block;\n    content: '\\\\202F';\n    line-height: var(--vaadin-radio-button-size, 1em);\n    contain: paint;\n  }\n\n  /* visually hidden */\n  ::slotted(input) {\n    opacity: 0;\n    cursor: inherit;\n    margin: 0;\n    align-self: stretch;\n    -webkit-appearance: none;\n    width: initial;\n    height: initial;\n  }\n\n  @media (forced-colors: active) {\n    [part='radio'] {\n      outline: 1px solid;\n      outline-offset: -1px;\n    }\n\n    :host([focused]) [part='radio'] {\n      outline-width: 2px;\n    }\n\n    :host([disabled]) [part='radio'] {\n      outline-color: GrayText;\n    }\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { RadioButtonMixin } from './vaadin-radio-button-mixin.js';\nimport { radioButtonStyles } from './vaadin-radio-button-styles.js';\n\nregisterStyles('vaadin-radio-button', radioButtonStyles, { moduleId: 'vaadin-radio-button-styles' });\n\n/**\n * `<vaadin-radio-button>` is a web component representing a choice in a radio group.\n * Only one radio button in the group can be selected at the same time.\n *\n * ```html\n * <vaadin-radio-group label=\"Travel class\">\n *   <vaadin-radio-button value=\"economy\" label=\"Economy\"></vaadin-radio-button>\n *   <vaadin-radio-button value=\"business\" label=\"Business\"></vaadin-radio-button>\n *   <vaadin-radio-button value=\"firstClass\" label=\"First Class\"></vaadin-radio-button>\n * </vaadin-radio-group>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|----------------\n * `radio`     | The wrapper element that contains slotted `<input type=\"radio\">`.\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `active`     | Set when the radio button is pressed down, either with a pointer or the keyboard. | `:host`\n * `disabled`   | Set when the radio button is disabled. | `:host`\n * `focus-ring` | Set when the radio button is focused using the keyboard. | `:host`\n * `focused`    | Set when the radio button is focused. | `:host`\n * `checked`    | Set when the radio button is checked. | `:host`\n * `has-label`  | Set when the radio button has a label. | `:host`\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @fires {CustomEvent} checked-changed - Fired when the `checked` property changes.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes RadioButtonMixin\n */\nclass RadioButton extends RadioButtonMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-radio-button';\n  }\n\n  static get template() {\n    return html`\n      <div class=\"vaadin-radio-button-container\">\n        <div part=\"radio\" aria-hidden=\"true\"></div>\n        <slot name=\"input\"></slot>\n        <slot name=\"label\"></slot>\n      </div>\n    `;\n  }\n}\n\ndefineCustomElement(RadioButton);\n\nexport { RadioButton };\n"],
  "mappings": "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",
  "names": []
}
