import {
  Projection_default,
  Units_default,
  addCoordinateTransforms,
  addEquivalentProjections,
  addProjection,
  createSafeCoordinateTransform,
  get,
  get2
} from "./chunk-HGML5IPI.js";
import "./chunk-C7XNUD4N.js";
import "./chunk-JFL7O5KA.js";
import "./chunk-FE3DXTD6.js";
import "./chunk-K4RYKKJS.js";
import "./chunk-WGAPYIUP.js";

// node_modules/ol/proj/proj4.js
function register(proj4) {
  var projCodes = Object.keys(proj4.defs);
  var len = projCodes.length;
  var i, j;
  for (i = 0; i < len; ++i) {
    var code = projCodes[i];
    if (!get2(code)) {
      var def = proj4.defs(code);
      var units = def.units;
      if (!units && def.projName === "longlat") {
        units = Units_default.DEGREES;
      }
      addProjection(new Projection_default({
        code,
        axisOrientation: def.axis,
        metersPerUnit: def.to_meter,
        units
      }));
    }
  }
  for (i = 0; i < len; ++i) {
    var code1 = projCodes[i];
    var proj1 = get2(code1);
    for (j = 0; j < len; ++j) {
      var code2 = projCodes[j];
      var proj2 = get2(code2);
      if (!get(code1, code2)) {
        if (proj4.defs[code1] === proj4.defs[code2]) {
          addEquivalentProjections([proj1, proj2]);
        } else {
          var transform = proj4(code1, code2);
          addCoordinateTransforms(proj1, proj2, createSafeCoordinateTransform(proj1, proj2, transform.forward), createSafeCoordinateTransform(proj2, proj1, transform.inverse));
        }
      }
    }
  }
}
export {
  register
};
//# sourceMappingURL=ol_proj_proj4.js.map
