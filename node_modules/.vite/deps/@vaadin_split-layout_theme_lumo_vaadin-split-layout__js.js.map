{
  "version": 3,
  "sources": ["../../@vaadin/split-layout/theme/lumo/vaadin-split-layout-styles.js", "../../@vaadin/split-layout/src/vaadin-split-layout-mixin.js", "../../@vaadin/split-layout/src/vaadin-split-layout-styles.js", "../../@vaadin/split-layout/src/vaadin-split-layout.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-split-layout',\n  css`\n    [part='splitter'] {\n      min-width: var(--lumo-space-s);\n      min-height: var(--lumo-space-s);\n      background-color: var(--lumo-contrast-5pct);\n      transition: 0.1s background-color;\n    }\n\n    [part='handle'] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: var(--lumo-size-m);\n      height: var(--lumo-size-m);\n    }\n\n    [part='handle']::after {\n      content: '';\n      display: block;\n      --_handle-size: 4px;\n      width: var(--_handle-size);\n      height: 100%;\n      max-width: 100%;\n      max-height: 100%;\n      border-radius: var(--lumo-border-radius-s);\n      background-color: var(--lumo-contrast-30pct);\n      transition: 0.1s opacity, 0.1s background-color;\n    }\n\n    :host([orientation='vertical']) [part='handle']::after {\n      width: 100%;\n      height: var(--_handle-size);\n    }\n\n    /* Hover style */\n    @media (any-hover: hover) {\n      [part='splitter']:hover [part='handle']::after {\n        background-color: var(--lumo-contrast-40pct);\n      }\n    }\n\n    /* Active style */\n    [part='splitter']:active [part='handle']::after {\n      background-color: var(--lumo-contrast-50pct);\n    }\n\n    /* Small/minimal */\n    :host([theme~='small']) > [part='splitter'] {\n      border-left: 1px solid var(--lumo-contrast-10pct);\n      border-top: 1px solid var(--lumo-contrast-10pct);\n    }\n\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter'] {\n      min-width: 0;\n      min-height: 0;\n      background-color: transparent;\n    }\n\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter']::after {\n      content: '';\n      position: absolute;\n      inset: -4px;\n    }\n\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter'] > [part='handle'] {\n      left: calc(50% - 0.5px);\n      top: calc(50% - 0.5px);\n    }\n\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter'] > [part='handle']::after {\n      opacity: 0;\n      --_handle-size: 5px;\n    }\n\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter']:hover > [part='handle']::after,\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter']:active > [part='handle']::after {\n      opacity: 1;\n    }\n  `,\n  { moduleId: 'lumo-split-layout' },\n);\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const SplitLayoutMixin = (superClass) =>\n  class SplitLayoutMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The split layout's orientation. Possible values are: `horizontal|vertical`.\n         * @type {string}\n         */\n        orientation: {\n          type: String,\n          reflectToAttribute: true,\n          value: 'horizontal',\n        },\n\n        /** @private */\n        _previousPrimaryPointerEvents: String,\n\n        /** @private */\n        _previousSecondaryPointerEvents: String,\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this._processChildren();\n\n      this.__observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          this._cleanupNodes(mutation.removedNodes);\n        });\n\n        this._processChildren();\n      });\n\n      this.__observer.observe(this, { childList: true });\n\n      const splitter = this.$.splitter;\n      addListener(splitter, 'track', this._onHandleTrack.bind(this));\n      addListener(splitter, 'down', this._setPointerEventsNone.bind(this));\n      addListener(splitter, 'up', this._restorePointerEvents.bind(this));\n    }\n\n    /** @private */\n    _cleanupNodes(nodes) {\n      nodes.forEach((node) => {\n        if (!(node.parentElement instanceof this.constructor)) {\n          node.removeAttribute('slot');\n        }\n      });\n    }\n\n    /** @private */\n    _processChildren() {\n      const children = [...this.children];\n\n      children.filter((child) => child.hasAttribute('slot')).forEach((child) => this._processChildWithSlot(child));\n\n      children\n        .filter((child) => !child.hasAttribute('slot'))\n        .forEach((child, i) => this._processChildWithoutSlot(child, i));\n    }\n\n    /** @private */\n    _processChildWithSlot(child) {\n      const slot = child.getAttribute('slot');\n      if (child.__autoSlotted) {\n        this[`_${slot}Child`] = null;\n        child.removeAttribute('slot');\n      } else {\n        this[`_${slot}Child`] = child;\n      }\n    }\n\n    /** @private */\n    _processChildWithoutSlot(child, idx) {\n      let slotName;\n      if (this._primaryChild || this._secondaryChild) {\n        slotName = this._primaryChild ? 'secondary' : 'primary';\n      } else {\n        slotName = idx === 0 ? 'primary' : 'secondary';\n      }\n\n      this[`_${slotName}Child`] = child;\n      child.setAttribute('slot', slotName);\n      child.__autoSlotted = true;\n    }\n\n    /** @private */\n    _setFlexBasis(element, flexBasis, containerSize) {\n      flexBasis = Math.max(0, Math.min(flexBasis, containerSize));\n      if (flexBasis === 0) {\n        // Pure zero does not play well in Safari\n        flexBasis = 0.000001;\n      }\n      element.style.flex = `1 1 ${flexBasis}px`;\n    }\n\n    /** @private */\n    _setPointerEventsNone(event) {\n      if (!this._primaryChild || !this._secondaryChild) {\n        return;\n      }\n      this._previousPrimaryPointerEvents = this._primaryChild.style.pointerEvents;\n      this._previousSecondaryPointerEvents = this._secondaryChild.style.pointerEvents;\n      this._primaryChild.style.pointerEvents = 'none';\n      this._secondaryChild.style.pointerEvents = 'none';\n\n      event.preventDefault();\n    }\n\n    /** @private */\n    _restorePointerEvents() {\n      if (!this._primaryChild || !this._secondaryChild) {\n        return;\n      }\n      this._primaryChild.style.pointerEvents = this._previousPrimaryPointerEvents;\n      this._secondaryChild.style.pointerEvents = this._previousSecondaryPointerEvents;\n    }\n\n    /** @private */\n    _onHandleTrack(event) {\n      if (!this._primaryChild || !this._secondaryChild) {\n        return;\n      }\n\n      const size = this.orientation === 'vertical' ? 'height' : 'width';\n      if (event.detail.state === 'start') {\n        this._startSize = {\n          container: this.getBoundingClientRect()[size] - this.$.splitter.getBoundingClientRect()[size],\n          primary: this._primaryChild.getBoundingClientRect()[size],\n          secondary: this._secondaryChild.getBoundingClientRect()[size],\n        };\n\n        return;\n      }\n\n      const distance = this.orientation === 'vertical' ? event.detail.dy : event.detail.dx;\n      const isRtl = this.orientation !== 'vertical' && this.__isRTL;\n      const dirDistance = isRtl ? -distance : distance;\n\n      this._setFlexBasis(this._primaryChild, this._startSize.primary + dirDistance, this._startSize.container);\n      this._setFlexBasis(this._secondaryChild, this._startSize.secondary - dirDistance, this._startSize.container);\n\n      if (event.detail.state === 'end') {\n        this.dispatchEvent(new CustomEvent('splitter-dragend'));\n\n        delete this._startSize;\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const splitLayoutStyles = css`\n  :host {\n    display: flex;\n    overflow: hidden !important;\n    transform: translateZ(0);\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  :host([orientation='vertical']) {\n    flex-direction: column;\n  }\n\n  :host ::slotted(*) {\n    flex: 1 1 auto;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  [part='splitter'] {\n    flex: none;\n    position: relative;\n    z-index: 1;\n    overflow: visible;\n    min-width: 8px;\n    min-height: 8px;\n  }\n\n  :host(:not([orientation='vertical'])) > [part='splitter'] {\n    cursor: ew-resize;\n  }\n\n  :host([orientation='vertical']) > [part='splitter'] {\n    cursor: ns-resize;\n  }\n\n  [part='handle'] {\n    width: 40px;\n    height: 40px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate3d(-50%, -50%, 0);\n  }\n\n  @media (forced-colors: active) {\n    [part~='splitter'] {\n      outline: 1px solid;\n    }\n\n    [part~='handle']::after {\n      background-color: AccentColor !important;\n      forced-color-adjust: none;\n    }\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { SplitLayoutMixin } from './vaadin-split-layout-mixin.js';\nimport { splitLayoutStyles } from './vaadin-split-layout-styles.js';\n\nregisterStyles('vaadin-split-layout', splitLayoutStyles, { moduleId: 'vaadin-split-layout-styles' });\n\n/**\n * `<vaadin-split-layout>` is a Web Component implementing a split layout for two\n * content elements with a draggable splitter between them.\n *\n * ```html\n * <vaadin-split-layout>\n *   <div>First content element</div>\n *   <div>Second content element</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Horizontal and Vertical Layouts\n *\n * By default, the split's orientation is horizontal, meaning that the content elements are\n * positioned side by side in a flex container with a horizontal layout.\n *\n * You can change the split mode to vertical by setting the `orientation` attribute to `\"vertical\"`:\n *\n * ```html\n * <vaadin-split-layout orientation=\"vertical\">\n *   <div>Content on the top</div>\n *   <div>Content on the bottom</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Layouts Combination\n *\n * For the layout contents, we usually use `<div>` elements in the examples,\n * although you can use any other elements as well.\n *\n * For instance, in order to have a nested vertical split layout inside a\n * horizontal one, you can include `<vaadin-split-layout>` as a content element\n * inside another split layout:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div>First content element</div>\n *   <vaadin-split-layout orientation=\"vertical\">\n *     <div>Second content element</div>\n *     <div>Third content element</div>\n *   </vaadin-split-layout>\n * </vaadin-split-layout>\n * ```\n *\n * You can also trigger the vertical mode in JavaScript by setting the property:\n * `splitLayout.orientation = \"vertical\";`.\n *\n * ### Split Layout Element Height\n *\n * `<vaadin-split-layout>` element itself is a flex container. It does not inherit\n * the parent height by default, but rather sets its height depending on the\n * content.\n *\n * You can use CSS to set the fixed height for the split layout, as usual with any\n * block element:\n *\n * ```html\n * <vaadin-split-layout style=\"height: 200px;\">\n *   <div>First content element</div>\n *   <div>Second content element</div>\n * </vaadin-split-layout>\n * ```\n *\n * It is possible to define percentage height as well. Note that you have to set\n * the parent height in order to make percentages work correctly. In the following\n * example, the `<body>` is resized to fill the entire viewport, and the\n * `<vaadin-split-layout>` element is set to take 100% height of the `<body>`:\n *\n * ```html\n * <body style=\"height: 100vh; margin: 0;\">\n *   <vaadin-split-layout style=\"height: 100%;\">\n *     <div>First</div>\n *     <div>Second</div>\n *   </vaadin-split-layout>\n * </body>\n * ```\n *\n * Alternatively, you can use a flexbox layout to make `<vaadin-split-layout>`\n * fill up the parent:\n *\n * ```html\n * <body style=\"height: 100vh; margin: 0; display: flex;\">\n *   <vaadin-split-layout style=\"flex: 1;\">\n *     <div>First</div>\n *     <div>Second</div>\n *   </vaadin-split-layout>\n * </body>\n * ```\n *\n * ### Initial Splitter Position\n *\n * The initial splitter position is determined from the sizes of the content elements\n * inside the split layout. Therefore, changing `width` on the content elements\n * affects the initial splitter position for the horizontal layouts, while `height`\n * affects the vertical ones.\n *\n * Note that when the total size of the content elements does not fit the layout,\n * the content elements are scaled proportionally.\n *\n * When setting initial sizes with relative units, such as percentages, it is\n * recommended to assign the size for both content elements:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div style=\"width: 75%;\">Three fourths</div>\n *   <div style=\"width: 25%;\">One fourth</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Size Limits\n *\n * The `min-width`/`min-height`, and `max-width`/`max-height` CSS size values\n * for the content elements are respected and used to limit the splitter position\n * when it is dragged.\n *\n * It is preferred to set the limits only for a single content element, in order\n * to avoid size conflicts:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div style=\"min-width: 50px; max-width: 150px;\">First</div>\n *   <div>Second</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description | Theme for Element\n * ----------------|----------------|----------------\n * `splitter` | Split element | vaadin-split-layout\n * `handle` | The handle of the splitter | vaadin-split-layout\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @fires {Event} splitter-dragend - Fired after dragging the splitter have ended.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes SplitLayoutMixin\n * @mixes ThemableMixin\n */\nclass SplitLayout extends SplitLayoutMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <slot id=\"primary\" name=\"primary\"></slot>\n      <div part=\"splitter\" id=\"splitter\">\n        <div part=\"handle\"></div>\n      </div>\n      <slot id=\"secondary\" name=\"secondary\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-split-layout';\n  }\n\n  /**\n   * Fired after dragging the splitter have ended.\n   *\n   * @event splitter-dragend\n   */\n}\n\ndefineCustomElement(SplitLayout);\n\nexport { SplitLayout };\n"],
  "mappings": "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",
  "names": []
}
