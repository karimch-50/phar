{
  "version": 3,
  "sources": ["../../@vaadin/component-base/src/dir-utils.js", "../../@vaadin/a11y-base/src/list-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Get the scrollLeft value of the element relative to the direction\n *\n * @param {HTMLElement} element\n * @param {string} direction current direction of the element\n * @return {number} the scrollLeft value.\n */\nexport function getNormalizedScrollLeft(element, direction) {\n  const { scrollLeft } = element;\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  return element.scrollWidth - element.clientWidth + scrollLeft;\n}\n\n/**\n * Set the scrollLeft value of the element relative to the direction\n *\n * @param {HTMLElement} element\n * @param {string} direction current direction of the element\n * @param {number} scrollLeft the scrollLeft value to be set\n */\nexport function setNormalizedScrollLeft(element, direction, scrollLeft) {\n  if (direction !== 'rtl') {\n    element.scrollLeft = scrollLeft;\n  } else {\n    element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2017 - 2024 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { getNormalizedScrollLeft, setNormalizedScrollLeft } from '@vaadin/component-base/src/dir-utils.js';\nimport { getFlattenedElements } from '@vaadin/component-base/src/dom-utils.js';\nimport { SlotObserver } from '@vaadin/component-base/src/slot-observer.js';\nimport { isElementHidden } from './focus-utils.js';\nimport { KeyboardDirectionMixin } from './keyboard-direction-mixin.js';\n\n/**\n * A mixin for list elements, facilitating navigation and selection of items.\n *\n * @polymerMixin\n * @mixes KeyboardDirectionMixin\n */\nexport const ListMixin = (superClass) =>\n  class ListMixinClass extends KeyboardDirectionMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * If true, the user cannot interact with this element.\n         * When the element is disabled, the selected item is\n         * not updated when `selected` property is changed.\n         */\n        disabled: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * The index of the item selected in the items array.\n         * Note: Not updated when used in `multiple` selection mode.\n         */\n        selected: {\n          type: Number,\n          reflectToAttribute: true,\n          notify: true,\n        },\n\n        /**\n         * Define how items are disposed in the dom.\n         * Possible values are: `horizontal|vertical`.\n         * It also changes navigation keys from left/right to up/down.\n         * @type {!ListOrientation}\n         */\n        orientation: {\n          type: String,\n          reflectToAttribute: true,\n          value: '',\n        },\n\n        /**\n         * The list of items from which a selection can be made.\n         * It is populated from the elements passed to the light DOM,\n         * and updated dynamically when adding or removing items.\n         *\n         * The item elements must implement `Vaadin.ItemMixin`.\n         *\n         * Note: unlike `<vaadin-combo-box>`, this property is read-only,\n         * so if you want to provide items by iterating array of data,\n         * you have to use `dom-repeat` and place it to the light DOM.\n         * @type {!Array<!Element> | undefined}\n         */\n        items: {\n          type: Array,\n          readOnly: true,\n          notify: true,\n        },\n\n        /**\n         * The search buffer for the keyboard selection feature.\n         * @private\n         */\n        _searchBuf: {\n          type: String,\n          value: '',\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_enhanceItems(items, orientation, selected, disabled)'];\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    get _isRTL() {\n      return !this._vertical && this.getAttribute('dir') === 'rtl';\n    }\n\n    /**\n     * @return {!HTMLElement}\n     * @protected\n     */\n    get _scrollerElement() {\n      // Returning scroller element of the component\n      console.warn(`Please implement the '_scrollerElement' property in <${this.localName}>`);\n      return this;\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    get _vertical() {\n      return this.orientation !== 'horizontal';\n    }\n\n    focus() {\n      // In initialization (e.g vaadin-select) observer might not been run yet.\n      if (this._observer) {\n        this._observer.flush();\n      }\n\n      const items = Array.isArray(this.items) ? this.items : [];\n      const idx = this._getAvailableIndex(items, 0, null, (item) => item.tabIndex === 0 && !isElementHidden(item));\n      if (idx >= 0) {\n        this._focus(idx);\n      } else {\n        // Call `KeyboardDirectionMixin` logic to focus first non-disabled item.\n        super.focus();\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addEventListener('click', (e) => this._onClick(e));\n\n      const slot = this.shadowRoot.querySelector('slot:not([name])');\n      this._observer = new SlotObserver(slot, () => {\n        this._setItems(this._filterItems(getFlattenedElements(this)));\n      });\n    }\n\n    /**\n     * Override method inherited from `KeyboardDirectionMixin`\n     * to use the stored list of item elements.\n     *\n     * @return {Element[]}\n     * @protected\n     * @override\n     */\n    _getItems() {\n      return this.items;\n    }\n\n    /** @private */\n    _enhanceItems(items, orientation, selected, disabled) {\n      if (!disabled) {\n        if (items) {\n          this.setAttribute('aria-orientation', orientation || 'vertical');\n          items.forEach((item) => {\n            if (orientation) {\n              item.setAttribute('orientation', orientation);\n            } else {\n              item.removeAttribute('orientation');\n            }\n          });\n\n          this._setFocusable(selected || 0);\n\n          const itemToSelect = items[selected];\n          items.forEach((item) => {\n            item.selected = item === itemToSelect;\n          });\n          if (itemToSelect && !itemToSelect.disabled) {\n            this._scrollToItem(selected);\n          }\n        }\n      }\n    }\n\n    /**\n     * @param {!Array<!Element>} array\n     * @return {!Array<!Element>}\n     * @protected\n     */\n    _filterItems(array) {\n      return array.filter((e) => e._hasVaadinItemMixin);\n    }\n\n    /**\n     * @param {!MouseEvent} event\n     * @protected\n     */\n    _onClick(event) {\n      if (event.metaKey || event.shiftKey || event.ctrlKey || event.defaultPrevented) {\n        return;\n      }\n\n      const item = this._filterItems(event.composedPath())[0];\n      let idx;\n      if (item && !item.disabled && (idx = this.items.indexOf(item)) >= 0) {\n        this.selected = idx;\n      }\n    }\n\n    /**\n     * @param {number} currentIdx\n     * @param {string} key\n     * @return {number}\n     * @protected\n     */\n    _searchKey(currentIdx, key) {\n      this._searchReset = Debouncer.debounce(this._searchReset, timeOut.after(500), () => {\n        this._searchBuf = '';\n      });\n      this._searchBuf += key.toLowerCase();\n\n      if (!this.items.some((item) => this.__isMatchingKey(item))) {\n        this._searchBuf = key.toLowerCase();\n      }\n\n      const idx = this._searchBuf.length === 1 ? currentIdx + 1 : currentIdx;\n      return this._getAvailableIndex(\n        this.items,\n        idx,\n        1,\n        (item) => this.__isMatchingKey(item) && getComputedStyle(item).display !== 'none',\n      );\n    }\n\n    /** @private */\n    __isMatchingKey(item) {\n      return item.textContent\n        .replace(/[^\\p{L}\\p{Nd}]/gu, '')\n        .toLowerCase()\n        .startsWith(this._searchBuf);\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`\n     * to search items by key.\n     *\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      if (event.metaKey || event.ctrlKey) {\n        return;\n      }\n\n      const key = event.key;\n\n      const currentIdx = this.items.indexOf(this.focused);\n      if (/[\\p{L}\\p{Nd}]/u.test(key) && key.length === 1) {\n        const idx = this._searchKey(currentIdx, key);\n        if (idx >= 0) {\n          this._focus(idx);\n        }\n        return;\n      }\n\n      super._onKeyDown(event);\n    }\n\n    /**\n     * @param {!Element} item\n     * @return {boolean}\n     * @protected\n     */\n    _isItemHidden(item) {\n      return getComputedStyle(item).display === 'none';\n    }\n\n    /**\n     * @param {number} idx\n     * @protected\n     */\n    _setFocusable(idx) {\n      idx = this._getAvailableIndex(this.items, idx, 1);\n      const item = this.items[idx];\n      this.items.forEach((e) => {\n        e.tabIndex = e === item ? 0 : -1;\n      });\n    }\n\n    /**\n     * @param {number} idx\n     * @protected\n     */\n    _focus(idx) {\n      this.items.forEach((e, index) => {\n        e.focused = index === idx;\n      });\n      this._setFocusable(idx);\n      this._scrollToItem(idx);\n      super._focus(idx);\n    }\n\n    /**\n     * Scroll the container to have the next item by the edge of the viewport.\n     * @param {number} idx\n     * @protected\n     */\n    _scrollToItem(idx) {\n      const item = this.items[idx];\n      if (!item) {\n        return;\n      }\n\n      const props = this._vertical ? ['top', 'bottom'] : this._isRTL ? ['right', 'left'] : ['left', 'right'];\n\n      const scrollerRect = this._scrollerElement.getBoundingClientRect();\n      const nextItemRect = (this.items[idx + 1] || item).getBoundingClientRect();\n      const prevItemRect = (this.items[idx - 1] || item).getBoundingClientRect();\n\n      let scrollDistance = 0;\n      if (\n        (!this._isRTL && nextItemRect[props[1]] >= scrollerRect[props[1]]) ||\n        (this._isRTL && nextItemRect[props[1]] <= scrollerRect[props[1]])\n      ) {\n        scrollDistance = nextItemRect[props[1]] - scrollerRect[props[1]];\n      } else if (\n        (!this._isRTL && prevItemRect[props[0]] <= scrollerRect[props[0]]) ||\n        (this._isRTL && prevItemRect[props[0]] >= scrollerRect[props[0]])\n      ) {\n        scrollDistance = prevItemRect[props[0]] - scrollerRect[props[0]];\n      }\n\n      this._scroll(scrollDistance);\n    }\n\n    /**\n     * @param {number} pixels\n     * @protected\n     */\n    _scroll(pixels) {\n      if (this._vertical) {\n        this._scrollerElement.scrollTop += pixels;\n      } else {\n        const dir = this.getAttribute('dir') || 'ltr';\n        const scrollLeft = getNormalizedScrollLeft(this._scrollerElement, dir) + pixels;\n        setNormalizedScrollLeft(this._scrollerElement, dir, scrollLeft);\n      }\n    }\n\n    /**\n     * Fired when the selection is changed.\n     * Not fired when used in `multiple` selection mode.\n     *\n     * @event selected-changed\n     * @param {Object} detail\n     * @param {Object} detail.value the index of the item selected in the items array.\n     */\n  };\n"],
  "mappings": "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",
  "names": []
}
