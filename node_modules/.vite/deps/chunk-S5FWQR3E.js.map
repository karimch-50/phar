{
  "version": 3,
  "sources": ["../../@vaadin/login/theme/lumo/vaadin-login-form-wrapper-styles.js", "../../@vaadin/login/src/vaadin-login-form-wrapper-styles.js", "../../@vaadin/login/src/vaadin-login-form-wrapper.js", "../../@vaadin/login/src/vaadin-login-mixin.js", "../../@vaadin/login/src/vaadin-login-form-mixin.js", "../../@vaadin/login/src/vaadin-login-form.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { color } from '@vaadin/vaadin-lumo-styles/color.js';\nimport { typography } from '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst loginFormWrapper = css`\n  :host {\n    max-width: calc(var(--lumo-size-m) * 10);\n    background: var(--lumo-base-color) linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n  }\n\n  [part='form'] {\n    padding: var(--lumo-space-l);\n  }\n\n  [part='form-title'] {\n    margin-top: calc(var(--lumo-font-size-xxxl) - var(--lumo-font-size-xxl));\n  }\n\n  ::slotted([slot='submit']) {\n    margin-top: var(--lumo-space-l);\n    margin-bottom: var(--lumo-space-s);\n  }\n\n  ::slotted([slot='forgot-password']) {\n    margin: var(--lumo-space-s) auto;\n  }\n\n  [part='error-message'] {\n    background-color: var(--lumo-error-color-10pct);\n    padding: var(--lumo-space-m);\n    border-radius: var(--lumo-border-radius-m);\n    margin-top: var(--lumo-space-m);\n    margin-bottom: var(--lumo-space-s);\n    color: var(--lumo-error-text-color);\n  }\n\n  :host(:not([dir='rtl'])) [part='error-message'] {\n    padding-left: var(--lumo-size-m);\n  }\n\n  :host([dir='rtl']) [part='error-message'] {\n    padding-right: var(--lumo-size-m);\n  }\n\n  [part='error-message']::before {\n    content: var(--lumo-icons-error);\n    font-family: lumo-icons;\n    font-size: var(--lumo-icon-size-m);\n    position: absolute;\n    width: var(--lumo-size-m);\n    height: 1em;\n    line-height: 1;\n    text-align: center;\n  }\n\n  :host(:not([dir='rtl'])) [part='error-message']::before {\n    /* Visual centering */\n    margin-left: calc(var(--lumo-size-m) * -0.95);\n  }\n\n  :host([dir='rtl']) [part='error-message']::before {\n    /* Visual centering */\n    margin-right: calc(var(--lumo-size-m) * -0.95);\n  }\n\n  [part='error-message-title'] {\n    margin: 0 0 0.25em;\n    color: inherit;\n  }\n\n  [part='error-message-description'] {\n    font-size: var(--lumo-font-size-s);\n    line-height: var(--lumo-line-height-s);\n    margin: 0;\n    opacity: 0.9;\n  }\n\n  [part='footer'] {\n    font-size: var(--lumo-font-size-xs);\n    line-height: var(--lumo-line-height-s);\n    color: var(--lumo-secondary-text-color);\n  }\n`;\n\nregisterStyles('vaadin-login-form-wrapper', [color, typography, loginFormWrapper], {\n  moduleId: 'lumo-login-form-wrapper',\n});\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const loginFormWrapperStyles = css`\n  :host {\n    overflow: hidden;\n    display: inline-block;\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  [part='form'] {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n  }\n\n  [part='form-title'] {\n    margin: 0;\n  }\n\n  [part='error-message'] {\n    position: relative;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { loginFormWrapperStyles } from './vaadin-login-form-wrapper-styles.js';\n\nregisterStyles('vaadin-login-form-wrapper', loginFormWrapperStyles, {\n  moduleId: 'vaadin-login-form-wrapper-styles',\n});\n\n/**\n * An element used internally by `<vaadin-login-form>`. Not intended to be used separately.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @private\n */\nclass LoginFormWrapper extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <section part=\"form\">\n        <h2 part=\"form-title\">[[i18n.form.title]]</h2>\n        <div part=\"error-message\" hidden$=\"[[!error]]\">\n          <h5 part=\"error-message-title\">[[i18n.errorMessage.title]]</h5>\n          <p part=\"error-message-description\">[[i18n.errorMessage.message]]</p>\n        </div>\n\n        <slot name=\"form\"></slot>\n\n        <slot name=\"custom-form-area\"></slot>\n\n        <slot name=\"submit\"></slot>\n\n        <slot name=\"forgot-password\"></slot>\n\n        <div part=\"footer\">\n          <slot name=\"footer\"></slot>\n          <p>[[i18n.additionalInformation]]</p>\n        </div>\n      </section>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-login-form-wrapper';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * If set, the error message is shown. The message is hidden by default.\n       * When set, it changes the disabled state of the submit button.\n       * @type {boolean}\n       */\n      error: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * The object used to localize this component.\n       */\n      i18n: {\n        type: Object,\n      },\n    };\n  }\n}\n\ndefineCustomElement(LoginFormWrapper);\n\nexport { LoginFormWrapper };\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const LoginMixin = (superClass) =>\n  class LoginMixin extends superClass {\n    /**\n     * Fired when user clicks on the \"Forgot password\" button.\n     *\n     * @event forgot-password\n     */\n\n    /**\n     * Fired when an user submits the login.\n     * The event contains `username` and `password` values in the `detail` property.\n     *\n     * @event login\n     */\n\n    static get properties() {\n      return {\n        /**\n         * If set, a synchronous POST call will be fired to the path defined.\n         * The `login` event is also dispatched, so `event.preventDefault()` can be called to prevent the POST call.\n         * @type {string | null}\n         */\n        action: {\n          type: String,\n          value: null,\n        },\n\n        /**\n         * If set, disable the \"Log in\" button and prevent user from submitting login form.\n         * It is re-enabled automatically, when error is set to true, allowing form resubmission\n         * after user makes changes.\n         * @type {boolean}\n         */\n        disabled: {\n          type: Boolean,\n          value: false,\n          notify: true,\n        },\n\n        /**\n         * If set, the error message is shown. The message is hidden by default.\n         * When set, it changes the disabled state of the submit button.\n         * @type {boolean}\n         */\n        error: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true,\n        },\n\n        /**\n         * Whether to hide the forgot password button. The button is visible by default.\n         * @type {boolean}\n         * @attr {boolean} no-forgot-password\n         */\n        noForgotPassword: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * If set, the user name field automatically receives focus when the component is attached to the document.\n         * @type {boolean}\n         * @attr {boolean} no-autofocus\n         */\n        noAutofocus: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * The object used to localize this component.\n         * For changing the default localization, change the entire\n         * _i18n_ object or just the property you want to modify.\n         *\n         * The object has the following JSON structure (by default it doesn't include `additionalInformation`\n         * and `header` sections, `header` can be added to override `title` and `description` properties\n         * in `vaadin-login-overlay`):\n         *\n         * ```\n         * {\n         *   header: {\n         *     title: 'App name',\n         *     description: 'Inspiring application description'\n         *   },\n         *   form: {\n         *     title: 'Log in',\n         *     username: 'Username',\n         *     password: 'Password',\n         *     submit: 'Log in',\n         *     forgotPassword: 'Forgot password'\n         *   },\n         *   errorMessage: {\n         *     title: 'Incorrect username or password',\n         *     message: 'Check that you have entered the correct username and password and try again.',\n         *     username: 'Username is required',\n         *     password: 'Password is required'\n         *   },\n         *   additionalInformation: 'In case you need to provide some additional info for the user.'\n         * }\n         * ```\n         *\n         * @type {!LoginI18n}\n         * @default {English/US}\n         */\n        i18n: {\n          type: Object,\n          value() {\n            return {\n              form: {\n                title: 'Log in',\n                username: 'Username',\n                password: 'Password',\n                submit: 'Log in',\n                forgotPassword: 'Forgot password',\n              },\n              errorMessage: {\n                title: 'Incorrect username or password',\n                message: 'Check that you have entered the correct username and password and try again.',\n                username: 'Username is required',\n                password: 'Password is required',\n              },\n            };\n          },\n        },\n\n        /**\n         * If set, prevents auto enabling the component when error property is set to true.\n         * @private\n         */\n        _preventAutoEnable: {\n          type: Boolean,\n          value: false,\n        },\n      };\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { LoginMixin } from './vaadin-login-mixin.js';\n\n/**\n * @polymerMixin\n * @mixes LoginMixin\n */\nexport const LoginFormMixin = (superClass) =>\n  class LoginFormMixin extends LoginMixin(superClass) {\n    static get observers() {\n      return ['_errorChanged(error)'];\n    }\n\n    get _customFields() {\n      return [...this.$.vaadinLoginFormWrapper.children].filter((node) => {\n        return node.getAttribute('slot') === 'custom-form-area' && node.hasAttribute('name');\n      });\n    }\n\n    /** @protected */\n    async connectedCallback() {\n      super.connectedCallback();\n\n      if (!this.noAutofocus) {\n        // Wait for the form to fully render.\n        await new Promise(requestAnimationFrame);\n        this.$.vaadinLoginUsername.focus();\n      }\n    }\n\n    /** @private */\n    _errorChanged() {\n      if (this.error && !this._preventAutoEnable) {\n        this.disabled = false;\n      }\n    }\n\n    /**\n     * Submits the form.\n     */\n    submit() {\n      const userName = this.$.vaadinLoginUsername;\n      const password = this.$.vaadinLoginPassword;\n\n      if (this.disabled || !(userName.validate() && password.validate())) {\n        return;\n      }\n\n      this.error = false;\n      this.disabled = true;\n\n      const detail = {\n        username: userName.value,\n        password: password.value,\n      };\n\n      const fields = this._customFields;\n      if (fields.length) {\n        detail.custom = {};\n\n        fields.forEach((field) => {\n          detail.custom[field.name] = field.value;\n        });\n      }\n\n      const loginEventDetails = {\n        bubbles: true,\n        cancelable: true,\n        detail,\n      };\n\n      const firedEvent = this.dispatchEvent(new CustomEvent('login', loginEventDetails));\n      if (this.action && firedEvent) {\n        const csrfMetaName = document.querySelector('meta[name=_csrf_parameter]');\n        const csrfMetaValue = document.querySelector('meta[name=_csrf]');\n        if (csrfMetaName && csrfMetaValue) {\n          this.$.csrf.name = csrfMetaName.content;\n          this.$.csrf.value = csrfMetaValue.content;\n        }\n        this.querySelector('form').submit();\n      }\n    }\n\n    /** @protected */\n    _onFormData(event) {\n      const { formData } = event;\n\n      if (this._customFields.length) {\n        this._customFields.forEach((field) => {\n          formData.append(field.name, field.value);\n        });\n      }\n    }\n\n    /** @protected */\n    _handleInputKeydown(e) {\n      if (e.key === 'Enter') {\n        const { currentTarget: inputActive } = e;\n        const nextInput =\n          inputActive.id === 'vaadinLoginUsername' ? this.$.vaadinLoginPassword : this.$.vaadinLoginUsername;\n        if (inputActive.validate()) {\n          if (nextInput.checkValidity()) {\n            this.submit();\n          } else {\n            nextInput.focus();\n          }\n        }\n      }\n    }\n\n    /** @protected */\n    _handleInputKeyup(e) {\n      const input = e.currentTarget;\n      if (e.key === 'Tab' && input instanceof HTMLInputElement) {\n        input.select();\n      }\n    }\n\n    /** @protected */\n    _onForgotPasswordClick() {\n      this.dispatchEvent(new CustomEvent('forgot-password'));\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/button/src/vaadin-button.js';\nimport '@vaadin/text-field/src/vaadin-text-field.js';\nimport '@vaadin/password-field/src/vaadin-password-field.js';\nimport './vaadin-login-form-wrapper.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { LoginFormMixin } from './vaadin-login-form-mixin.js';\n\n/**\n * `<vaadin-login-form>` is a Web Component providing an easy way to require users\n * to log in into an application. Note that component has no shadowRoot.\n *\n * ```\n * <vaadin-login-form></vaadin-login-form>\n * ```\n *\n * Component has to be accessible from the `document` layer in order to allow password managers to work properly with form values.\n * Using `<vaadin-login-overlay>` allows to always attach the component to the document body.\n *\n * ### Styling\n *\n * The component doesn't have a shadowRoot, so the `<form>` and input fields can be styled from a global scope.\n * Use `<vaadin-login-form-wrapper>` themable component to apply styles.\n *\n * The following shadow DOM parts of the `<vaadin-login-form-wrapper>` are available for styling:\n *\n * Part name      | Description\n * ---------------|---------------------------------------------------------|\n * `form`         | Container for the entire component's content\n * `form-title`   | Title of the login form\n * `error-message`| Container for error message, contains error-message-title and error-message-description parts. Hidden by default.\n * `error-message-title`       | Container for error message title\n * `error-message-description` | Container for error message description\n * `footer`  | Container additional information text from `i18n` object\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @fires {CustomEvent} disabled-changed - Fired when the `disabled` property changes.\n * @fires {CustomEvent} error-changed - Fired when the `error` property changes.\n * @fires {CustomEvent} forgot-password - Fired when user clicks on the \"Forgot password\" button.\n * @fires {CustomEvent} login - Fired when a user submits the login.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes LoginFormMixin\n */\nclass LoginForm extends LoginFormMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        vaadin-login-form-wrapper > form > * {\n          width: 100%;\n        }\n      </style>\n      <vaadin-login-form-wrapper id=\"vaadinLoginFormWrapper\" theme$=\"[[_theme]]\" error=\"[[error]]\" i18n=\"[[i18n]]\">\n        <form method=\"POST\" action$=\"[[action]]\" on-formdata=\"_onFormData\" slot=\"form\">\n          <input id=\"csrf\" type=\"hidden\" />\n          <vaadin-text-field\n            name=\"username\"\n            label=\"[[i18n.form.username]]\"\n            error-message=\"[[i18n.errorMessage.username]]\"\n            id=\"vaadinLoginUsername\"\n            required\n            on-keydown=\"_handleInputKeydown\"\n            autocapitalize=\"none\"\n            autocorrect=\"off\"\n            spellcheck=\"false\"\n            autocomplete=\"username\"\n          >\n            <input type=\"text\" slot=\"input\" on-keyup=\"_handleInputKeyup\" />\n          </vaadin-text-field>\n\n          <vaadin-password-field\n            name=\"password\"\n            label=\"[[i18n.form.password]]\"\n            error-message=\"[[i18n.errorMessage.password]]\"\n            id=\"vaadinLoginPassword\"\n            required\n            on-keydown=\"_handleInputKeydown\"\n            spellcheck=\"false\"\n            autocomplete=\"current-password\"\n          >\n            <input type=\"password\" slot=\"input\" on-keyup=\"_handleInputKeyup\" />\n          </vaadin-password-field>\n        </form>\n\n        <vaadin-button slot=\"submit\" theme=\"primary contained submit\" on-click=\"submit\" disabled$=\"[[disabled]]\">\n          [[i18n.form.submit]]\n        </vaadin-button>\n\n        <vaadin-button\n          slot=\"forgot-password\"\n          theme=\"tertiary small\"\n          on-click=\"_onForgotPasswordClick\"\n          hidden$=\"[[noForgotPassword]]\"\n        >\n          [[i18n.form.forgotPassword]]\n        </vaadin-button>\n      </vaadin-login-form-wrapper>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-login-form';\n  }\n\n  /**\n   * @param {StampedTemplate} dom\n   * @return {null}\n   * @protected\n   */\n  _attachDom(dom) {\n    this.appendChild(dom);\n  }\n}\n\ndefineCustomElement(LoginForm);\n\nexport { LoginForm };\n"],
  "mappings": "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",
  "names": []
}
