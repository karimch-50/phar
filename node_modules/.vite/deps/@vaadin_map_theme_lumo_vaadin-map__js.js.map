{
  "version": 3,
  "sources": ["../../@vaadin/map/theme/lumo/vaadin-map-styles.js", "../../ol/src/MapEventType.js", "../../ol/src/control/Control.js", "../../ol/src/control/Attribution.js", "../../ol/src/control/Rotate.js", "../../ol/src/control/Zoom.js", "../../ol/src/MapProperty.js", "../../ol/src/control/FullScreen.js", "../../ol/src/pointer/EventType.js", "../../ol/src/control/MousePosition.js", "../../ol/src/renderer/Map.js", "../../ol/src/renderer/Composite.js", "../../ol/src/OverlayPositioning.js", "../../ol/src/Overlay.js", "../../ol/src/layer/Group.js", "../../ol/src/MapEvent.js", "../../ol/src/MapBrowserEvent.js", "../../ol/src/MapBrowserEventHandler.js", "../../ol/src/structs/PriorityQueue.js", "../../ol/src/TileQueue.js", "../../ol/src/PluggableMap.js", "../../ol/src/control/OverviewMap.js", "../../ol/src/control/ScaleLine.js", "../../ol/src/control/ZoomSlider.js", "../../ol/src/control/ZoomToExtent.js", "../../ol/src/control.js", "../../ol/src/interaction/DoubleClickZoom.js", "../../ol/src/interaction/DragPan.js", "../../ol/src/interaction/DragRotate.js", "../../ol/src/render/Box.js", "../../ol/src/interaction/DragBox.js", "../../ol/src/interaction/DragZoom.js", "../../ol/src/events/KeyCode.js", "../../ol/src/interaction/KeyboardPan.js", "../../ol/src/interaction/KeyboardZoom.js", "../../ol/src/Kinetic.js", "../../ol/src/interaction/MouseWheelZoom.js", "../../ol/src/interaction/PinchRotate.js", "../../ol/src/interaction/PinchZoom.js", "../../ol/src/interaction/DragAndDrop.js", "../../ol/src/interaction/DragRotateAndZoom.js", "../../ol/src/geom/Circle.js", "../../ol/src/geom/flat/interpolate.js", "../../ol/src/geom/LineString.js", "../../ol/src/geom/MultiLineString.js", "../../ol/src/geom/MultiPoint.js", "../../ol/src/geom/flat/center.js", "../../ol/src/geom/MultiPolygon.js", "../../ol/src/interaction/Draw.js", "../../ol/src/interaction/Extent.js", "../../ol/src/interaction/Modify.js", "../../ol/src/interaction/Select.js", "../../ol/src/interaction/Snap.js", "../../ol/src/interaction.js", "../../ol/src/Map.js", "../../@vaadin/map/src/vaadin-map.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2000 - 2023 Vaadin Ltd.\n *\n * This program is available under Vaadin Commercial License and Service Terms.\n *\n *\n * See https://vaadin.com/commercial-license-and-service-terms for the full\n * license.\n */\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-map',\n  css`\n    :host {\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      --vaadin-map-controls-inset: var(--lumo-space-xs);\n      --vaadin-map-icon-zoom-in: var(--lumo-icons-plus);\n      --vaadin-map-icon-zoom-out: var(--lumo-icons-minus);\n      --vaadin-map-icon-compass: var(--lumo-icons-arrow-up);\n      --vaadin-map-icon-overview-map-collapse: var(--lumo-icons-angle-down);\n      --vaadin-map-icon-overview-map-expand: var(--lumo-icons-angle-up);\n      --vaadin-map-icon-close: var(--lumo-icons-cross);\n      --vaadin-map-icon-attribution-collapse: var(--lumo-icons-angle-right);\n      --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\n      --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\n    }\n\n    :host(:not([theme~='borderless'])) {\n      border-radius: var(--lumo-border-radius-l);\n      position: relative;\n    }\n\n    :host(:not([theme~='borderless']))::before {\n      content: '';\n      position: absolute;\n      inset: 0;\n      border: 1px solid var(--lumo-contrast-10pct);\n      border-radius: inherit;\n      z-index: 1;\n      pointer-events: none;\n    }\n\n    :host([focus-ring]) {\n      box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\n    }\n\n    .ol-control,\n    .ol-scale-bar,\n    .ol-scale-line {\n      margin: var(--lumo-space-xs);\n    }\n\n    .ol-control {\n      border-radius: var(--lumo-border-radius-m);\n      transition: 0.15s box-shadow, 0.15s background-color;\n      -webkit-backdrop-filter: blur(8px);\n    }\n\n    .ol-control:hover {\n      background-color: var(--lumo-base-color);\n    }\n\n    .ol-control:not(.ol-uncollapsible):hover {\n      box-shadow: var(--lumo-box-shadow-s);\n      background-color: var(--lumo-shade-20pct);\n    }\n\n    .ol-control button {\n      width: var(--lumo-size-s);\n      height: var(--lumo-size-s);\n      border-radius: inherit;\n      font-family: 'lumo-icons';\n      font-size: var(--lumo-icon-size-s);\n      font-weight: 400;\n    }\n\n    .ol-control button,\n    .ol-attribution:not(.ol-uncollapsible) ul {\n      transition: 0.15s opacity;\n      background-color: var(--lumo-base-color);\n      color: var(--lumo-body-text-color);\n      opacity: 0.65;\n    }\n\n    .ol-control:hover button,\n    .ol-control button:focus,\n    .ol-attribution:hover ul {\n      opacity: 1;\n    }\n\n    .ol-control button:hover {\n      color: var(--lumo-primary-text-color);\n    }\n\n    .ol-control button:active {\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n    }\n\n    @supports not selector(:focus-visible) {\n      .ol-control button:focus {\n        outline: none;\n        box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\n      }\n    }\n\n    .ol-control button:focus-visible {\n      outline: none;\n      box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\n    }\n\n    .ol-zoom {\n      gap: 2px;\n    }\n\n    button.ol-zoom-in {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n\n    button.ol-zoom-out {\n      border-top-left-radius: 0;\n      border-top-right-radius: 0;\n    }\n\n    .ol-attribution.ol-uncollapsible {\n      border-radius: var(--lumo-border-radius-m) 0 0 0;\n    }\n\n    .ol-attribution ul {\n      font-size: var(--lumo-font-size-xxs);\n      color: var(--lumo-secondary-text-color);\n      padding: var(--lumo-space-xs) var(--lumo-space-s);\n      cursor: default;\n    }\n\n    .ol-attribution:not(.ol-uncollapsible) ul {\n      background-color: var(--lumo-base-color);\n    }\n\n    .ol-attribution a {\n      color: inherit;\n      cursor: pointer;\n    }\n\n    .ol-scale-bar-inner {\n      border-radius: var(--lumo-border-radius-s);\n    }\n\n    .ol-full-screen {\n      height: var(--lumo-size-s);\n    }\n\n    .ol-overviewmap:not(.ol-collapsed),\n    .ol-overviewmap:not(.ol-collapsed):hover {\n      background-color: var(--lumo-base-color);\n      box-shadow: var(--lumo-box-shadow-s);\n      transition: 0.15s box-shadow;\n    }\n\n    .ol-overviewmap-map {\n      margin: var(--lumo-space-xs);\n      border: 0;\n      border-radius: var(--lumo-border-radius-s);\n    }\n\n    .ol-overviewmap:not(.ol-uncollapsible) .ol-overviewmap-map {\n      margin-bottom: 0;\n    }\n\n    .ol-zoomslider:not(.ol-uncollapsible):hover {\n      box-shadow: none;\n      overflow: visible;\n    }\n\n    .ol-zoomslider button {\n      height: var(--lumo-space-m);\n    }\n\n    .ol-zoomslider:hover button {\n      box-shadow: var(--lumo-box-shadow-s);\n    }\n  `,\n  { moduleId: 'lumo-map' },\n);\n", "/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n", "/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n", "/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n", "/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n", "/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n", "/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n", "/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    const activeClassName = this.activeClassName_;\n    const inactiveClassName = this.inactiveClassName_;\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(...activeClassName);\n    element.classList.remove(...inactiveClassName);\n    element.classList.add(...nextClassName);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(\n    doc['webkitIsFullScreen'] ||\n    doc['msFullscreenElement'] ||\n    doc.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['msRequestFullscreen']) {\n    element['msRequestFullscreen']();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['msExitFullscreen']) {\n    doc['msExitFullscreen']();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n", "/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n", "/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     * @type {boolean}\n     */\n    let renderOnMouseOut = true;\n\n    /**\n     * @type {string}\n     */\n    let placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = placeholder;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = renderOnMouseOut;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n", "/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n", "/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n", "/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n", "/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n", "/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n", "/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n", "/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n", "/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n", "/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n", "/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n", "/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      if (!layer.getRenderer().ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      this.renderComplete_\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n", "/**\n * @module ol/control/OverviewMap\n */\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport PluggableMap from '../PluggableMap.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [opt_options] OverviewMap options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view,\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n", "/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us',\n};\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [opt_options] Scale line options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits =\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale =\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          'class=\"ol-scale-singlebar\" ' +\n          'style=' +\n          '\"width: ' +\n          stepWidth +\n          'px;' +\n          'background-color: ' +\n          backgroundColor +\n          ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText =\n        '<div ' +\n        'class=\"ol-scale-text\" ' +\n        'style=\"width: ' +\n        width +\n        'px;\">' +\n        mapScale +\n        '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container =\n      '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n      '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position The position, absolute or relative\n   * @param {number} i The iterator\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      'style=\"position: ' +\n      position +\n      ';' +\n      'top: ' +\n      top +\n      'px;\"' +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      'margin-left: ' +\n      margin +\n      'px;' +\n      'text-align: ' +\n      (i === 0 ? 'left' : 'center') +\n      '; ' +\n      'min-width: ' +\n      minWidth +\n      'px;' +\n      'left: ' +\n      (isLast ? width + 'px' : 'unset') +\n      ';\"' +\n      '>' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      ProjUnits.METERS\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n", "/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom slider options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n", "/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n", "/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n", "/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n", "/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n", "/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n", "/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n", "/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n", "/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n", "/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n", "/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n", "/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n", "/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n", "/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n", "/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n", "/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n", "/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combination of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n", "/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n", "/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n", "/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n", "/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n", "/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n", "/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n", "/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n", "/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n", "/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n", "/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.boxStyle\n        ? opt_options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.pointerStyle\n        ? opt_options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n", "/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals, includes} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {import(\"../Feature\").FeatureLike} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<import(\"../Feature\").FeatureLike>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && features.indexOf(feature) === -1) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<import(\"../Feature\").FeatureLike>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry =\n            geometry ||\n            /** @type {import(\"../geom/SimpleGeometry\").default} */ (\n              feature.getGeometry()\n            );\n          if (\n            geometry.getType() === GeometryType.POINT &&\n            includes(this.features_.getArray(), feature)\n          ) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getFlatCoordinates().slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n", "/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              this.addFeatureLayerAssociation_(feature, layer);\n              selected.push(feature);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n", "/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {getValues} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped Snapped.\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n  ) {\n    return /** @type {import(\"../Feature.js\").default} */ (\n      /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n    );\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel,\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex =\n          squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle =\n        closestSegmentData.feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n      if (isCircle) {\n        let circleGeometry = closestSegmentData.feature.getGeometry();\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(\n          closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          ),\n          projection\n        );\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(\n          closestOnSegment(projectedCoordinate, tempSegment),\n          projection\n        );\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel,\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates],\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment,\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates],\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\nexport default Snap;\n", "/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n", "/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n", "/**\n * @license\n * Copyright (c) 2000 - 2023 Vaadin Ltd.\n *\n * This program is available under Vaadin Commercial License and Service Terms.\n *\n *\n * See https://vaadin.com/commercial-license-and-service-terms for the full\n * license.\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport OpenLayersMap from 'ol/Map.js';\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `vaadin-map` is a web component for displaying web maps.\n *\n * The component is a light-weight wrapper around the OpenLayers mapping library.\n *\n * ### Basic Usage\n *\n * Add a `<vaadin-map>` element to your HTML:\n *\n * ```html\n * <vaadin-map></vaadin-map>\n * ```\n *\n * Then use the exposed OpenLayers API to configure it:\n * ```html\n * <script type=\"module\">\n *   import \"@vaadin/map\";\n *   import TileLayer from \"ol/layer/Tile\";\n *   import OSM from \"ol/source/OSM\";\n *   import View from \"ol/View\";\n *\n *   const map = document.querySelector(\"vaadin-map\");\n *   customElements.whenDefined(\"vaadin-map\").then(() => {\n *     map.configuration.addLayer(new TileLayer({\n *       source: new OSM()\n *     }));\n *     map.configuration.setView(new View({\n *       center: [0, 0],\n *       zoom: 3\n *     }));\n *   });\n * </script>\n * ```\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes FocusMixin\n * @mixes ResizeMixin\n */\nclass Map extends ResizeMixin(FocusMixin(ElementMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          height: 400px;\n          flex: 1 1 auto;\n          align-self: stretch;\n          overflow: hidden;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        #map {\n          width: 100%;\n          height: 100%;\n          outline: none;\n        }\n\n        #map,\n        .ol-viewport,\n        .ol-layers {\n          border-radius: inherit;\n          overflow: hidden;\n        }\n\n        #map:fullscreen {\n          border-radius: 0;\n        }\n\n        #map:-webkit-full-screen {\n          border-radius: 0;\n        }\n\n        /* Functional styles, copied from 'ol/ol.css' */\n\n        .ol-box {\n          box-sizing: border-box;\n          border-radius: 2px;\n          border: 1px solid rgba(0, 0, 0, 0.5);\n          background-color: rgba(255, 255, 255, 0.2);\n          box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.5);\n        }\n\n        .ol-unsupported {\n          display: none;\n        }\n\n        .ol-viewport,\n        .ol-unselectable {\n          -webkit-touch-callout: none;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n          -webkit-tap-highlight-color: transparent;\n        }\n\n        .ol-viewport canvas {\n          all: unset;\n        }\n\n        .ol-selectable {\n          -webkit-touch-callout: default;\n          -webkit-user-select: text;\n          -moz-user-select: text;\n          -ms-user-select: text;\n          user-select: text;\n        }\n\n        .ol-grabbing {\n          cursor: -webkit-grabbing;\n          cursor: -moz-grabbing;\n          cursor: grabbing;\n        }\n\n        .ol-grab {\n          cursor: move;\n          cursor: -webkit-grab;\n          cursor: -moz-grab;\n          cursor: grab;\n        }\n\n        /* Control positioning and styling */\n\n        .ol-overlaycontainer-stopevent {\n          display: grid;\n          grid-template-columns: min-content 1fr min-content;\n          grid-template-rows: min-content 1fr min-content min-content min-content min-content;\n          padding: var(--vaadin-map-controls-inset, 0.25em);\n          box-sizing: border-box;\n          grid-template-areas:\n            'scale mouse-position fullscreen'\n            'overview-map . zoom-extent'\n            'overview-map . compass'\n            'overview-map . zoom-slider'\n            'overview-map . zoom'\n            'overview-map attribution attribution';\n        }\n\n        .ol-mouse-position {\n          grid-area: mouse-position;\n          align-self: start;\n          text-align: center;\n          font-size: 0.625em;\n          color: #000;\n          filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\n        }\n\n        .ol-scale-line,\n        .ol-scale-bar {\n          grid-area: scale;\n          position: relative;\n          pointer-events: none !important;\n          color: #000;\n        }\n\n        .ol-scale-line-inner {\n          border: 1px solid rgba(0, 0, 0, 0.5);\n          border-top: none;\n          font-size: 0.625em;\n          text-align: center;\n          will-change: contents, width, filter;\n          transition: all 0.25s;\n          filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\n        }\n\n        .ol-scale-bar-inner {\n          border: 1px solid rgba(0, 0, 0, 0.5);\n          box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.5);\n          overflow: hidden;\n        }\n\n        .ol-scale-step-marker {\n          display: none;\n        }\n\n        .ol-scale-step-text {\n          position: absolute;\n          top: 0.75em;\n          font-size: 0.625em;\n          color: #000;\n          filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\n          white-space: nowrap;\n          overflow: hidden;\n        }\n\n        .ol-scale-text {\n          position: absolute;\n          font-size: 0.625em;\n          top: 2em;\n          color: #000;\n          white-space: nowrap;\n          filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\n        }\n\n        .ol-scale-singlebar {\n          height: 0.25em;\n          opacity: 0.5;\n        }\n\n        .ol-control {\n          margin: 0.25em;\n        }\n\n        .ol-control button {\n          -webkit-appearance: none;\n          border: 0;\n          margin: 0;\n          padding: 0;\n          background: #fff;\n          font: inherit;\n          color: inherit;\n          width: 1.5em;\n          height: 1.5em;\n        }\n\n        .ol-control button::-moz-focus-inner {\n          border: none;\n          padding: 0;\n        }\n\n        .ol-compass {\n          grid-area: compass;\n          display: block;\n          will-change: transform;\n        }\n\n        .ol-zoom {\n          grid-area: zoom;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .ol-zoom-in:empty::before {\n          content: var(--vaadin-map-icon-zoom-in, '+');\n        }\n\n        .ol-zoom-out:empty::before {\n          content: var(--vaadin-map-icon-zoom-out, '\\\\2013');\n        }\n\n        .ol-attribution {\n          grid-area: attribution;\n          margin-inline-start: auto !important;\n          display: flex;\n          flex-flow: row-reverse;\n        }\n\n        .ol-attribution.ol-uncollapsible {\n          margin-inline-end: calc(var(--vaadin-map-controls-inset, 0.25em) * -1);\n          margin-block-end: calc(var(--vaadin-map-controls-inset, 0.25em) * -1);\n        }\n\n        .ol-attribution button span:empty::before {\n          content: var(--vaadin-map-icon-attribution-collapse, '\\\\25B8');\n        }\n\n        .ol-attribution.ol-collapsed button span:empty::before {\n          content: var(--vaadin-map-icon-attribution-expand, '\\\\2139');\n        }\n\n        .ol-attribution ul {\n          display: flex;\n          align-items: center;\n          gap: 1em;\n          list-style: none;\n          margin: 0;\n          padding: 0.25em 0.5em;\n          font-size: 0.8em;\n        }\n\n        .ol-attribution.ol-collapsed ul {\n          display: none;\n        }\n\n        .ol-attribution.ol-uncollapsible button {\n          display: none;\n        }\n\n        .ol-rotate {\n          grid-area: compass;\n        }\n\n        .ol-compass:empty::before {\n          content: var(--vaadin-map-icon-compass, '\\\\2191');\n        }\n\n        .ol-full-screen {\n          grid-area: fullscreen;\n        }\n\n        .ol-full-screen button:empty::before {\n          content: var(--vaadin-map-icon-fullscreen, '\\\\2922');\n        }\n\n        .ol-full-screen .ol-full-screen-true:empty::before {\n          content: var(--vaadin-map-icon-close, '\\\\00D7');\n        }\n\n        .ol-overviewmap {\n          grid-area: overview-map;\n          align-self: end;\n          width: max-content;\n        }\n\n        .ol-overviewmap button span:empty::before {\n          content: var(--vaadin-map-icon-overview-map-collapse, '\\\\25BE');\n        }\n\n        .ol-overviewmap.ol-collapsed button span:empty::before {\n          content: var(--vaadin-map-icon-overview-map-expand, '\\\\25B4');\n        }\n\n        .ol-overviewmap-map {\n          height: 10em;\n          width: 10em;\n          border: 1px solid rgba(0, 0, 0, 0.5);\n        }\n\n        .ol-overviewmap.ol-collapsed .ol-overviewmap-map,\n        .ol-overviewmap.ol-uncollapsible button {\n          display: none;\n        }\n\n        .ol-overviewmap-box {\n          border: 1px dashed rgba(0, 0, 0, 0.5);\n          filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\n          will-change: filter;\n          cursor: move;\n        }\n\n        .ol-zoomslider {\n          grid-area: zoom-slider;\n          height: 8em;\n        }\n\n        .ol-zoomslider button {\n          position: relative;\n          height: 0.5em;\n          display: block;\n          border-radius: inherit;\n        }\n\n        .ol-zoom-extent {\n          grid-area: zoom-extent;\n          align-self: end;\n        }\n      </style>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-map';\n  }\n\n  static get cvdlName() {\n    return 'vaadin-map';\n  }\n\n  constructor() {\n    super();\n    // Create map container element and initialize OL map instance\n    this._mapTarget = document.createElement('div');\n    this._mapTarget.id = 'map';\n    // Ensure accessible keyboard controls are enabled\n    this._mapTarget.setAttribute('tabindex', '0');\n    const options = {\n      // Override default controls to remove default labels, which is required to\n      // correctly display icons through pseudo-element\n      controls: defaultControls({\n        rotate: false,\n        zoomOptions: { zoomInLabel: '', zoomOutLabel: '' },\n      }),\n      // Override default interactions to allow mouse-wheel zoom + drag-pan when not focused\n      interactions: defaultInteractions({ onFocusOnly: false }),\n      target: this._mapTarget,\n    };\n    this._configuration = new OpenLayersMap(options);\n  }\n\n  /**\n   * The internal OpenLayers map instance used to configure the map.\n   * See the OpenLayers [API](https://openlayers.org/en/latest/apidoc/) and\n   * [examples](https://openlayers.org/en/latest/examples/) for further information.\n   * @returns {*}\n   */\n  get configuration() {\n    return this._configuration;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    // Add map container to shadow root, trigger OL resize calculation\n    this.shadowRoot.appendChild(this._mapTarget);\n    this.__addMapFocusListeners();\n  }\n\n  /**\n   * Implements resize callback from ResizeMixin to update size of OL map instance\n   * @override\n   * @protected\n   */\n  _onResize(_contentRect) {\n    this._configuration.updateSize();\n  }\n\n  /**\n   * Registers focus listeners on the map container to manually manage focus in\n   * FocusMixin. FocusMixin currently assumes that the focusable element will\n   * be in the light DOM and is available as event target.\n   * The map container however is in the shadow DOM and thus focus events will\n   * always have the host element as target.\n   * @private\n   */\n  __addMapFocusListeners() {\n    this._mapTarget.addEventListener('focusin', (e) => {\n      if (e.target === this._mapTarget) {\n        this._setFocused(true);\n      }\n    });\n    this._mapTarget.addEventListener('focusout', () => {\n      this._setFocused(false);\n    });\n  }\n\n  /**\n   * Overrides method from `FocusMixin` to disable automatic focus management.\n   * See custom logic in __addMapFocusListeners\n   *\n   * @param {FocusEvent} _event\n   * @return {boolean}\n   * @override\n   * @protected\n   */\n  _shouldSetFocus(_event) {\n    return false;\n  }\n}\n\ndefineCustomElement(Map);\n\nexport { Map };\n"],
  "mappings": "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",
  "names": ["Control", "__extends", "Attribution", "__extends", "Rotate", "__extends", "Zoom", "__extends", "FullScreen", "EventType_default", "__extends", "MousePosition", "EventType_default", "html", "__extends", "MapRenderer", "layer", "i", "__extends", "CompositeMapRenderer", "Event_default", "EventType_default", "__extends", "Overlay", "__extends", "GroupEvent", "Property", "__extends", "LayerGroup", "__extends", "MapEvent", "__extends", "MapBrowserEvent", "__extends", "MapBrowserEventHandler", "EventType_default", "newEvent", "PriorityQueue", "__extends", "TileQueue", "__extends", "PluggableMap", "EventType_default", "equals", "__extends", "ControlledMap", "OverviewMap", "equals", "__extends", "ScaleLine", "html", "scale", "__extends", "ZoomSlider", "EventType_default", "__extends", "ZoomToExtent", "__extends", "DoubleClickZoom", "__extends", "DragPan", "centroid", "distance", "__extends", "DragRotate", "__extends", "RenderBox", "__extends", "DragBoxEvent", "__extends", "DragBox", "__extends", "DragZoom", "__extends", "KeyboardPan", "__extends", "KeyboardZoom", "Kinetic", "__extends", "MouseWheelZoom", "__extends", "PinchRotate", "centroid", "__extends", "PinchZoom", "distance", "centroid", "__extends", "DragAndDropEvent", "__extends", "DragAndDrop", "__extends", "DragRotateAndZoom", "__extends", "Circle", "squaredDistance", "rotate", "__extends", "LineString", "__extends", "MultiLineString", "__extends", "MultiPoint", "squaredDistance", "linearRingss", "__extends", "MultiPolygon", "linearRingss", "Mode", "__extends", "DrawEvent", "__extends", "Draw", "Mode", "squaredDistance", "Vector_default", "Mode", "__extends", "ExtentEvent", "__extends", "Extent", "Vector_default", "squaredDistance", "__extends", "ModifyEvent", "__extends", "Modify", "Vector_default", "getDefaultStyleFunction", "equals", "buffer", "squaredDistance", "__extends", "SelectEvent", "__extends", "Select", "getDefaultStyleFunction", "layer", "feature", "tempSegment", "__extends", "Snap", "squaredDistance", "defaults", "__extends", "Map", "defaults", "Map_default", "Map", "defaults", "Map_default"]
}
